// Name: Squad, Version: 13-01-2021

#include "../pch.h"

#ifdef _MSC_VER
	#pragma pack(push, 0x01)
#endif

/*!!HELPER_DEF!!*/

/*!!DEFINE!!*/

namespace UFT
{
//---------------------------------------------------------------------------
// Functions
//---------------------------------------------------------------------------

// Function Squad.SQWorldSettings.SetMapTexture
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture*                Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQWorldSettings::SetMapTexture(class UTexture* Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWorldSettings.SetMapTexture");

	ASQWorldSettings_SetMapTexture_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQWorldSettings.GetVehicleTeamRequirementDisabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQWorldSettings::GetVehicleTeamRequirementDisabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWorldSettings.GetVehicleTeamRequirementDisabled");

	ASQWorldSettings_GetVehicleTeamRequirementDisabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQWorldSettings.GetVehicleKitRequirementDisabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQWorldSettings::GetVehicleKitRequirementDisabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWorldSettings.GetVehicleKitRequirementDisabled");

	ASQWorldSettings_GetVehicleKitRequirementDisabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQWorldSettings.GetForceVehicleClaimingDisabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQWorldSettings::GetForceVehicleClaimingDisabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWorldSettings.GetForceVehicleClaimingDisabled");

	ASQWorldSettings_GetForceVehicleClaimingDisabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQWorldSettings.GetForceOutOfBoundsKillDisabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQWorldSettings::GetForceOutOfBoundsKillDisabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWorldSettings.GetForceOutOfBoundsKillDisabled");

	ASQWorldSettings_GetForceOutOfBoundsKillDisabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQWorldSettings.GetForceNoTeamChangeTimer
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQWorldSettings::GetForceNoTeamChangeTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWorldSettings.GetForceNoTeamChangeTimer");

	ASQWorldSettings_GetForceNoTeamChangeTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQWorldSettings.GetForceNoRespawnTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQWorldSettings::GetForceNoRespawnTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWorldSettings.GetForceNoRespawnTime");

	ASQWorldSettings_GetForceNoRespawnTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQWorldSettings.GetForceNoKitLimits
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQWorldSettings::GetForceNoKitLimits()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWorldSettings.GetForceNoKitLimits");

	ASQWorldSettings_GetForceNoKitLimits_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQWorldSettings.GetForceNoCommanderCooldowns
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQWorldSettings::GetForceNoCommanderCooldowns()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWorldSettings.GetForceNoCommanderCooldowns");

	ASQWorldSettings_GetForceNoCommanderCooldowns_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQWorldSettings.GetForceAllowCommanderActions
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQWorldSettings::GetForceAllowCommanderActions()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWorldSettings.GetForceAllowCommanderActions");

	ASQWorldSettings_GetForceAllowCommanderActions_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQWorldSettings.GetDeployablePlacementAlwaysValid
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQWorldSettings::GetDeployablePlacementAlwaysValid()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWorldSettings.GetDeployablePlacementAlwaysValid");

	ASQWorldSettings_GetDeployablePlacementAlwaysValid_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQWorldSettings.GetCommanderDisabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQWorldSettings::GetCommanderDisabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWorldSettings.GetCommanderDisabled");

	ASQWorldSettings_GetCommanderDisabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPawn.SetTeam
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESQTeam                        Team                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPawn::SetTeam(ESQTeam Team)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPawn.SetTeam");

	ASQPawn_SetTeam_Params params;
	params.Team = Team;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPawn.OnRep_Team
// (Native, Public)
void ASQPawn::OnRep_Team()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPawn.OnRep_Team");

	ASQPawn_OnRep_Team_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Squad.SQPawn.OnPossessionChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)
void ASQPawn::OnPossessionChanged__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Squad.SQPawn.OnPossessionChanged__DelegateSignature");

	ASQPawn_OnPossessionChanged__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPawn.GetTeam
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESQTeam                        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
ESQTeam ASQPawn::GetTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPawn.GetTeam");

	ASQPawn_GetTeam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPawn.BlueprintCalcCamera
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 InLocation                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                InRotation                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                          InFOV                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 OutLocation                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                OutRotation                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                          OutFOV                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPawn::BlueprintCalcCamera(float DeltaTime, const struct FVector& InLocation, const struct FRotator& InRotation, float InFOV, struct FVector* OutLocation, struct FRotator* OutRotation, float* OutFOV)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPawn.BlueprintCalcCamera");

	ASQPawn_BlueprintCalcCamera_Params params;
	params.DeltaTime = DeltaTime;
	params.InLocation = InLocation;
	params.InRotation = InRotation;
	params.InFOV = InFOV;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutLocation != nullptr)
		*OutLocation = params.OutLocation;
	if (OutRotation != nullptr)
		*OutRotation = params.OutRotation;
	if (OutFOV != nullptr)
		*OutFOV = params.OutFOV;

}


// Function Squad.SQVehicleSeat.SetTurnOut
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQVehicleSeat::SetTurnOut(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleSeat.SetTurnOut");

	ASQVehicleSeat_SetTurnOut_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleSeat.ServerSetTurnOut
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQVehicleSeat::ServerSetTurnOut(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleSeat.ServerSetTurnOut");

	ASQVehicleSeat_ServerSetTurnOut_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleSeat.ServerOnInteract
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
void ASQVehicleSeat::ServerOnInteract()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleSeat.ServerOnInteract");

	ASQVehicleSeat_ServerOnInteract_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleSeat.ServerCancelPlayerExit
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ASQPlayerController*     SPC                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQVehicleSeat::ServerCancelPlayerExit(class ASQPlayerController* SPC)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleSeat.ServerCancelPlayerExit");

	ASQVehicleSeat_ServerCancelPlayerExit_Params params;
	params.SPC = SPC;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleSeat.RequestChangeSeat
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class ASQPlayerController*     Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            RequestedSeat                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQVehicleSeat::RequestChangeSeat(class ASQPlayerController* Player, int RequestedSeat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleSeat.RequestChangeSeat");

	ASQVehicleSeat_RequestChangeSeat_Params params;
	params.Player = Player;
	params.RequestedSeat = RequestedSeat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleSeat.OverlayZoom
// (Native, Event, Public, BlueprintEvent)
void ASQVehicleSeat::OverlayZoom()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleSeat.OverlayZoom");

	ASQVehicleSeat_OverlayZoom_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleSeat.OverlayUnzoom
// (Native, Event, Public, BlueprintEvent)
void ASQVehicleSeat::OverlayUnzoom()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleSeat.OverlayUnzoom");

	ASQVehicleSeat_OverlayUnzoom_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleSeat.OnRep_TurnOut
// (Final, Native, Public)
void ASQVehicleSeat::OnRep_TurnOut()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleSeat.OnRep_TurnOut");

	ASQVehicleSeat_OnRep_TurnOut_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleSeat.OnRep_SeatHealth
// (Final, Native, Protected)
// Parameters:
// float                          PreviousHealth                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQVehicleSeat::OnRep_SeatHealth(float PreviousHealth)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleSeat.OnRep_SeatHealth");

	ASQVehicleSeat_OnRep_SeatHealth_Params params;
	params.PreviousHealth = PreviousHealth;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleSeat.OnPrevItem
// (Native, Public, BlueprintCallable)
void ASQVehicleSeat::OnPrevItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleSeat.OnPrevItem");

	ASQVehicleSeat_OnPrevItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleSeat.OnNextItem
// (Native, Public, BlueprintCallable)
void ASQVehicleSeat::OnNextItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleSeat.OnNextItem");

	ASQVehicleSeat_OnNextItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleSeat.GetWeaponAttachComponent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class USceneComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USceneComponent* ASQVehicleSeat::GetWeaponAttachComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleSeat.GetWeaponAttachComponent");

	ASQVehicleSeat_GetWeaponAttachComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleSeat.GetVehicleSeatComponent
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USQVehicleSeatComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USQVehicleSeatComponent* ASQVehicleSeat::GetVehicleSeatComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleSeat.GetVehicleSeatComponent");

	ASQVehicleSeat_GetVehicleSeatComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleSeat.GetVehicleResourceInventory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USQVehicleResourceWeaponInventoryComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USQVehicleResourceWeaponInventoryComponent* ASQVehicleSeat::GetVehicleResourceInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleSeat.GetVehicleResourceInventory");

	ASQVehicleSeat_GetVehicleResourceInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleSeat.GetVehicleInventory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USQVehicleInventoryComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USQVehicleInventoryComponent* ASQVehicleSeat::GetVehicleInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleSeat.GetVehicleInventory");

	ASQVehicleSeat_GetVehicleInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleSeat.GetVehicleEngine
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USQVehicleComponent*     ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USQVehicleComponent* ASQVehicleSeat::GetVehicleEngine()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleSeat.GetVehicleEngine");

	ASQVehicleSeat_GetVehicleEngine_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleSeat.GetVehicle
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASQVehicle*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASQVehicle* ASQVehicleSeat::GetVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleSeat.GetVehicle");

	ASQVehicleSeat_GetVehicle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleSeat.GetSoldierAttachComponent
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class USceneComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USceneComponent* ASQVehicleSeat::GetSoldierAttachComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleSeat.GetSoldierAttachComponent");

	ASQVehicleSeat_GetSoldierAttachComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleSeat.GetSeatHealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ASQVehicleSeat::GetSeatHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleSeat.GetSeatHealth");

	ASQVehicleSeat_GetSeatHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleSeat.GetNormalizedSeatHealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ASQVehicleSeat::GetNormalizedSeatHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleSeat.GetNormalizedSeatHealth");

	ASQVehicleSeat_GetNormalizedSeatHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleSeat.GetMasterPoseComponent
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class USkinnedMeshComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USkinnedMeshComponent* ASQVehicleSeat::GetMasterPoseComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleSeat.GetMasterPoseComponent");

	ASQVehicleSeat_GetMasterPoseComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleSeat.GetDefaultCameraLocationComponent
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class USceneComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USceneComponent* ASQVehicleSeat::GetDefaultCameraLocationComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleSeat.GetDefaultCameraLocationComponent");

	ASQVehicleSeat_GetDefaultCameraLocationComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleSeat.GetCameraComponent
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class UCameraComponent*        ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UCameraComponent* ASQVehicleSeat::GetCameraComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleSeat.GetCameraComponent");

	ASQVehicleSeat_GetCameraComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleSeat.GetADSCameraLocationComponent
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class USceneComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USceneComponent* ASQVehicleSeat::GetADSCameraLocationComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleSeat.GetADSCameraLocationComponent");

	ASQVehicleSeat_GetADSCameraLocationComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleSeat.Get3PAttachComponent
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class USceneComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USceneComponent* ASQVehicleSeat::Get3PAttachComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleSeat.Get3PAttachComponent");

	ASQVehicleSeat_Get3PAttachComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleSeat.Get1PAttachComponent
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// class USceneComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USceneComponent* ASQVehicleSeat::Get1PAttachComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleSeat.Get1PAttachComponent");

	ASQVehicleSeat_Get1PAttachComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicle.SwitchedSeat
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASQSoldier*              Soldier                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USQVehicleSeatComponent* PreviousSeat                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USQVehicleSeatComponent* NewSeat                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQVehicle::SwitchedSeat(class ASQSoldier* Soldier, class USQVehicleSeatComponent* PreviousSeat, class USQVehicleSeatComponent* NewSeat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicle.SwitchedSeat");

	ASQVehicle_SwitchedSeat_Params params;
	params.Soldier = Soldier;
	params.PreviousSeat = PreviousSeat;
	params.NewSeat = NewSeat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicle.SetEffectPhysmatParams
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class UParticleSystemComponent* ParticleSystem                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USQPhysicalMaterial*     SQPhysMat                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQVehicle::SetEffectPhysmatParams(class UParticleSystemComponent* ParticleSystem, class USQPhysicalMaterial* SQPhysMat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicle.SetEffectPhysmatParams");

	ASQVehicle_SetEffectPhysmatParams_Params params;
	params.ParticleSystem = ParticleSystem;
	params.SQPhysMat = SQPhysMat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicle.ResetLastSeatEventTime
// (Final, Native, Public, BlueprintCallable)
void ASQVehicle::ResetLastSeatEventTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicle.ResetLastSeatEventTime");

	ASQVehicle_ResetLastSeatEventTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicle.RepairVehicle
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  SourceRepairer                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESQRepairSource                RepairSource                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          RepairAmount                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          SoldierHealAmount              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQVehicle::RepairVehicle(class AActor* SourceRepairer, ESQRepairSource RepairSource, float RepairAmount, float SoldierHealAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicle.RepairVehicle");

	ASQVehicle_RepairVehicle_Params params;
	params.SourceRepairer = SourceRepairer;
	params.RepairSource = RepairSource;
	params.RepairAmount = RepairAmount;
	params.SoldierHealAmount = SoldierHealAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicle.PlayerRequestLeaveSeat
// (BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class ASQPlayerController*     Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQVehicle::PlayerRequestLeaveSeat(class ASQPlayerController* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicle.PlayerRequestLeaveSeat");

	ASQVehicle_PlayerRequestLeaveSeat_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicle.OutOfBoundsKillCallback
// (Final, Native, Public)
void ASQVehicle::OutOfBoundsKillCallback()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicle.OutOfBoundsKillCallback");

	ASQVehicle_OutOfBoundsKillCallback_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicle.OnVehicleRepaired
// (Final, Native, Public)
void ASQVehicle::OnVehicleRepaired()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicle.OnVehicleRepaired");

	ASQVehicle_OnVehicleRepaired_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicle.OnRep_HealthChanged
// (Final, Native, Public)
void ASQVehicle::OnRep_HealthChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicle.OnRep_HealthChanged");

	ASQVehicle_OnRep_HealthChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicle.OnRep_HasBeenDestroyed
// (Native, Protected)
void ASQVehicle::OnRep_HasBeenDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicle.OnRep_HasBeenDestroyed");

	ASQVehicle_OnRep_HasBeenDestroyed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicle.OnRep_DestroyedState
// (Native, Public)
void ASQVehicle::OnRep_DestroyedState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicle.OnRep_DestroyedState");

	ASQVehicle_OnRep_DestroyedState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicle.OnExitBoundary
// (Final, Native, Public)
// Parameters:
// class USQBoundaryListener*     Listener                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQBoundary*             Boundary                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQVehicle::OnExitBoundary(class USQBoundaryListener* Listener, class ASQBoundary* Boundary)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicle.OnExitBoundary");

	ASQVehicle_OnExitBoundary_Params params;
	params.Listener = Listener;
	params.Boundary = Boundary;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicle.OnEnterBoundary
// (Final, Native, Public)
// Parameters:
// class USQBoundaryListener*     Listener                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQBoundary*             Boundary                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQVehicle::OnEnterBoundary(class USQBoundaryListener* Listener, class ASQBoundary* Boundary)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicle.OnEnterBoundary");

	ASQVehicle_OnEnterBoundary_Params params;
	params.Listener = Listener;
	params.Boundary = Boundary;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicle.MulticastPlayDamageEffects
// (Net, Native, Event, NetMulticast, Protected, HasDefaults)
// Parameters:
// class UClass*                  DamageTypeClass                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 ImpactLocationZeroBased        (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQVehicle::MulticastPlayDamageEffects(class UClass* DamageTypeClass, const struct FVector& ImpactLocationZeroBased)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicle.MulticastPlayDamageEffects");

	ASQVehicle_MulticastPlayDamageEffects_Params params;
	params.DamageTypeClass = DamageTypeClass;
	params.ImpactLocationZeroBased = ImpactLocationZeroBased;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicle.LeftVehicle
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASQSoldier*              Soldier                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USQVehicleSeatComponent* PreviousSeat                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQVehicle::LeftVehicle(class ASQSoldier* Soldier, class USQVehicleSeatComponent* PreviousSeat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicle.LeftVehicle");

	ASQVehicle_LeftVehicle_Params params;
	params.Soldier = Soldier;
	params.PreviousSeat = PreviousSeat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicle.IsVehicleFull
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQVehicle::IsVehicleFull()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicle.IsVehicleFull");

	ASQVehicle_IsVehicleFull_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicle.IsVehicleEmpty
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQVehicle::IsVehicleEmpty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicle.IsVehicleEmpty");

	ASQVehicle_IsVehicleEmpty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicle.IsValidSeat
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            Seat                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQVehicle::IsValidSeat(int Seat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicle.IsValidSeat");

	ASQVehicle_IsValidSeat_Params params;
	params.Seat = Seat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicle.IsSeatHeldByClaimingSquad
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            Seat                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQVehicle::IsSeatHeldByClaimingSquad(int Seat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicle.IsSeatHeldByClaimingSquad");

	ASQVehicle_IsSeatHeldByClaimingSquad_Params params;
	params.Seat = Seat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicle.IsOutOfMapBounds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQVehicle::IsOutOfMapBounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicle.IsOutOfMapBounds");

	ASQVehicle_IsOutOfMapBounds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicle.GetSeats
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<class USQVehicleSeatComponent*> ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
TArray<class USQVehicleSeatComponent*> ASQVehicle::GetSeats()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicle.GetSeats");

	ASQVehicle_GetSeats_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicle.GetPlayersSeat
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASQPlayerController*     Player                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int ASQVehicle::GetPlayersSeat(class ASQPlayerController* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicle.GetPlayersSeat");

	ASQVehicle_GetPlayersSeat_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicle.GetNumOccupants
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int ASQVehicle::GetNumOccupants()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicle.GetNumOccupants");

	ASQVehicle_GetNumOccupants_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicle.GetInventoryAmmoPoints
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int ASQVehicle::GetInventoryAmmoPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicle.GetInventoryAmmoPoints");

	ASQVehicle_GetInventoryAmmoPoints_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicle.GetExitPoints
// (Native, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FTransform>      OutTransforms                  (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
void ASQVehicle::GetExitPoints(TArray<struct FTransform>* OutTransforms)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicle.GetExitPoints");

	ASQVehicle_GetExitPoints_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutTransforms != nullptr)
		*OutTransforms = params.OutTransforms;

}


// Function Squad.SQVehicle.GetDriverSeat
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USQVehicleSeatComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USQVehicleSeatComponent* ASQVehicle::GetDriverSeat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicle.GetDriverSeat");

	ASQVehicle_GetDriverSeat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicle.FindFirstAvailableSeat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASQPlayerController*     SPC                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIncludeDriverSeat             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int ASQVehicle::FindFirstAvailableSeat(class ASQPlayerController* SPC, bool bIncludeDriverSeat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicle.FindFirstAvailableSeat");

	ASQVehicle_FindFirstAvailableSeat_Params params;
	params.SPC = SPC;
	params.bIncludeDriverSeat = bIncludeDriverSeat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicle.ExitTurnOut
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USQVehicleSeatComponent* Seat                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQVehicle::ExitTurnOut(class USQVehicleSeatComponent* Seat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicle.ExitTurnOut");

	ASQVehicle_ExitTurnOut_Params params;
	params.Seat = Seat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicle.EnterTurnOut
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USQVehicleSeatComponent* Seat                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQVehicle::EnterTurnOut(class USQVehicleSeatComponent* Seat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicle.EnterTurnOut");

	ASQVehicle_EnterTurnOut_Params params;
	params.Seat = Seat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicle.EnteredVehicle
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASQSoldier*              Soldier                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USQVehicleSeatComponent* NewSeat                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQVehicle::EnteredVehicle(class ASQSoldier* Soldier, class USQVehicleSeatComponent* NewSeat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicle.EnteredVehicle");

	ASQVehicle_EnteredVehicle_Params params;
	params.Soldier = Soldier;
	params.NewSeat = NewSeat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicle.EjectPlayerFromSeat
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            Seat                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQVehicle::EjectPlayerFromSeat(int Seat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicle.EjectPlayerFromSeat");

	ASQVehicle_EjectPlayerFromSeat_Params params;
	params.Seat = Seat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicle.EjectAllPlayers
// (Native, Public, BlueprintCallable)
void ASQVehicle::EjectAllPlayers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicle.EjectAllPlayers");

	ASQVehicle_EjectAllPlayers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicle.DrivetrainComponentRepaired
// (Event, Public, BlueprintEvent)
// Parameters:
// class USQDriveTrainComponent*  DriveTrainComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQVehicle::DrivetrainComponentRepaired(class USQDriveTrainComponent* DriveTrainComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicle.DrivetrainComponentRepaired");

	ASQVehicle_DrivetrainComponentRepaired_Params params;
	params.DriveTrainComponent = DriveTrainComponent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicle.DrivetrainComponentDestroyed
// (Event, Public, BlueprintEvent)
// Parameters:
// class USQDriveTrainComponent*  DriveTrainComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQVehicle::DrivetrainComponentDestroyed(class USQDriveTrainComponent* DriveTrainComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicle.DrivetrainComponentDestroyed");

	ASQVehicle_DrivetrainComponentDestroyed_Params params;
	params.DriveTrainComponent = DriveTrainComponent;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicle.CanActAsRearmSource
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQVehicle::CanActAsRearmSource()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicle.CanActAsRearmSource");

	ASQVehicle_CanActAsRearmSource_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicle.BurnVehicle
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          VehicleBurnAmount              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          SoldierBurnAmount              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*             BurnCauser                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQVehicle::BurnVehicle(float VehicleBurnAmount, float SoldierBurnAmount, class AController* BurnCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicle.BurnVehicle");

	ASQVehicle_BurnVehicle_Params params;
	params.VehicleBurnAmount = VehicleBurnAmount;
	params.SoldierBurnAmount = SoldierBurnAmount;
	params.BurnCauser = BurnCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicle.BPClientDestroyed
// (Event, Public, BlueprintEvent)
void ASQVehicle::BPClientDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicle.BPClientDestroyed");

	ASQVehicle_BPClientDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicle.AmmoUpdated
// (Final, Native, Public)
void ASQVehicle::AmmoUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicle.AmmoUpdated");

	ASQVehicle_AmmoUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGroundVehicle.UpdateIsHardLanding
// (Native, Public)
void ASQGroundVehicle::UpdateIsHardLanding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGroundVehicle.UpdateIsHardLanding");

	ASQGroundVehicle_UpdateIsHardLanding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGroundVehicle.UpdateIsFlying
// (Native, Public)
void ASQGroundVehicle::UpdateIsFlying()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGroundVehicle.UpdateIsFlying");

	ASQGroundVehicle_UpdateIsFlying_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGroundVehicle.ServerVehicleHitSoldier
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// class ASQSoldier*              Soldier                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGroundVehicle::ServerVehicleHitSoldier(class ASQSoldier* Soldier)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGroundVehicle.ServerVehicleHitSoldier");

	ASQGroundVehicle_ServerVehicleHitSoldier_Params params;
	params.Soldier = Soldier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGroundVehicle.ServerSetEngineToggleActiveInput
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// bool                           bInIsEngineToggleActive        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGroundVehicle::ServerSetEngineToggleActiveInput(bool bInIsEngineToggleActive)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGroundVehicle.ServerSetEngineToggleActiveInput");

	ASQGroundVehicle_ServerSetEngineToggleActiveInput_Params params;
	params.bInIsEngineToggleActive = bInIsEngineToggleActive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGroundVehicle.ServerSetEngineBoostPressed
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// bool                           bInHasEngineBoostBeenPressed   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGroundVehicle::ServerSetEngineBoostPressed(bool bInHasEngineBoostBeenPressed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGroundVehicle.ServerSetEngineBoostPressed");

	ASQGroundVehicle_ServerSetEngineBoostPressed_Params params;
	params.bInHasEngineBoostBeenPressed = bInHasEngineBoostBeenPressed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGroundVehicle.ServerSetEngineActiveInput
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// bool                           bNewEngineActive               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGroundVehicle::ServerSetEngineActiveInput(bool bNewEngineActive)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGroundVehicle.ServerSetEngineActiveInput");

	ASQGroundVehicle_ServerSetEngineActiveInput_Params params;
	params.bNewEngineActive = bNewEngineActive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGroundVehicle.ServerEmergencyTeleport
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// float                          HeightOffset                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          YawDegrees                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGroundVehicle::ServerEmergencyTeleport(float HeightOffset, float YawDegrees)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGroundVehicle.ServerEmergencyTeleport");

	ASQGroundVehicle_ServerEmergencyTeleport_Params params;
	params.HeightOffset = HeightOffset;
	params.YawDegrees = YawDegrees;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGroundVehicle.OnRep_ShouldSimulate
// (Native, Protected)
void ASQGroundVehicle::OnRep_ShouldSimulate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGroundVehicle.OnRep_ShouldSimulate");

	ASQGroundVehicle_OnRep_ShouldSimulate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGroundVehicle.OnRep_EngineToggleActive
// (Native, Protected)
void ASQGroundVehicle::OnRep_EngineToggleActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGroundVehicle.OnRep_EngineToggleActive");

	ASQGroundVehicle_OnRep_EngineToggleActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGroundVehicle.OnRep_EngineActive
// (Native, Protected)
void ASQGroundVehicle::OnRep_EngineActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGroundVehicle.OnRep_EngineActive");

	ASQGroundVehicle_OnRep_EngineActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGroundVehicle.OnRagdollBeginOverlap
// (Native, Protected, HasOutParms)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void ASQGroundVehicle::OnRagdollBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGroundVehicle.OnRagdollBeginOverlap");

	ASQGroundVehicle_OnRagdollBeginOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGroundVehicle.IsHandbrakeActive
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQGroundVehicle::IsHandbrakeActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGroundVehicle.IsHandbrakeActive");

	ASQGroundVehicle_IsHandbrakeActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGroundVehicle.IsEngineToggleActive
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQGroundVehicle::IsEngineToggleActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGroundVehicle.IsEngineToggleActive");

	ASQGroundVehicle_IsEngineToggleActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGroundVehicle.IsEngineActive
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQGroundVehicle::IsEngineActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGroundVehicle.IsEngineActive");

	ASQGroundVehicle_IsEngineActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGroundVehicle.GetForwardSpeed
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ASQGroundVehicle::GetForwardSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGroundVehicle.GetForwardSpeed");

	ASQGroundVehicle_GetForwardSpeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGroundVehicle.GetEngineRPM
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ASQGroundVehicle::GetEngineRPM()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGroundVehicle.GetEngineRPM");

	ASQGroundVehicle_GetEngineRPM_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGroundVehicle.GetEngineMaxRPM
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ASQGroundVehicle::GetEngineMaxRPM()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGroundVehicle.GetEngineMaxRPM");

	ASQGroundVehicle_GetEngineMaxRPM_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGroundVehicle.GetEngineLoad
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ASQGroundVehicle::GetEngineLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGroundVehicle.GetEngineLoad");

	ASQGroundVehicle_GetEngineLoad_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGroundVehicle.GetCurrentEngineToggleRequiredDuration
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ASQGroundVehicle::GetCurrentEngineToggleRequiredDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGroundVehicle.GetCurrentEngineToggleRequiredDuration");

	ASQGroundVehicle_GetCurrentEngineToggleRequiredDuration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGroundVehicle.GetCurrentEngineTogglePercentage
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ASQGroundVehicle::GetCurrentEngineTogglePercentage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGroundVehicle.GetCurrentEngineTogglePercentage");

	ASQGroundVehicle_GetCurrentEngineTogglePercentage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGroundVehicle.GetCurrentEngineToggleElapsedTime
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ASQGroundVehicle::GetCurrentEngineToggleElapsedTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGroundVehicle.GetCurrentEngineToggleElapsedTime");

	ASQGroundVehicle_GetCurrentEngineToggleElapsedTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGroundVehicle.EmergencyTeleport
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// float                          HeightOffset                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          YawDegrees                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGroundVehicle::EmergencyTeleport(float HeightOffset, float YawDegrees)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGroundVehicle.EmergencyTeleport");

	ASQGroundVehicle_EmergencyTeleport_Params params;
	params.HeightOffset = HeightOffset;
	params.YawDegrees = YawDegrees;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGroundVehicle.EjectAllOpenSeatPlayers
// (Native, Public, BlueprintCallable)
void ASQGroundVehicle::EjectAllOpenSeatPlayers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGroundVehicle.EjectAllOpenSeatPlayers");

	ASQGroundVehicle_EjectAllOpenSeatPlayers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQWheeledVehicleBase.DestroyWheel
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class USQDriveTrainComponent*  DriveTrainComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bReverseDamage                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQWheeledVehicleBase::DestroyWheel(class USQDriveTrainComponent* DriveTrainComponent, bool bReverseDamage)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWheeledVehicleBase.DestroyWheel");

	ASQWheeledVehicleBase_DestroyWheel_Params params;
	params.DriveTrainComponent = DriveTrainComponent;
	params.bReverseDamage = bReverseDamage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQWeaponAttachment_Scope.ShowADSMesh
// (Final, Native, Public, BlueprintCallable)
void USQWeaponAttachment_Scope::ShowADSMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeaponAttachment_Scope.ShowADSMesh");

	USQWeaponAttachment_Scope_ShowADSMesh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQWeaponAttachment_Scope.SetMeshTransitionSetting
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FSQMeshTransitionSettings MeshTransitionSetting          (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
void USQWeaponAttachment_Scope::SetMeshTransitionSetting(const struct FSQMeshTransitionSettings& MeshTransitionSetting)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeaponAttachment_Scope.SetMeshTransitionSetting");

	USQWeaponAttachment_Scope_SetMeshTransitionSetting_Params params;
	params.MeshTransitionSetting = MeshTransitionSetting;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQWeaponAttachment_Scope.HideADSMesh
// (Final, Native, Public, BlueprintCallable)
void USQWeaponAttachment_Scope::HideADSMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeaponAttachment_Scope.HideADSMesh");

	USQWeaponAttachment_Scope_HideADSMesh_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAnimInstance.UpdateStaticItemInfo
// (Native, Public, BlueprintCallable)
// Parameters:
// class USQItemStaticInfo*       InfoObject                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQAnimInstance::UpdateStaticItemInfo(class USQItemStaticInfo* InfoObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnimInstance.UpdateStaticItemInfo");

	USQAnimInstance_UpdateStaticItemInfo_Params params;
	params.InfoObject = InfoObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAnimInstance.UpdateBoredMontage
// (Native, Public, BlueprintCallable)
void USQAnimInstance::UpdateBoredMontage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnimInstance.UpdateBoredMontage");

	USQAnimInstance_UpdateBoredMontage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAnimInstance.StopAnimationHandler
// (Native, Public)
// Parameters:
// class UAnimMontage*            WeaponMontage                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*            Soldier1pMontage               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*            Soldier3pMontage               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          blendOutTime                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bStopAllWeaponAnims            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQAnimInstance::StopAnimationHandler(class UAnimMontage* WeaponMontage, class UAnimMontage* Soldier1pMontage, class UAnimMontage* Soldier3pMontage, float blendOutTime, bool bStopAllWeaponAnims)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnimInstance.StopAnimationHandler");

	USQAnimInstance_StopAnimationHandler_Params params;
	params.WeaponMontage = WeaponMontage;
	params.Soldier1pMontage = Soldier1pMontage;
	params.Soldier3pMontage = Soldier3pMontage;
	params.blendOutTime = blendOutTime;
	params.bStopAllWeaponAnims = bStopAllWeaponAnims;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAnimInstance.SetAnimationPlayRateHandler
// (Native, Public)
// Parameters:
// class UAnimMontage*            WeaponMontage                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*            Soldier1pMontage               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*            Soldier3pMontage               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          NewPlayRate                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQAnimInstance::SetAnimationPlayRateHandler(class UAnimMontage* WeaponMontage, class UAnimMontage* Soldier1pMontage, class UAnimMontage* Soldier3pMontage, float NewPlayRate)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnimInstance.SetAnimationPlayRateHandler");

	USQAnimInstance_SetAnimationPlayRateHandler_Params params;
	params.WeaponMontage = WeaponMontage;
	params.Soldier1pMontage = Soldier1pMontage;
	params.Soldier3pMontage = Soldier3pMontage;
	params.NewPlayRate = NewPlayRate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAnimInstance.ResumeAnimationHandler
// (Native, Public)
// Parameters:
// class UAnimMontage*            WeaponMontage                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*            Soldier1pMontage               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*            Soldier3pMontage               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQAnimInstance::ResumeAnimationHandler(class UAnimMontage* WeaponMontage, class UAnimMontage* Soldier1pMontage, class UAnimMontage* Soldier3pMontage)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnimInstance.ResumeAnimationHandler");

	USQAnimInstance_ResumeAnimationHandler_Params params;
	params.WeaponMontage = WeaponMontage;
	params.Soldier1pMontage = Soldier1pMontage;
	params.Soldier3pMontage = Soldier3pMontage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAnimInstance.PlayAnimationHandler
// (Native, Public)
// Parameters:
// class UAnimMontage*            WeaponMontage                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*            Soldier1pMontage               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*            Soldier3pMontage               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQAnimInstance::PlayAnimationHandler(class UAnimMontage* WeaponMontage, class UAnimMontage* Soldier1pMontage, class UAnimMontage* Soldier3pMontage)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnimInstance.PlayAnimationHandler");

	USQAnimInstance_PlayAnimationHandler_Params params;
	params.WeaponMontage = WeaponMontage;
	params.Soldier1pMontage = Soldier1pMontage;
	params.Soldier3pMontage = Soldier3pMontage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAnimInstance.PauseAnimationHandler
// (Native, Public)
// Parameters:
// class UAnimMontage*            WeaponMontage                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*            Soldier1pMontage               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*            Soldier3pMontage               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQAnimInstance::PauseAnimationHandler(class UAnimMontage* WeaponMontage, class UAnimMontage* Soldier1pMontage, class UAnimMontage* Soldier3pMontage)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnimInstance.PauseAnimationHandler");

	USQAnimInstance_PauseAnimationHandler_Params params;
	params.WeaponMontage = WeaponMontage;
	params.Soldier1pMontage = Soldier1pMontage;
	params.Soldier3pMontage = Soldier3pMontage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAnimInstance.EndLoopAnimationHandler
// (Native, Public)
// Parameters:
// class UAnimMontage*            WeaponMontage                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*            Soldier1pMontage               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*            Soldier3pMontage               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSQMontageSectionNames  SectionNames                   (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
void USQAnimInstance::EndLoopAnimationHandler(class UAnimMontage* WeaponMontage, class UAnimMontage* Soldier1pMontage, class UAnimMontage* Soldier3pMontage, const struct FSQMontageSectionNames& SectionNames)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnimInstance.EndLoopAnimationHandler");

	USQAnimInstance_EndLoopAnimationHandler_Params params;
	params.WeaponMontage = WeaponMontage;
	params.Soldier1pMontage = Soldier1pMontage;
	params.Soldier3pMontage = Soldier3pMontage;
	params.SectionNames = SectionNames;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMovementComponentBase.ServerMoveOld
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// TArray<unsigned char>          Move                           (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
void USQMovementComponentBase::ServerMoveOld(TArray<unsigned char> Move)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMovementComponentBase.ServerMoveOld");

	USQMovementComponentBase_ServerMoveOld_Params params;
	params.Move = Move;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMovementComponentBase.ServerMoveDual
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// TArray<unsigned char>          Move1                          (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<unsigned char>          Move2                          (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
void USQMovementComponentBase::ServerMoveDual(TArray<unsigned char> Move1, TArray<unsigned char> Move2)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMovementComponentBase.ServerMoveDual");

	USQMovementComponentBase_ServerMoveDual_Params params;
	params.Move1 = Move1;
	params.Move2 = Move2;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMovementComponentBase.ServerMove
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// TArray<unsigned char>          Move                           (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
void USQMovementComponentBase::ServerMove(TArray<unsigned char> Move)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMovementComponentBase.ServerMove");

	USQMovementComponentBase_ServerMove_Params params;
	params.Move = Move;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMovementComponentBase.OnRep_Movement
// (Native, Protected)
void USQMovementComponentBase::OnRep_Movement()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMovementComponentBase.OnRep_Movement");

	USQMovementComponentBase_OnRep_Movement_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMovementComponentBase.IsSimulatedProxy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQMovementComponentBase::IsSimulatedProxy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMovementComponentBase.IsSimulatedProxy");

	USQMovementComponentBase_IsSimulatedProxy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQMovementComponentBase.IsServerComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQMovementComponentBase::IsServerComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMovementComponentBase.IsServerComponent");

	USQMovementComponentBase_IsServerComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQMovementComponentBase.IsLocallyControlledComponent
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQMovementComponentBase::IsLocallyControlledComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMovementComponentBase.IsLocallyControlledComponent");

	USQMovementComponentBase_IsLocallyControlledComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQMovementComponentBase.GetCurrentVelocity
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector USQMovementComponentBase::GetCurrentVelocity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMovementComponentBase.GetCurrentVelocity");

	USQMovementComponentBase_GetCurrentVelocity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQMovementComponentBase.GetCurrentRotationalVelocity
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector USQMovementComponentBase::GetCurrentRotationalVelocity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMovementComponentBase.GetCurrentRotationalVelocity");

	USQMovementComponentBase_GetCurrentRotationalVelocity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQMovementComponentBase.GetCurrentRotationalAcceleration
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector USQMovementComponentBase::GetCurrentRotationalAcceleration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMovementComponentBase.GetCurrentRotationalAcceleration");

	USQMovementComponentBase_GetCurrentRotationalAcceleration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQMovementComponentBase.GetCurrentAcceleration
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector USQMovementComponentBase::GetCurrentAcceleration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMovementComponentBase.GetCurrentAcceleration");

	USQMovementComponentBase_GetCurrentAcceleration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQMovementComponentBase.ClientAdjustPositionAndRotation
// (Net, Native, Event, Protected, HasDefaults, NetClient)
// Parameters:
// float                          Timestamp                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 LocationZeroBased              (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 InVelocity                     (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                Rotation                       (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
void USQMovementComponentBase::ClientAdjustPositionAndRotation(float Timestamp, const struct FVector& LocationZeroBased, const struct FVector& InVelocity, const struct FRotator& Rotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMovementComponentBase.ClientAdjustPositionAndRotation");

	USQMovementComponentBase_ClientAdjustPositionAndRotation_Params params;
	params.Timestamp = Timestamp;
	params.LocationZeroBased = LocationZeroBased;
	params.InVelocity = InVelocity;
	params.Rotation = Rotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMovementComponentBase.ClientAdjustPosition
// (Net, Native, Event, Protected, HasDefaults, NetClient)
// Parameters:
// float                          Timestamp                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 LocationZeroBased              (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 InVelocity                     (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQMovementComponentBase::ClientAdjustPosition(float Timestamp, const struct FVector& LocationZeroBased, const struct FVector& InVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMovementComponentBase.ClientAdjustPosition");

	USQMovementComponentBase_ClientAdjustPosition_Params params;
	params.Timestamp = Timestamp;
	params.LocationZeroBased = LocationZeroBased;
	params.InVelocity = InVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMovementComponentBase.ClientAckGoodMove
// (Net, Native, Event, Protected, NetClient)
// Parameters:
// float                          Timestamp                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQMovementComponentBase::ClientAckGoodMove(float Timestamp)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMovementComponentBase.ClientAckGoodMove");

	USQMovementComponentBase_ClientAckGoodMove_Params params;
	params.Timestamp = Timestamp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMovementComponentPacked.ClientAdjustRotation
// (Net, Native, Event, Protected, HasDefaults, NetClient)
// Parameters:
// float                          Timestamp                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                InRotation                     (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector                 InRotationalVelocity           (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQMovementComponentPacked::ClientAdjustRotation(float Timestamp, const struct FRotator& InRotation, const struct FVector& InRotationalVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMovementComponentPacked.ClientAdjustRotation");

	USQMovementComponentPacked_ClientAdjustRotation_Params params;
	params.Timestamp = Timestamp;
	params.InRotation = InRotation;
	params.InRotationalVelocity = InRotationalVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVelocityRotatingMovementComponent.ToggleStabilization
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQVelocityRotatingMovementComponent::ToggleStabilization()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVelocityRotatingMovementComponent.ToggleStabilization");

	USQVelocityRotatingMovementComponent_ToggleStabilization_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVelocityRotatingMovementComponent.SetStabilizationTargetHeading
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                InTargetHeading                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
void USQVelocityRotatingMovementComponent::SetStabilizationTargetHeading(const struct FRotator& InTargetHeading)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVelocityRotatingMovementComponent.SetStabilizationTargetHeading");

	USQVelocityRotatingMovementComponent_SetStabilizationTargetHeading_Params params;
	params.InTargetHeading = InTargetHeading;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVelocityRotatingMovementComponent.SetStabilizationEnabled
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           bInIsStabilizationEnabled      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQVelocityRotatingMovementComponent::SetStabilizationEnabled(bool bInIsStabilizationEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVelocityRotatingMovementComponent.SetStabilizationEnabled");

	USQVelocityRotatingMovementComponent_SetStabilizationEnabled_Params params;
	params.bInIsStabilizationEnabled = bInIsStabilizationEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVelocityRotatingMovementComponent.ServerSetStabilizationTargetHeading
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FRotator                InTargetHeading                (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
void USQVelocityRotatingMovementComponent::ServerSetStabilizationTargetHeading(const struct FRotator& InTargetHeading)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVelocityRotatingMovementComponent.ServerSetStabilizationTargetHeading");

	USQVelocityRotatingMovementComponent_ServerSetStabilizationTargetHeading_Params params;
	params.InTargetHeading = InTargetHeading;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVelocityRotatingMovementComponent.OnRep_RotationReplicatedMovement
// (Native, Protected)
void USQVelocityRotatingMovementComponent::OnRep_RotationReplicatedMovement()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVelocityRotatingMovementComponent.OnRep_RotationReplicatedMovement");

	USQVelocityRotatingMovementComponent_OnRep_RotationReplicatedMovement_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVelocityRotatingMovementComponent.IsStabilizationEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQVelocityRotatingMovementComponent::IsStabilizationEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVelocityRotatingMovementComponent.IsStabilizationEnabled");

	USQVelocityRotatingMovementComponent_IsStabilizationEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVelocityRotatingMovementComponent.GetWorldRotation
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FQuat                   ReturnValue                    (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
struct FQuat USQVelocityRotatingMovementComponent::GetWorldRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVelocityRotatingMovementComponent.GetWorldRotation");

	USQVelocityRotatingMovementComponent_GetWorldRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVelocityRotatingMovementComponent.GetCurrentRotation
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
struct FRotator USQVelocityRotatingMovementComponent::GetCurrentRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVelocityRotatingMovementComponent.GetCurrentRotation");

	USQVelocityRotatingMovementComponent_GetCurrentRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVelocityRotatingMovementComponent.GetCurrentLocation
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector USQVelocityRotatingMovementComponent::GetCurrentLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVelocityRotatingMovementComponent.GetCurrentLocation");

	USQVelocityRotatingMovementComponent_GetCurrentLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVelocityRotatingMovementComponent.ClientSetStabilizationTargetHeading
// (Net, NetReliable, Native, Event, Protected, HasDefaults, NetClient)
// Parameters:
// struct FRotator                InTargetHeading                (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
void USQVelocityRotatingMovementComponent::ClientSetStabilizationTargetHeading(const struct FRotator& InTargetHeading)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVelocityRotatingMovementComponent.ClientSetStabilizationTargetHeading");

	USQVelocityRotatingMovementComponent_ClientSetStabilizationTargetHeading_Params params;
	params.InTargetHeading = InTargetHeading;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVelocityRotatingMovementComponent.AddRotationInput
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                InRotationInput                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
void USQVelocityRotatingMovementComponent::AddRotationInput(const struct FRotator& InRotationInput)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVelocityRotatingMovementComponent.AddRotationInput");

	USQVelocityRotatingMovementComponent_AddRotationInput_Params params;
	params.InRotationInput = InRotationInput;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleComponent.OnRep_VehicleComponentState
// (Final, Native, Private)
// Parameters:
// ESQVehicleComponentStates      PreviousState                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQVehicleComponent::OnRep_VehicleComponentState(ESQVehicleComponentStates PreviousState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleComponent.OnRep_VehicleComponentState");

	USQVehicleComponent_OnRep_VehicleComponentState_Params params;
	params.PreviousState = PreviousState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleComponent.OnRep_HealthChanged
// (Native, Protected)
// Parameters:
// float                          PreviousHealthValue            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQVehicleComponent::OnRep_HealthChanged(float PreviousHealthValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleComponent.OnRep_HealthChanged");

	USQVehicleComponent_OnRep_HealthChanged_Params params;
	params.PreviousHealthValue = PreviousHealthValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleComponent.MulticastComponentRepairedFromDestruction
// (Net, NetReliable, Native, Event, NetMulticast, Protected, NetValidate)
void USQVehicleComponent::MulticastComponentRepairedFromDestruction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleComponent.MulticastComponentRepairedFromDestruction");

	USQVehicleComponent_MulticastComponentRepairedFromDestruction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleComponent.MulticastComponentFullyRepaired
// (Net, NetReliable, Native, Event, NetMulticast, Protected, NetValidate)
void USQVehicleComponent::MulticastComponentFullyRepaired()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleComponent.MulticastComponentFullyRepaired");

	USQVehicleComponent_MulticastComponentFullyRepaired_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleComponent.MulticastComponentDestroyed
// (Net, NetReliable, Native, Event, NetMulticast, Protected, NetValidate)
// Parameters:
// class UClass*                  DamageTypeClass                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQVehicleComponent::MulticastComponentDestroyed(class UClass* DamageTypeClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleComponent.MulticastComponentDestroyed");

	USQVehicleComponent_MulticastComponentDestroyed_Params params;
	params.DamageTypeClass = DamageTypeClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleComponent.IsDestroyed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQVehicleComponent::IsDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleComponent.IsDestroyed");

	USQVehicleComponent_IsDestroyed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleComponent.GetVehicleComponentState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESQVehicleComponentStates      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
ESQVehicleComponentStates USQVehicleComponent::GetVehicleComponentState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleComponent.GetVehicleComponentState");

	USQVehicleComponent_GetVehicleComponentState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleComponent.GetPreviousVehicleComponentState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESQVehicleComponentStates      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
ESQVehicleComponentStates USQVehicleComponent::GetPreviousVehicleComponentState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleComponent.GetPreviousVehicleComponentState");

	USQVehicleComponent_GetPreviousVehicleComponentState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleComponent.GetParentVehicle
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// class ASQVehicle*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASQVehicle* USQVehicleComponent::GetParentVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleComponent.GetParentVehicle");

	USQVehicleComponent_GetParentVehicle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleComponent.GetNormalizedHealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQVehicleComponent::GetNormalizedHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleComponent.GetNormalizedHealth");

	USQVehicleComponent_GetNormalizedHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleComponent.GetMaximumHealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQVehicleComponent::GetMaximumHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleComponent.GetMaximumHealth");

	USQVehicleComponent_GetMaximumHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleComponent.GetHealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQVehicleComponent::GetHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleComponent.GetHealth");

	USQVehicleComponent_GetHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleWheel.GetBoneName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FName USQVehicleWheel::GetBoneName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleWheel.GetBoneName");

	USQVehicleWheel_GetBoneName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQEquipableItem.UpdateSprintBobbing
// (Native, Protected, BlueprintCallable)
// Parameters:
// bool                           bForceStopLoop                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQEquipableItem::UpdateSprintBobbing(bool bForceStopLoop)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.UpdateSprintBobbing");

	ASQEquipableItem_UpdateSprintBobbing_Params params;
	params.bForceStopLoop = bForceStopLoop;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQEquipableItem.UpdateMoveInputs
// (Native, Protected, BlueprintCallable)
// Parameters:
// bool                           bForceStopLoop                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQEquipableItem::UpdateMoveInputs(bool bForceStopLoop)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.UpdateMoveInputs");

	ASQEquipableItem_UpdateMoveInputs_Params params;
	params.bForceStopLoop = bForceStopLoop;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQEquipableItem.UpdateMoveBobbing
// (Native, Protected, BlueprintCallable)
void ASQEquipableItem::UpdateMoveBobbing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.UpdateMoveBobbing");

	ASQEquipableItem_UpdateMoveBobbing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQEquipableItem.UpdateLeanRight
// (Native, Protected, BlueprintCallable)
void ASQEquipableItem::UpdateLeanRight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.UpdateLeanRight");

	ASQEquipableItem_UpdateLeanRight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQEquipableItem.UpdateLeanLeft
// (Native, Protected, BlueprintCallable)
void ASQEquipableItem::UpdateLeanLeft()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.UpdateLeanLeft");

	ASQEquipableItem_UpdateLeanLeft_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQEquipableItem.UpdateFirstPersonVisibility
// (Final, Native, Public, BlueprintCallable)
void ASQEquipableItem::UpdateFirstPersonVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.UpdateFirstPersonVisibility");

	ASQEquipableItem_UpdateFirstPersonVisibility_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQEquipableItem.ShovelHitDeployable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FHitResult              HitResult                      (Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                           bRemovingHealth                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQDeployable*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASQDeployable* ASQEquipableItem::ShovelHitDeployable(const struct FHitResult& HitResult, bool bRemovingHealth)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.ShovelHitDeployable");

	ASQEquipableItem_ShovelHitDeployable_Params params;
	params.HitResult = HitResult;
	params.bRemovingHealth = bRemovingHealth;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQEquipableItem.SetLoweringAnimation
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           bLowered                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQEquipableItem::SetLoweringAnimation(bool bLowered)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.SetLoweringAnimation");

	ASQEquipableItem_SetLoweringAnimation_Params params;
	params.bLowered = bLowered;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQEquipableItem.ServerConsumeItem
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
void ASQEquipableItem::ServerConsumeItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.ServerConsumeItem");

	ASQEquipableItem_ServerConsumeItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQEquipableItem.ReinitializeEquip
// (Final, Native, Public, BlueprintCallable)
void ASQEquipableItem::ReinitializeEquip()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.ReinitializeEquip");

	ASQEquipableItem_ReinitializeEquip_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQEquipableItem.ReinitializeAnimInstances
// (Final, Native, Public, BlueprintCallable)
void ASQEquipableItem::ReinitializeAnimInstances()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.ReinitializeAnimInstances");

	ASQEquipableItem_ReinitializeAnimInstances_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQEquipableItem.Rearm
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// int                            Quantity                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ASQEquipableItem::Rearm(int Quantity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.Rearm");

	ASQEquipableItem_Rearm_Params params;
	params.Quantity = Quantity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQEquipableItem.PlayUnequipAnimation
// (Native, Protected, BlueprintCallable)
void ASQEquipableItem::PlayUnequipAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.PlayUnequipAnimation");

	ASQEquipableItem_PlayUnequipAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQEquipableItem.PlaySoundAttachedToWeapon
// (Final, Native, Protected, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class USoundCue*               Sound1p                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundCue*               Sound3p                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FName                   SocketName                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 FallbackOrigin                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQEquipableItem::PlaySoundAttachedToWeapon(class USoundCue* Sound1p, class USoundCue* Sound3p, const struct FName& SocketName, const struct FVector& FallbackOrigin)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.PlaySoundAttachedToWeapon");

	ASQEquipableItem_PlaySoundAttachedToWeapon_Params params;
	params.Sound1p = Sound1p;
	params.Sound3p = Sound3p;
	params.SocketName = SocketName;
	params.FallbackOrigin = FallbackOrigin;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQEquipableItem.PlayEquipAnimation
// (Native, Protected, BlueprintCallable)
void ASQEquipableItem::PlayEquipAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.PlayEquipAnimation");

	ASQEquipableItem_PlayEquipAnimation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQEquipableItem.Pickup
// (Final, Native, Public, BlueprintCallable)
void ASQEquipableItem::Pickup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.Pickup");

	ASQEquipableItem_Pickup_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQEquipableItem.PendingEquip
// (Final, Native, Private)
void ASQEquipableItem::PendingEquip()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.PendingEquip");

	ASQEquipableItem_PendingEquip_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQEquipableItem.IsFirstPersonViewTarget
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQEquipableItem::IsFirstPersonViewTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.IsFirstPersonViewTarget");

	ASQEquipableItem_IsFirstPersonViewTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQEquipableItem.IsEquipped
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQEquipableItem::IsEquipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.IsEquipped");

	ASQEquipableItem_IsEquipped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQEquipableItem.IsBeingUsed
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQEquipableItem::IsBeingUsed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.IsBeingUsed");

	ASQEquipableItem_IsBeingUsed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQEquipableItem.IsAmmoFull
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQEquipableItem::IsAmmoFull()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.IsAmmoFull");

	ASQEquipableItem_IsAmmoFull_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQEquipableItem.InitializeAmmoValues
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FSQInventoryData        ItemClass                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                           bSpawnMaxAmmo                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSQPersistedAmmoCount   PersistedAmmo                  (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
void ASQEquipableItem::InitializeAmmoValues(const struct FSQInventoryData& ItemClass, bool bSpawnMaxAmmo, const struct FSQPersistedAmmoCount& PersistedAmmo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.InitializeAmmoValues");

	ASQEquipableItem_InitializeAmmoValues_Params params;
	params.ItemClass = ItemClass;
	params.bSpawnMaxAmmo = bSpawnMaxAmmo;
	params.PersistedAmmo = PersistedAmmo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQEquipableItem.HasAmmo
// (Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQEquipableItem::HasAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.HasAmmo");

	ASQEquipableItem_HasAmmo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQEquipableItem.GetRearmMaxItemCount
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int ASQEquipableItem::GetRearmMaxItemCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.GetRearmMaxItemCount");

	ASQEquipableItem_GetRearmMaxItemCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQEquipableItem.GetRearmItemCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int ASQEquipableItem::GetRearmItemCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.GetRearmItemCount");

	ASQEquipableItem_GetRearmItemCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQEquipableItem.GetOwnerPawn
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APawn*                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class APawn* ASQEquipableItem::GetOwnerPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.GetOwnerPawn");

	ASQEquipableItem_GetOwnerPawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQEquipableItem.GetMesh
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bGetMesh1P                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMeshComponent*  ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USkeletalMeshComponent* ASQEquipableItem::GetMesh(bool bGetMesh1P)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.GetMesh");

	ASQEquipableItem_GetMesh_Params params;
	params.bGetMesh1P = bGetMesh1P;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQEquipableItem.GetItemStaticInfo
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USQItemStaticInfo*       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USQItemStaticInfo* ASQEquipableItem::GetItemStaticInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.GetItemStaticInfo");

	ASQEquipableItem_GetItemStaticInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQEquipableItem.GetFireDirection
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector ASQEquipableItem::GetFireDirection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.GetFireDirection");

	ASQEquipableItem_GetFireDirection_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQEquipableItem.EndUse
// (Native, Public, BlueprintCallable)
void ASQEquipableItem::EndUse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.EndUse");

	ASQEquipableItem_EndUse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQEquipableItem.EndAltUse
// (Native, Public, BlueprintCallable)
void ASQEquipableItem::EndAltUse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.EndAltUse");

	ASQEquipableItem_EndAltUse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQEquipableItem.Drop
// (Final, Native, Public, BlueprintCallable)
void ASQEquipableItem::Drop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.Drop");

	ASQEquipableItem_Drop_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQEquipableItem.CreatePersistingAmmoCount
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// struct FSQPersistedAmmoCount   ReturnValue                    (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
struct FSQPersistedAmmoCount ASQEquipableItem::CreatePersistingAmmoCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.CreatePersistingAmmoCount");

	ASQEquipableItem_CreatePersistingAmmoCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQEquipableItem.CanShovel
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ShovelTraceLength              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ShovelTraceSphereRadius        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                           bRemovingHealth                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQDeployable*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASQDeployable* ASQEquipableItem::CanShovel(int ShovelTraceLength, float ShovelTraceSphereRadius, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, bool bRemovingHealth)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.CanShovel");

	ASQEquipableItem_CanShovel_Params params;
	params.ShovelTraceLength = ShovelTraceLength;
	params.ShovelTraceSphereRadius = ShovelTraceSphereRadius;
	params.ObjectTypes = ObjectTypes;
	params.bRemovingHealth = bRemovingHealth;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQEquipableItem.CanRearmFromType
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESQRearmType                   RearmType                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQEquipableItem::CanRearmFromType(ESQRearmType RearmType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.CanRearmFromType");

	ASQEquipableItem_CanRearmFromType_Params params;
	params.RearmType = RearmType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQEquipableItem.CanRearm
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQEquipableItem::CanRearm()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.CanRearm");

	ASQEquipableItem_CanRearm_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQEquipableItem.CalculateRearmAmmoCost
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int                            QuantityToRearm                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ASQEquipableItem::CalculateRearmAmmoCost(int QuantityToRearm)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.CalculateRearmAmmoCost");

	ASQEquipableItem_CalculateRearmAmmoCost_Params params;
	params.QuantityToRearm = QuantityToRearm;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQEquipableItem.CalculateMissingRearmItems
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int ASQEquipableItem::CalculateMissingRearmItems()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.CalculateMissingRearmItems");

	ASQEquipableItem_CalculateMissingRearmItems_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQEquipableItem.CalculateMissingAmmoCost
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ASQEquipableItem::CalculateMissingAmmoCost()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.CalculateMissingAmmoCost");

	ASQEquipableItem_CalculateMissingAmmoCost_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQEquipableItem.CalculateMaxAmmoCost
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// int                            MaxCount                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ASQEquipableItem::CalculateMaxAmmoCost(int MaxCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.CalculateMaxAmmoCost");

	ASQEquipableItem_CalculateMaxAmmoCost_Params params;
	params.MaxCount = MaxCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQEquipableItem.BPEndUse
// (Event, Public, BlueprintEvent)
void ASQEquipableItem::BPEndUse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.BPEndUse");

	ASQEquipableItem_BPEndUse_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQEquipableItem.BPEndAltUse
// (Event, Public, BlueprintEvent)
void ASQEquipableItem::BPEndAltUse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.BPEndAltUse");

	ASQEquipableItem_BPEndAltUse_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQEquipableItem.BPBeginUse
// (Event, Public, BlueprintEvent)
void ASQEquipableItem::BPBeginUse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.BPBeginUse");

	ASQEquipableItem_BPBeginUse_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQEquipableItem.BPBeginAltUse
// (Event, Public, BlueprintEvent)
void ASQEquipableItem::BPBeginAltUse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.BPBeginAltUse");

	ASQEquipableItem_BPBeginAltUse_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQEquipableItem.BlueprintUpdateFirstPersonVisibility
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool                           bIsFirstPersonVisible          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQEquipableItem::BlueprintUpdateFirstPersonVisibility(bool bIsFirstPersonVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.BlueprintUpdateFirstPersonVisibility");

	ASQEquipableItem_BlueprintUpdateFirstPersonVisibility_Params params;
	params.bIsFirstPersonVisible = bIsFirstPersonVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQEquipableItem.BlueprintOnUnequipped
// (Native, Event, Protected, BlueprintEvent)
void ASQEquipableItem::BlueprintOnUnequipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.BlueprintOnUnequipped");

	ASQEquipableItem_BlueprintOnUnequipped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQEquipableItem.BlueprintOnUnequip
// (Native, Event, Protected, BlueprintEvent)
void ASQEquipableItem::BlueprintOnUnequip()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.BlueprintOnUnequip");

	ASQEquipableItem_BlueprintOnUnequip_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQEquipableItem.BlueprintOnEquipped
// (Native, Event, Protected, BlueprintEvent)
void ASQEquipableItem::BlueprintOnEquipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.BlueprintOnEquipped");

	ASQEquipableItem_BlueprintOnEquipped_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQEquipableItem.BlueprintOnEquip
// (Native, Event, Protected, BlueprintEvent)
void ASQEquipableItem::BlueprintOnEquip()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.BlueprintOnEquip");

	ASQEquipableItem_BlueprintOnEquip_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQEquipableItem.BlueprintDrawHUD
// (Event, Public, BlueprintEvent)
// Parameters:
// class UCanvas*                 Canvas                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQEquipableItem::BlueprintDrawHUD(class UCanvas* Canvas)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.BlueprintDrawHUD");

	ASQEquipableItem_BlueprintDrawHUD_Params params;
	params.Canvas = Canvas;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQEquipableItem.BeginUse
// (Native, Public, BlueprintCallable)
void ASQEquipableItem::BeginUse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.BeginUse");

	ASQEquipableItem_BeginUse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQEquipableItem.BeginAltUse
// (Native, Public, BlueprintCallable)
void ASQEquipableItem::BeginAltUse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQEquipableItem.BeginAltUse");

	ASQEquipableItem_BeginAltUse_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQWeapon.UpdateBipod
// (Native, Protected, BlueprintCallable)
void ASQWeapon::UpdateBipod()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon.UpdateBipod");

	ASQWeapon_UpdateBipod_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQWeapon.UpdateAimProneBobbing
// (Native, Protected, BlueprintCallable)
void ASQWeapon::UpdateAimProneBobbing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon.UpdateAimProneBobbing");

	ASQWeapon_UpdateAimProneBobbing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQWeapon.UpdateAdjustableSightAnimPos
// (Final, Native, Public)
void ASQWeapon::UpdateAdjustableSightAnimPos()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon.UpdateAdjustableSightAnimPos");

	ASQWeapon_UpdateAdjustableSightAnimPos_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQWeapon.ToggleFiremode
// (Native, Public, BlueprintCallable)
void ASQWeapon::ToggleFiremode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon.ToggleFiremode");

	ASQWeapon_ToggleFiremode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQWeapon.StopModifyZeroing
// (Native, Event, Public, BlueprintEvent)
void ASQWeapon::StopModifyZeroing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon.StopModifyZeroing");

	ASQWeapon_StopModifyZeroing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQWeapon.StartReload
// (Native, Public, BlueprintCallable)
void ASQWeapon::StartReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon.StartReload");

	ASQWeapon_StartReload_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQWeapon.StartModifyZeroing
// (Native, Event, Public, BlueprintEvent)
void ASQWeapon::StartModifyZeroing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon.StartModifyZeroing");

	ASQWeapon_StartModifyZeroing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQWeapon.SetZoom
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           bNewZoom                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bForce                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQWeapon::SetZoom(bool bNewZoom, bool bForce)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon.SetZoom");

	ASQWeapon_SetZoom_Params params;
	params.bNewZoom = bNewZoom;
	params.bForce = bForce;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQWeapon.ServerStopFire
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
void ASQWeapon::ServerStopFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon.ServerStopFire");

	ASQWeapon_ServerStopFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQWeapon.ServerStartReload
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
void ASQWeapon::ServerStartReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon.ServerStartReload");

	ASQWeapon_ServerStartReload_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQWeapon.ServerStartFire
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
void ASQWeapon::ServerStartFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon.ServerStartFire");

	ASQWeapon_ServerStartFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQWeapon.ServerSetIsAimingDownSights
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                           bIsAimingDownSights            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQWeapon::ServerSetIsAimingDownSights(bool bIsAimingDownSights)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon.ServerSetIsAimingDownSights");

	ASQWeapon_ServerSetIsAimingDownSights_Params params;
	params.bIsAimingDownSights = bIsAimingDownSights;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQWeapon.ServerSetCurrentFireMode
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// int                            NewCurrentFireMode             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQWeapon::ServerSetCurrentFireMode(int NewCurrentFireMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon.ServerSetCurrentFireMode");

	ASQWeapon_ServerSetCurrentFireMode_Params params;
	params.NewCurrentFireMode = NewCurrentFireMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQWeapon.ServerNotifyHit
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FSQShotInfo             ShotInfoZeroBased              (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TArray<struct FSQPenetrationTrace> TargetsZeroBased               (ConstParm, Parm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                           bIsRayTracedShot               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIsManuallyCalled              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQWeapon::ServerNotifyHit(const struct FSQShotInfo& ShotInfoZeroBased, TArray<struct FSQPenetrationTrace> TargetsZeroBased, bool bIsRayTracedShot, bool bIsManuallyCalled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon.ServerNotifyHit");

	ASQWeapon_ServerNotifyHit_Params params;
	params.ShotInfoZeroBased = ShotInfoZeroBased;
	params.TargetsZeroBased = TargetsZeroBased;
	params.bIsRayTracedShot = bIsRayTracedShot;
	params.bIsManuallyCalled = bIsManuallyCalled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQWeapon.ServerNotifyFireAndMiss
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FSQShotInfo             ShotInfoZeroBased              (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FHitResult              HitResultZeroBased             (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                           bIsRayTracedShot               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQWeapon::ServerNotifyFireAndMiss(const struct FSQShotInfo& ShotInfoZeroBased, const struct FHitResult& HitResultZeroBased, bool bIsRayTracedShot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon.ServerNotifyFireAndMiss");

	ASQWeapon_ServerNotifyFireAndMiss_Params params;
	params.ShotInfoZeroBased = ShotInfoZeroBased;
	params.HitResultZeroBased = HitResultZeroBased;
	params.bIsRayTracedShot = bIsRayTracedShot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQWeapon.ServerFireProjectileWithId
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FSQShotInfo             ShotInfoZeroBased              (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// uint64_t                       UniqueProjectileId             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQWeapon::ServerFireProjectileWithId(const struct FSQShotInfo& ShotInfoZeroBased, uint64_t UniqueProjectileId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon.ServerFireProjectileWithId");

	ASQWeapon_ServerFireProjectileWithId_Params params;
	params.ShotInfoZeroBased = ShotInfoZeroBased;
	params.UniqueProjectileId = UniqueProjectileId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQWeapon.ServerFireProjectile
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// struct FSQShotInfo             ShotInfoZeroBased              (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
void ASQWeapon::ServerFireProjectile(const struct FSQShotInfo& ShotInfoZeroBased)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon.ServerFireProjectile");

	ASQWeapon_ServerFireProjectile_Params params;
	params.ShotInfoZeroBased = ShotInfoZeroBased;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQWeapon.PlayImpactEffect
// (Native, Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSQPenetrationTrace     ImpactHit                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                           bIsProjectileTracer            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQWeapon::PlayImpactEffect(const struct FSQPenetrationTrace& ImpactHit, bool bIsProjectileTracer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon.PlayImpactEffect");

	ASQWeapon_PlayImpactEffect_Params params;
	params.ImpactHit = ImpactHit;
	params.bIsProjectileTracer = bIsProjectileTracer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQWeapon.PlayFiringSound
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class USoundBase*              Sound1p                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundBase*              Sound3p                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FName                   SocketName                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQWeapon::PlayFiringSound(class USoundBase* Sound1p, class USoundBase* Sound3p, const struct FName& SocketName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon.PlayFiringSound");

	ASQWeapon_PlayFiringSound_Params params;
	params.Sound1p = Sound1p;
	params.Sound3p = Sound3p;
	params.SocketName = SocketName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQWeapon.OnRep_Reloading
// (Final, Native, Protected)
void ASQWeapon::OnRep_Reloading()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon.OnRep_Reloading");

	ASQWeapon_OnRep_Reloading_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQWeapon.OnRep_Magazines
// (Final, Native, Public, HasOutParms)
// Parameters:
// TArray<struct FSQMagazineData> OldMagazines                   (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
void ASQWeapon::OnRep_Magazines(TArray<struct FSQMagazineData>* OldMagazines)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon.OnRep_Magazines");

	ASQWeapon_OnRep_Magazines_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OldMagazines != nullptr)
		*OldMagazines = params.OldMagazines;

}


// Function Squad.SQWeapon.OnRep_Firing
// (Final, Native, Protected)
void ASQWeapon::OnRep_Firing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon.OnRep_Firing");

	ASQWeapon_OnRep_Firing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQWeapon.OnRep_AimingDownSights
// (Native, Protected)
// Parameters:
// bool                           bPrevAimingDownSights          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQWeapon::OnRep_AimingDownSights(bool bPrevAimingDownSights)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon.OnRep_AimingDownSights");

	ASQWeapon_OnRep_AimingDownSights_Params params;
	params.bPrevAimingDownSights = bPrevAimingDownSights;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQWeapon.MulticastFireProjectileWithId
// (Net, NetReliable, Native, Event, NetMulticast, Protected, HasDefaults)
// Parameters:
// struct FVector                 OriginZeroBased                (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector_NetQuantizeNormal ShootDir                       (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint64_t                       UniqueProjectileId             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQWeapon::MulticastFireProjectileWithId(const struct FVector& OriginZeroBased, const struct FVector_NetQuantizeNormal& ShootDir, uint64_t UniqueProjectileId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon.MulticastFireProjectileWithId");

	ASQWeapon_MulticastFireProjectileWithId_Params params;
	params.OriginZeroBased = OriginZeroBased;
	params.ShootDir = ShootDir;
	params.UniqueProjectileId = UniqueProjectileId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQWeapon.MulticastFireProjectile
// (Net, NetReliable, Native, Event, NetMulticast, Protected, HasDefaults)
// Parameters:
// struct FVector                 OriginZeroBased                (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector_NetQuantizeNormal ShootDir                       (ConstParm, Parm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQWeapon::MulticastFireProjectile(const struct FVector& OriginZeroBased, const struct FVector_NetQuantizeNormal& ShootDir)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon.MulticastFireProjectile");

	ASQWeapon_MulticastFireProjectile_Params params;
	params.OriginZeroBased = OriginZeroBased;
	params.ShootDir = ShootDir;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQWeapon.MulticastFireMultipleProjectileEffects
// (Net, NetReliable, Native, Event, NetMulticast, Protected)
// Parameters:
// TArray<struct FSQPenetrationProxy> HitResultsZeroBased            (ConstParm, Parm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FSQShotInfo             ShotInfoZeroBased              (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                           bIsRayTracedShot               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIsManuallyCalled              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQWeapon::MulticastFireMultipleProjectileEffects(TArray<struct FSQPenetrationProxy> HitResultsZeroBased, const struct FSQShotInfo& ShotInfoZeroBased, bool bIsRayTracedShot, bool bIsManuallyCalled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon.MulticastFireMultipleProjectileEffects");

	ASQWeapon_MulticastFireMultipleProjectileEffects_Params params;
	params.HitResultsZeroBased = HitResultsZeroBased;
	params.ShotInfoZeroBased = ShotInfoZeroBased;
	params.bIsRayTracedShot = bIsRayTracedShot;
	params.bIsManuallyCalled = bIsManuallyCalled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQWeapon.ModifyZeroing
// (Final, Native, Public)
// Parameters:
// bool                           bIncrease                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQWeapon::ModifyZeroing(bool bIncrease)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon.ModifyZeroing");

	ASQWeapon_ModifyZeroing_Params params;
	params.bIncrease = bIncrease;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQWeapon.MagazineHasAmmo
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQWeapon::MagazineHasAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon.MagazineHasAmmo");

	ASQWeapon_MagazineHasAmmo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQWeapon.IsZoomed
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQWeapon::IsZoomed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon.IsZoomed");

	ASQWeapon_IsZoomed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQWeapon.IsReloading
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQWeapon::IsReloading()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon.IsReloading");

	ASQWeapon_IsReloading_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQWeapon.IsPullingTrigger
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQWeapon::IsPullingTrigger()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon.IsPullingTrigger");

	ASQWeapon_IsPullingTrigger_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQWeapon.IsPendingFire
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQWeapon::IsPendingFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon.IsPendingFire");

	ASQWeapon_IsPendingFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQWeapon.IsFullyZoomed
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQWeapon::IsFullyZoomed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon.IsFullyZoomed");

	ASQWeapon_IsFullyZoomed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQWeapon.IsAimingDownSights
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQWeapon::IsAimingDownSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon.IsAimingDownSights");

	ASQWeapon_IsAimingDownSights_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQWeapon.GetZoomProgress
// (Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           bJustToggledZoom               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ASQWeapon::GetZoomProgress(bool bJustToggledZoom)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon.GetZoomProgress");

	ASQWeapon_GetZoomProgress_Params params;
	params.bJustToggledZoom = bJustToggledZoom;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQWeapon.GetWeaponStaticInfo
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USQWeaponStaticInfo*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USQWeaponStaticInfo* ASQWeapon::GetWeaponStaticInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon.GetWeaponStaticInfo");

	ASQWeapon_GetWeaponStaticInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQWeapon.GetMOAAdjustedAimDirectionFromRotator
// (Final, Native, Protected, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                AimDirection                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector ASQWeapon::GetMOAAdjustedAimDirectionFromRotator(const struct FRotator& AimDirection)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon.GetMOAAdjustedAimDirectionFromRotator");

	ASQWeapon_GetMOAAdjustedAimDirectionFromRotator_Params params;
	params.AimDirection = AimDirection;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQWeapon.GetMOAAdjustedAimDirection
// (Final, Native, Protected, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 AimDirection                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector ASQWeapon::GetMOAAdjustedAimDirection(const struct FVector& AimDirection)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon.GetMOAAdjustedAimDirection");

	ASQWeapon_GetMOAAdjustedAimDirection_Params params;
	params.AimDirection = AimDirection;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQWeapon.GetAimLocation
// (Native, Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector ASQWeapon::GetAimLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon.GetAimLocation");

	ASQWeapon_GetAimLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQWeapon.GetAimDirection
// (Native, Event, Public, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector ASQWeapon::GetAimDirection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon.GetAimDirection");

	ASQWeapon_GetAimDirection_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQWeapon.FinishAdsTransition
// (Final, Native, Public)
void ASQWeapon::FinishAdsTransition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon.FinishAdsTransition");

	ASQWeapon_FinishAdsTransition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQWeapon.BlueprintOnZoom
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// bool                           bNewZoom                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQWeapon::BlueprintOnZoom(bool bNewZoom)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon.BlueprintOnZoom");

	ASQWeapon_BlueprintOnZoom_Params params;
	params.bNewZoom = bNewZoom;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQWeapon.BlueprintOnToggleFiremode
// (Native, Event, Protected, BlueprintEvent)
void ASQWeapon::BlueprintOnToggleFiremode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon.BlueprintOnToggleFiremode");

	ASQWeapon_BlueprintOnToggleFiremode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQWeapon.BlueprintOnReloaded
// (Event, Protected, BlueprintEvent)
void ASQWeapon::BlueprintOnReloaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon.BlueprintOnReloaded");

	ASQWeapon_BlueprintOnReloaded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQWeapon.BlueprintOnReload
// (Native, Event, Protected, BlueprintEvent)
void ASQWeapon::BlueprintOnReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon.BlueprintOnReload");

	ASQWeapon_BlueprintOnReload_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQWeapon.BlueprintOnFire
// (Native, Event, Protected, HasOutParms, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                 Origin                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQWeapon::BlueprintOnFire(const struct FVector& Origin)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon.BlueprintOnFire");

	ASQWeapon_BlueprintOnFire_Params params;
	params.Origin = Origin;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQWeapon_Effects.InterpRecoil
// (Native, Public)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQWeapon_Effects::InterpRecoil(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQWeapon_Effects.InterpRecoil");

	ASQWeapon_Effects_InterpRecoil_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleWeapon.SoldierLeavesVehicle
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASQSoldier*              Soldier                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQVehicleWeapon::SoldierLeavesVehicle(class ASQSoldier* Soldier)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleWeapon.SoldierLeavesVehicle");

	ASQVehicleWeapon_SoldierLeavesVehicle_Params params;
	params.Soldier = Soldier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleWeapon.SoldierEntersVehicle
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASQSoldier*              Soldier                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQVehicleWeapon::SoldierEntersVehicle(class ASQSoldier* Soldier)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleWeapon.SoldierEntersVehicle");

	ASQVehicleWeapon_SoldierEntersVehicle_Params params;
	params.Soldier = Soldier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleWeapon.GetWeaponRotation
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
struct FRotator ASQVehicleWeapon::GetWeaponRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleWeapon.GetWeaponRotation");

	ASQVehicleWeapon_GetWeaponRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleWeapon.GetSoldier
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASQSoldier*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASQSoldier* ASQVehicleWeapon::GetSoldier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleWeapon.GetSoldier");

	ASQVehicleWeapon_GetSoldier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleWeapon.GetOwnerSeat
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASQVehicleSeat*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASQVehicleSeat* ASQVehicleWeapon::GetOwnerSeat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleWeapon.GetOwnerSeat");

	ASQVehicleWeapon_GetOwnerSeat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleWeaponTOW.DelayedFireWeapon
// (Native, Protected)
void ASQVehicleWeaponTOW::DelayedFireWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleWeaponTOW.DelayedFireWeapon");

	ASQVehicleWeaponTOW_DelayedFireWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleWeaponTOW.BlueprintOnPreFire
// (Event, Protected, BlueprintCallable, BlueprintEvent)
void ASQVehicleWeaponTOW::BlueprintOnPreFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleWeaponTOW.BlueprintOnPreFire");

	ASQVehicleWeaponTOW_BlueprintOnPreFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleTurret.IsCurrentWeaponInputEnabled
// (Native, Protected, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQVehicleTurret::IsCurrentWeaponInputEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleTurret.IsCurrentWeaponInputEnabled");

	ASQVehicleTurret_IsCurrentWeaponInputEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleTurretClosedTop.ResetZoom
// (Event, Protected, BlueprintCallable, BlueprintEvent)
void ASQVehicleTurretClosedTop::ResetZoom()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleTurretClosedTop.ResetZoom");

	ASQVehicleTurretClosedTop_ResetZoom_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleTurretClosedTop.GetYawMovementComponent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class USQMovementComponentBase* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USQMovementComponentBase* ASQVehicleTurretClosedTop::GetYawMovementComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleTurretClosedTop.GetYawMovementComponent");

	ASQVehicleTurretClosedTop_GetYawMovementComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleTurretClosedTop.GetPitchMovementComponent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class USQMovementComponentBase* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USQMovementComponentBase* ASQVehicleTurretClosedTop::GetPitchMovementComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleTurretClosedTop.GetPitchMovementComponent");

	ASQVehicleTurretClosedTop_GetPitchMovementComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleTurretClosedTop.BP_OnVehicleZoom
// (Event, Protected, BlueprintEvent)
void ASQVehicleTurretClosedTop::BP_OnVehicleZoom()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleTurretClosedTop.BP_OnVehicleZoom");

	ASQVehicleTurretClosedTop_BP_OnVehicleZoom_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleSpawner.SpawnVehicle
// (Final, Native, Public, BlueprintCallable)
void ASQVehicleSpawner::SpawnVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleSpawner.SpawnVehicle");

	ASQVehicleSpawner_SpawnVehicle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleSpawner.OnVehicleDestroyed
// (Final, Native, Private)
// Parameters:
// class ASQVehicle*              Vehicle                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQVehicleSpawner::OnVehicleDestroyed(class ASQVehicle* Vehicle)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleSpawner.OnVehicleDestroyed");

	ASQVehicleSpawner_OnVehicleDestroyed_Params params;
	params.Vehicle = Vehicle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleSpawner.GetTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESQTeam                        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
ESQTeam ASQVehicleSpawner::GetTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleSpawner.GetTeam");

	ASQVehicleSpawner_GetTeam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleSmokeGenerator.SetupParticleSystem
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                  OwnerActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQVehicleSmokeGenerator::SetupParticleSystem(class AActor* OwnerActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleSmokeGenerator.SetupParticleSystem");

	ASQVehicleSmokeGenerator_SetupParticleSystem_Params params;
	params.OwnerActor = OwnerActor;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleSmokeGenerator.ServerUseGenerator
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
void ASQVehicleSmokeGenerator::ServerUseGenerator()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleSmokeGenerator.ServerUseGenerator");

	ASQVehicleSmokeGenerator_ServerUseGenerator_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleSmokeGenerator.ServerStopGenerator
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
void ASQVehicleSmokeGenerator::ServerStopGenerator()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleSmokeGenerator.ServerStopGenerator");

	ASQVehicleSmokeGenerator_ServerStopGenerator_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleSmokeGenerator.MulticastDeactivate
// (Net, NetReliable, Native, Event, NetMulticast, Protected, NetValidate)
void ASQVehicleSmokeGenerator::MulticastDeactivate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleSmokeGenerator.MulticastDeactivate");

	ASQVehicleSmokeGenerator_MulticastDeactivate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleSmokeGenerator.MulticastActivate
// (Net, NetReliable, Native, Event, NetMulticast, Protected, NetValidate)
void ASQVehicleSmokeGenerator::MulticastActivate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleSmokeGenerator.MulticastActivate");

	ASQVehicleSmokeGenerator_MulticastActivate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleSeatComponent.TransitionComplete
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQVehicleSeatComponent::TransitionComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleSeatComponent.TransitionComplete");

	USQVehicleSeatComponent_TransitionComplete_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleSeatComponent.OnRep_SeatPawn
// (Native, Public)
void USQVehicleSeatComponent::OnRep_SeatPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleSeatComponent.OnRep_SeatPawn");

	USQVehicleSeatComponent_OnRep_SeatPawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleSeatComponent.OnRep_AnimationSeatState
// (Final, Native, Public)
void USQVehicleSeatComponent::OnRep_AnimationSeatState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleSeatComponent.OnRep_AnimationSeatState");

	USQVehicleSeatComponent_OnRep_AnimationSeatState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleSeatComponent.GetSoldierSeatState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESQSoldierSeatState            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
ESQSoldierSeatState USQVehicleSeatComponent::GetSoldierSeatState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleSeatComponent.GetSoldierSeatState");

	USQVehicleSeatComponent_GetSoldierSeatState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleSeatComponent.GetSeatPawnInventory
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USQVehicleInventoryComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USQVehicleInventoryComponent* USQVehicleSeatComponent::GetSeatPawnInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleSeatComponent.GetSeatPawnInventory");

	USQVehicleSeatComponent_GetSeatPawnInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleSeatComponent.GetSeatPawnEquipableItem
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASQEquipableItem*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASQEquipableItem* USQVehicleSeatComponent::GetSeatPawnEquipableItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleSeatComponent.GetSeatPawnEquipableItem");

	USQVehicleSeatComponent_GetSeatPawnEquipableItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleSeatComponent.GetSeatPawn
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASQVehicleSeat*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASQVehicleSeat* USQVehicleSeatComponent::GetSeatPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleSeatComponent.GetSeatPawn");

	USQVehicleSeatComponent_GetSeatPawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleSeatComponent.ChangeSeatState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            StateIndex                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQVehicleSeatComponent::ChangeSeatState(int StateIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleSeatComponent.ChangeSeatState");

	USQVehicleSeatComponent_ChangeSeatState_Params params;
	params.StateIndex = StateIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleSeatComponent.CanSeatBeRepaired
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// ESQRepairSource                RepairSource                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQVehicleSeatComponent::CanSeatBeRepaired(ESQRepairSource RepairSource)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleSeatComponent.CanSeatBeRepaired");

	USQVehicleSeatComponent_CanSeatBeRepaired_Params params;
	params.RepairSource = RepairSource;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPawnInventoryComponent.UpdateStaticItemInfo
// (Native, Public, BlueprintCallable)
// Parameters:
// class USQItemStaticInfo*       InfoObject                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQPawnInventoryComponent::UpdateStaticItemInfo(class USQItemStaticInfo* InfoObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPawnInventoryComponent.UpdateStaticItemInfo");

	USQPawnInventoryComponent_UpdateStaticItemInfo_Params params;
	params.InfoObject = InfoObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPawnInventoryComponent.UpdateInventorySwitch
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            NewSlot                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            NewOffset                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bInteracting                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQPawnInventoryComponent::UpdateInventorySwitch(int NewSlot, int NewOffset, bool bInteracting)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPawnInventoryComponent.UpdateInventorySwitch");

	USQPawnInventoryComponent_UpdateInventorySwitch_Params params;
	params.NewSlot = NewSlot;
	params.NewOffset = NewOffset;
	params.bInteracting = bInteracting;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPawnInventoryComponent.SwitchWeaponDirectly
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            NewWeaponSlot                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            NewWeaponOffset                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bInstant                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQPawnInventoryComponent::SwitchWeaponDirectly(int NewWeaponSlot, int NewWeaponOffset, bool bInstant)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPawnInventoryComponent.SwitchWeaponDirectly");

	USQPawnInventoryComponent_SwitchWeaponDirectly_Params params;
	params.NewWeaponSlot = NewWeaponSlot;
	params.NewWeaponOffset = NewWeaponOffset;
	params.bInstant = bInstant;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPawnInventoryComponent.SwitchWeapon
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            NewItemSlot                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQPawnInventoryComponent::SwitchWeapon(int NewItemSlot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPawnInventoryComponent.SwitchWeapon");

	USQPawnInventoryComponent_SwitchWeapon_Params params;
	params.NewItemSlot = NewItemSlot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPawnInventoryComponent.SwitchItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ItemSlot                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQPawnInventoryComponent::SwitchItem(int ItemSlot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPawnInventoryComponent.SwitchItem");

	USQPawnInventoryComponent_SwitchItem_Params params;
	params.ItemSlot = ItemSlot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPawnInventoryComponent.StopAnimationHandler
// (Final, Native, Public)
// Parameters:
// class UAnimMontage*            WeaponMontage                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*            Soldier1pMontage               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*            Soldier3pMontage               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          blendOutTime                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bStopAllWeaponAnims            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQPawnInventoryComponent::StopAnimationHandler(class UAnimMontage* WeaponMontage, class UAnimMontage* Soldier1pMontage, class UAnimMontage* Soldier3pMontage, float blendOutTime, bool bStopAllWeaponAnims)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPawnInventoryComponent.StopAnimationHandler");

	USQPawnInventoryComponent_StopAnimationHandler_Params params;
	params.WeaponMontage = WeaponMontage;
	params.Soldier1pMontage = Soldier1pMontage;
	params.Soldier3pMontage = Soldier3pMontage;
	params.blendOutTime = blendOutTime;
	params.bStopAllWeaponAnims = bStopAllWeaponAnims;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPawnInventoryComponent.SpawnEquipableItem
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FSQInventoryData        ItemClass                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                           bSpawnMaxAmmo                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSQPersistedAmmoCount   StartingAmmo                   (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// class ASQEquipableItem*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASQEquipableItem* USQPawnInventoryComponent::SpawnEquipableItem(const struct FSQInventoryData& ItemClass, bool bSpawnMaxAmmo, const struct FSQPersistedAmmoCount& StartingAmmo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPawnInventoryComponent.SpawnEquipableItem");

	USQPawnInventoryComponent_SpawnEquipableItem_Params params;
	params.ItemClass = ItemClass;
	params.bSpawnMaxAmmo = bSpawnMaxAmmo;
	params.StartingAmmo = StartingAmmo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPawnInventoryComponent.SetupStaticInfoBindings
// (Final, Native, Protected)
// Parameters:
// class ASQEquipableItem*        Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQPawnInventoryComponent::SetupStaticInfoBindings(class ASQEquipableItem* Item)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPawnInventoryComponent.SetupStaticInfoBindings");

	USQPawnInventoryComponent_SetupStaticInfoBindings_Params params;
	params.Item = Item;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPawnInventoryComponent.SetAnimationPlayRateHandler
// (Final, Native, Public)
// Parameters:
// class UAnimMontage*            WeaponMontage                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*            Soldier1pMontage               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*            Soldier3pMontage               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          NewPlayRate                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQPawnInventoryComponent::SetAnimationPlayRateHandler(class UAnimMontage* WeaponMontage, class UAnimMontage* Soldier1pMontage, class UAnimMontage* Soldier3pMontage, float NewPlayRate)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPawnInventoryComponent.SetAnimationPlayRateHandler");

	USQPawnInventoryComponent_SetAnimationPlayRateHandler_Params params;
	params.WeaponMontage = WeaponMontage;
	params.Soldier1pMontage = Soldier1pMontage;
	params.Soldier3pMontage = Soldier3pMontage;
	params.NewPlayRate = NewPlayRate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPawnInventoryComponent.ServerSwitchWeapon2
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// class ASQEquipableItem*        NewWeapon                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQPawnInventoryComponent::ServerSwitchWeapon2(class ASQEquipableItem* NewWeapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPawnInventoryComponent.ServerSwitchWeapon2");

	USQPawnInventoryComponent_ServerSwitchWeapon2_Params params;
	params.NewWeapon = NewWeapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPawnInventoryComponent.ServerSwitchWeapon
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            NewWeaponSlot                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQPawnInventoryComponent::ServerSwitchWeapon(int NewWeaponSlot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPawnInventoryComponent.ServerSwitchWeapon");

	USQPawnInventoryComponent_ServerSwitchWeapon_Params params;
	params.NewWeaponSlot = NewWeaponSlot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPawnInventoryComponent.ResumeAnimationHandler
// (Final, Native, Public)
// Parameters:
// class UAnimMontage*            WeaponMontage                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*            Soldier1pMontage               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*            Soldier3pMontage               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQPawnInventoryComponent::ResumeAnimationHandler(class UAnimMontage* WeaponMontage, class UAnimMontage* Soldier1pMontage, class UAnimMontage* Soldier3pMontage)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPawnInventoryComponent.ResumeAnimationHandler");

	USQPawnInventoryComponent_ResumeAnimationHandler_Params params;
	params.WeaponMontage = WeaponMontage;
	params.Soldier1pMontage = Soldier1pMontage;
	params.Soldier3pMontage = Soldier3pMontage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPawnInventoryComponent.ResetInventorySwitch
// (Final, Native, Public, BlueprintCallable)
void USQPawnInventoryComponent::ResetInventorySwitch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPawnInventoryComponent.ResetInventorySwitch");

	USQPawnInventoryComponent_ResetInventorySwitch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPawnInventoryComponent.ReplaceItemInInventory
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// int                            Slot                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSQInventoryData        ItemClass                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int                            Offset                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQPawnInventoryComponent::ReplaceItemInInventory(int Slot, const struct FSQInventoryData& ItemClass, int Offset)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPawnInventoryComponent.ReplaceItemInInventory");

	USQPawnInventoryComponent_ReplaceItemInInventory_Params params;
	params.Slot = Slot;
	params.ItemClass = ItemClass;
	params.Offset = Offset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPawnInventoryComponent.RemoveWithoutDestroyingItem
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            Slot                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Offset                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQEquipableItem*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASQEquipableItem* USQPawnInventoryComponent::RemoveWithoutDestroyingItem(int Slot, int Offset)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPawnInventoryComponent.RemoveWithoutDestroyingItem");

	USQPawnInventoryComponent_RemoveWithoutDestroyingItem_Params params;
	params.Slot = Slot;
	params.Offset = Offset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPawnInventoryComponent.RemoveItemFromInventory
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            Slot                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Offset                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQPawnInventoryComponent::RemoveItemFromInventory(int Slot, int Offset)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPawnInventoryComponent.RemoveItemFromInventory");

	USQPawnInventoryComponent_RemoveItemFromInventory_Params params;
	params.Slot = Slot;
	params.Offset = Offset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPawnInventoryComponent.RemoveItemClassFromInventory
// (Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  EquipableItemToRemove          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQPawnInventoryComponent::RemoveItemClassFromInventory(class UClass* EquipableItemToRemove)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPawnInventoryComponent.RemoveItemClassFromInventory");

	USQPawnInventoryComponent_RemoveItemClassFromInventory_Params params;
	params.EquipableItemToRemove = EquipableItemToRemove;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPawnInventoryComponent.RemoveGroupFromInventory
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            Slot                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQPawnInventoryComponent::RemoveGroupFromInventory(int Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPawnInventoryComponent.RemoveGroupFromInventory");

	USQPawnInventoryComponent_RemoveGroupFromInventory_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPawnInventoryComponent.PlayAnimationHandler
// (Final, Native, Public)
// Parameters:
// class UAnimMontage*            WeaponMontage                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*            Soldier1pMontage               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*            Soldier3pMontage               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQPawnInventoryComponent::PlayAnimationHandler(class UAnimMontage* WeaponMontage, class UAnimMontage* Soldier1pMontage, class UAnimMontage* Soldier3pMontage)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPawnInventoryComponent.PlayAnimationHandler");

	USQPawnInventoryComponent_PlayAnimationHandler_Params params;
	params.WeaponMontage = WeaponMontage;
	params.Soldier1pMontage = Soldier1pMontage;
	params.Soldier3pMontage = Soldier3pMontage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPawnInventoryComponent.PauseAnimationHandler
// (Final, Native, Public)
// Parameters:
// class UAnimMontage*            WeaponMontage                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*            Soldier1pMontage               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*            Soldier3pMontage               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQPawnInventoryComponent::PauseAnimationHandler(class UAnimMontage* WeaponMontage, class UAnimMontage* Soldier1pMontage, class UAnimMontage* Soldier3pMontage)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPawnInventoryComponent.PauseAnimationHandler");

	USQPawnInventoryComponent_PauseAnimationHandler_Params params;
	params.WeaponMontage = WeaponMontage;
	params.Soldier1pMontage = Soldier1pMontage;
	params.Soldier3pMontage = Soldier3pMontage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPawnInventoryComponent.OnRep_RepInventory
// (Native, Public)
void USQPawnInventoryComponent::OnRep_RepInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPawnInventoryComponent.OnRep_RepInventory");

	USQPawnInventoryComponent_OnRep_RepInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPawnInventoryComponent.OnRep_PendingWeapon
// (Final, Native, Protected)
// Parameters:
// class ASQEquipableItem*        PreviousPendingWeapon          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQPawnInventoryComponent::OnRep_PendingWeapon(class ASQEquipableItem* PreviousPendingWeapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPawnInventoryComponent.OnRep_PendingWeapon");

	USQPawnInventoryComponent_OnRep_PendingWeapon_Params params;
	params.PreviousPendingWeapon = PreviousPendingWeapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPawnInventoryComponent.OnPrevItem
// (Final, Native, Public, BlueprintCallable)
void USQPawnInventoryComponent::OnPrevItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPawnInventoryComponent.OnPrevItem");

	USQPawnInventoryComponent_OnPrevItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPawnInventoryComponent.OnPendingWeaponPawnOwnerChanged
// (Final, Native, Protected)
// Parameters:
// class APawn*                   NewPawnOwner                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQPawnInventoryComponent::OnPendingWeaponPawnOwnerChanged(class APawn* NewPawnOwner)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPawnInventoryComponent.OnPendingWeaponPawnOwnerChanged");

	USQPawnInventoryComponent_OnPendingWeaponPawnOwnerChanged_Params params;
	params.NewPawnOwner = NewPawnOwner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPawnInventoryComponent.OnNextItem
// (Final, Native, Public, BlueprintCallable)
void USQPawnInventoryComponent::OnNextItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPawnInventoryComponent.OnNextItem");

	USQPawnInventoryComponent_OnNextItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPawnInventoryComponent.OnAmmoChanged
// (Final, Native, Public)
void USQPawnInventoryComponent::OnAmmoChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPawnInventoryComponent.OnAmmoChanged");

	USQPawnInventoryComponent_OnAmmoChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPawnInventoryComponent.InsertItemIntoInventory
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// int                            Slot                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSQInventoryData        ItemClass                      (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// int                            Offset                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bSpawnMaxAmmo                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQEquipableItem*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASQEquipableItem* USQPawnInventoryComponent::InsertItemIntoInventory(int Slot, const struct FSQInventoryData& ItemClass, int Offset, bool bSpawnMaxAmmo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPawnInventoryComponent.InsertItemIntoInventory");

	USQPawnInventoryComponent_InsertItemIntoInventory_Params params;
	params.Slot = Slot;
	params.ItemClass = ItemClass;
	params.Offset = Offset;
	params.bSpawnMaxAmmo = bSpawnMaxAmmo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPawnInventoryComponent.InsertExistingItemIntoInventory
// (Native, Public, BlueprintCallable)
// Parameters:
// class ASQEquipableItem*        Item                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Slot                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Offset                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQPawnInventoryComponent::InsertExistingItemIntoInventory(class ASQEquipableItem* Item, int Slot, int Offset)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPawnInventoryComponent.InsertExistingItemIntoInventory");

	USQPawnInventoryComponent_InsertExistingItemIntoInventory_Params params;
	params.Item = Item;
	params.Slot = Slot;
	params.Offset = Offset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPawnInventoryComponent.GetInventoryItemGroups
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FSQWeaponGroupData> ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
TArray<struct FSQWeaponGroupData> USQPawnInventoryComponent::GetInventoryItemGroups()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPawnInventoryComponent.GetInventoryItemGroups");

	USQPawnInventoryComponent_GetInventoryItemGroups_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPawnInventoryComponent.FindValidWeaponInGroup
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// int                            WeaponSlot                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            WeaponOffset                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQEquipableItem*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASQEquipableItem* USQPawnInventoryComponent::FindValidWeaponInGroup(int WeaponSlot, int* WeaponOffset)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPawnInventoryComponent.FindValidWeaponInGroup");

	USQPawnInventoryComponent_FindValidWeaponInGroup_Params params;
	params.WeaponSlot = WeaponSlot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (WeaponOffset != nullptr)
		*WeaponOffset = params.WeaponOffset;


	return params.ReturnValue;
}


// Function Squad.SQPawnInventoryComponent.FindValidWeaponByClass
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  WeaponClass                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQEquipableItem*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASQEquipableItem* USQPawnInventoryComponent::FindValidWeaponByClass(class UClass* WeaponClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPawnInventoryComponent.FindValidWeaponByClass");

	USQPawnInventoryComponent_FindValidWeaponByClass_Params params;
	params.WeaponClass = WeaponClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPawnInventoryComponent.EndLoopAnimationHandler
// (Final, Native, Public)
// Parameters:
// class UAnimMontage*            WeaponMontage                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*            Soldier1pMontage               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*            Soldier3pMontage               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSQMontageSectionNames  SectionNames                   (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
void USQPawnInventoryComponent::EndLoopAnimationHandler(class UAnimMontage* WeaponMontage, class UAnimMontage* Soldier1pMontage, class UAnimMontage* Soldier3pMontage, const struct FSQMontageSectionNames& SectionNames)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPawnInventoryComponent.EndLoopAnimationHandler");

	USQPawnInventoryComponent_EndLoopAnimationHandler_Params params;
	params.WeaponMontage = WeaponMontage;
	params.Soldier1pMontage = Soldier1pMontage;
	params.Soldier3pMontage = Soldier3pMontage;
	params.SectionNames = SectionNames;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPawnInventoryComponent.CalculateRearmCost
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          OutCost                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TScriptInterface<class USQRearmSource> RearmSource                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
// TArray<struct FSQRearmWeaponRequest> RearmRequest                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQPawnInventoryComponent::CalculateRearmCost(float* OutCost, const TScriptInterface<class USQRearmSource>& RearmSource, TArray<struct FSQRearmWeaponRequest> RearmRequest)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPawnInventoryComponent.CalculateRearmCost");

	USQPawnInventoryComponent_CalculateRearmCost_Params params;
	params.RearmSource = RearmSource;
	params.RearmRequest = RearmRequest;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutCost != nullptr)
		*OutCost = params.OutCost;


	return params.ReturnValue;
}


// Function Squad.SQPawnInventoryComponent.CalculateMissingAmmoCost
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQPawnInventoryComponent::CalculateMissingAmmoCost()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPawnInventoryComponent.CalculateMissingAmmoCost");

	USQPawnInventoryComponent_CalculateMissingAmmoCost_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPawnInventoryComponent.AddGroupToInventory
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            Slot                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int USQPawnInventoryComponent::AddGroupToInventory(int Slot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPawnInventoryComponent.AddGroupToInventory");

	USQPawnInventoryComponent_AddGroupToInventory_Params params;
	params.Slot = Slot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleResourceWeaponInventoryComponent.UpdateVisibilities
// (Final, Native, Public, BlueprintCallable)
void USQVehicleResourceWeaponInventoryComponent::UpdateVisibilities()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleResourceWeaponInventoryComponent.UpdateVisibilities");

	USQVehicleResourceWeaponInventoryComponent_UpdateVisibilities_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleResourceWeaponInventoryComponent.SetStaticMeshResourcesConstruction
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UStaticMeshComponent*> InStaticMeshResources          (ConstParm, Parm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void USQVehicleResourceWeaponInventoryComponent::SetStaticMeshResourcesConstruction(TArray<class UStaticMeshComponent*> InStaticMeshResources)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleResourceWeaponInventoryComponent.SetStaticMeshResourcesConstruction");

	USQVehicleResourceWeaponInventoryComponent_SetStaticMeshResourcesConstruction_Params params;
	params.InStaticMeshResources = InStaticMeshResources;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleResourceWeaponInventoryComponent.SetStaticMeshResourcesAmmo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UStaticMeshComponent*> InStaticMeshResources          (ConstParm, Parm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void USQVehicleResourceWeaponInventoryComponent::SetStaticMeshResourcesAmmo(TArray<class UStaticMeshComponent*> InStaticMeshResources)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleResourceWeaponInventoryComponent.SetStaticMeshResourcesAmmo");

	USQVehicleResourceWeaponInventoryComponent_SetStaticMeshResourcesAmmo_Params params;
	params.InStaticMeshResources = InStaticMeshResources;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleResourceWeaponInventoryComponent.OnRep_ResourcesChanged
// (Final, Native, Protected)
void USQVehicleResourceWeaponInventoryComponent::OnRep_ResourcesChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleResourceWeaponInventoryComponent.OnRep_ResourcesChanged");

	USQVehicleResourceWeaponInventoryComponent_OnRep_ResourcesChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleResourceWeaponInventoryComponent.HasConstructionWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQVehicleResourceWeaponInventoryComponent::HasConstructionWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleResourceWeaponInventoryComponent.HasConstructionWeapon");

	USQVehicleResourceWeaponInventoryComponent_HasConstructionWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleResourceWeaponInventoryComponent.GetTotalSharedResourceAmount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int USQVehicleResourceWeaponInventoryComponent::GetTotalSharedResourceAmount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleResourceWeaponInventoryComponent.GetTotalSharedResourceAmount");

	USQVehicleResourceWeaponInventoryComponent_GetTotalSharedResourceAmount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleResourceWeaponInventoryComponent.GetCurrentSharedResourceAmount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int USQVehicleResourceWeaponInventoryComponent::GetCurrentSharedResourceAmount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleResourceWeaponInventoryComponent.GetCurrentSharedResourceAmount");

	USQVehicleResourceWeaponInventoryComponent_GetCurrentSharedResourceAmount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleResourceWeaponInventoryComponent.GetAmmoPoints
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int USQVehicleResourceWeaponInventoryComponent::GetAmmoPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleResourceWeaponInventoryComponent.GetAmmoPoints");

	USQVehicleResourceWeaponInventoryComponent_GetAmmoPoints_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleResourceWeaponInventoryComponent.FindConstructionWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASQVehicleResource*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASQVehicleResource* USQVehicleResourceWeaponInventoryComponent::FindConstructionWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleResourceWeaponInventoryComponent.FindConstructionWeapon");

	USQVehicleResourceWeaponInventoryComponent_FindConstructionWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleResourceWeaponInventoryComponent.FindAmmoWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASQVehicleResource*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASQVehicleResource* USQVehicleResourceWeaponInventoryComponent::FindAmmoWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleResourceWeaponInventoryComponent.FindAmmoWeapon");

	USQVehicleResourceWeaponInventoryComponent_FindAmmoWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleMovementComponentInterface.SetShouldSimulate
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           InbShouldSimulate              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQVehicleMovementComponentInterface::SetShouldSimulate(bool InbShouldSimulate)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleMovementComponentInterface.SetShouldSimulate");

	USQVehicleMovementComponentInterface_SetShouldSimulate_Params params;
	params.InbShouldSimulate = InbShouldSimulate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleMovementComponentInterface.SetEngineBoostTorqueMultiplier
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          InEngineBoostTorqueMultiplier  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQVehicleMovementComponentInterface::SetEngineBoostTorqueMultiplier(float InEngineBoostTorqueMultiplier)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleMovementComponentInterface.SetEngineBoostTorqueMultiplier");

	USQVehicleMovementComponentInterface_SetEngineBoostTorqueMultiplier_Params params;
	params.InEngineBoostTorqueMultiplier = InEngineBoostTorqueMultiplier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleMovementComponentInterface.GetThrottleInput
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQVehicleMovementComponentInterface::GetThrottleInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleMovementComponentInterface.GetThrottleInput");

	USQVehicleMovementComponentInterface_GetThrottleInput_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleMovementComponentInterface.GetSteeringInput
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQVehicleMovementComponentInterface::GetSteeringInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleMovementComponentInterface.GetSteeringInput");

	USQVehicleMovementComponentInterface_GetSteeringInput_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleMovementComponentInterface.GetShouldSimulate
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQVehicleMovementComponentInterface::GetShouldSimulate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleMovementComponentInterface.GetShouldSimulate");

	USQVehicleMovementComponentInterface_GetShouldSimulate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleMovementComponentInterface.GetRawThrottleInput
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQVehicleMovementComponentInterface::GetRawThrottleInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleMovementComponentInterface.GetRawThrottleInput");

	USQVehicleMovementComponentInterface_GetRawThrottleInput_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleMovementComponentInterface.GetRawSteeringInput
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQVehicleMovementComponentInterface::GetRawSteeringInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleMovementComponentInterface.GetRawSteeringInput");

	USQVehicleMovementComponentInterface_GetRawSteeringInput_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleMovementComponentInterface.GetMaxSpringForce
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQVehicleMovementComponentInterface::GetMaxSpringForce()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleMovementComponentInterface.GetMaxSpringForce");

	USQVehicleMovementComponentInterface_GetMaxSpringForce_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleMovementComponentInterface.GetHandbrakeInput
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQVehicleMovementComponentInterface::GetHandbrakeInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleMovementComponentInterface.GetHandbrakeInput");

	USQVehicleMovementComponentInterface_GetHandbrakeInput_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleMovementComponentInterface.GetBrakeInput
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQVehicleMovementComponentInterface::GetBrakeInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleMovementComponentInterface.GetBrakeInput");

	USQVehicleMovementComponentInterface_GetBrakeInput_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleCleanupComponent.ResetDestructionTimer
// (Final, Native, Protected, BlueprintCallable)
void USQVehicleCleanupComponent::ResetDestructionTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleCleanupComponent.ResetDestructionTimer");

	USQVehicleCleanupComponent_ResetDestructionTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleClaim.GetVehicleClaimed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASQVehicle*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASQVehicle* USQVehicleClaim::GetVehicleClaimed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleClaim.GetVehicleClaimed");

	USQVehicleClaim_GetVehicleClaimed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleClaim.GetTimeUntilExpiration
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQVehicleClaim::GetTimeUntilExpiration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleClaim.GetTimeUntilExpiration");

	USQVehicleClaim_GetTimeUntilExpiration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleClaim.GetTimeOfClaim
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQVehicleClaim::GetTimeOfClaim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleClaim.GetTimeOfClaim");

	USQVehicleClaim_GetTimeOfClaim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleClaim.GetStatus
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESQVehicleClaimStatus          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
ESQVehicleClaimStatus USQVehicleClaim::GetStatus()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleClaim.GetStatus");

	USQVehicleClaim_GetStatus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleClaim.GetClaimingSquad
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASQSquad*                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASQSquad* USQVehicleClaim::GetClaimingSquad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleClaim.GetClaimingSquad");

	USQVehicleClaim_GetClaimingSquad_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQUsable.ShouldDisplayPrompt
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*             User                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQUsable::ShouldDisplayPrompt(class AController* User)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQUsable.ShouldDisplayPrompt");

	USQUsable_ShouldDisplayPrompt_Params params;
	params.User = User;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQUsable.ServerStopUsed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*             User                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQUsable::ServerStopUsed(class AController* User)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQUsable.ServerStopUsed");

	USQUsable_ServerStopUsed_Params params;
	params.User = User;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQUsable.ServerOnUsed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*             User                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQUsable::ServerOnUsed(class AController* User)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQUsable.ServerOnUsed");

	USQUsable_ServerOnUsed_Params params;
	params.User = User;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQUsable.GetUsableData
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSQUsableData           ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FSQUsableData USQUsable::GetUsableData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQUsable.GetUsableData");

	USQUsable_GetUsableData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQUsable.GetInterfaceTeam
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int USQUsable::GetInterfaceTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQUsable.GetInterfaceTeam");

	USQUsable_GetInterfaceTeam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQUsable.BPStopUsed
// (Event, Public, BlueprintEvent)
// Parameters:
// class AController*             User                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQUsable::BPStopUsed(class AController* User)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQUsable.BPStopUsed");

	USQUsable_BPStopUsed_Params params;
	params.User = User;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQUsable.BPOnUsed
// (Event, Public, BlueprintEvent)
// Parameters:
// class AController*             User                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQUsable::BPOnUsed(class AController* User)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQUsable.BPOnUsed");

	USQUsable_BPOnUsed_Params params;
	params.User = User;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQUsable.BPHidePrompt
// (Event, Public, BlueprintEvent)
void USQUsable::BPHidePrompt()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQUsable.BPHidePrompt");

	USQUsable_BPHidePrompt_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQUsable.BPDisplayPrompt
// (Event, Public, BlueprintEvent)
// Parameters:
// class AController*             User                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQUsable::BPDisplayPrompt(class AController* User)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQUsable.BPDisplayPrompt");

	USQUsable_BPDisplayPrompt_Params params;
	params.User = User;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQUpdateSessionsCallbackProxy.UpdateSession
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*       PlayerController               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FName                   SessionName                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USQUpdateSessionsCallbackProxy* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USQUpdateSessionsCallbackProxy* USQUpdateSessionsCallbackProxy::STATIC_UpdateSession(class UObject* WorldContextObject, class APlayerController* PlayerController, const struct FName& SessionName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQUpdateSessionsCallbackProxy.UpdateSession");

	USQUpdateSessionsCallbackProxy_UpdateSession_Params params;
	params.WorldContextObject = WorldContextObject;
	params.PlayerController = PlayerController;
	params.SessionName = SessionName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQUpdateSessionsCallbackProxy.GetSessionFlagStruct
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FSQSessionFlagStruct    ReturnValue                    (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
struct FSQSessionFlagStruct USQUpdateSessionsCallbackProxy::STATIC_GetSessionFlagStruct(const struct FBlueprintSessionResult& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQUpdateSessionsCallbackProxy.GetSessionFlagStruct");

	USQUpdateSessionsCallbackProxy_GetSessionFlagStruct_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQUpdateSessionsCallbackProxy.GetServerName
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString USQUpdateSessionsCallbackProxy::STATIC_GetServerName(const struct FBlueprintSessionResult& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQUpdateSessionsCallbackProxy.GetServerName");

	USQUpdateSessionsCallbackProxy_GetServerName_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQUpdateSessionsCallbackProxy.GetSearchKeywords
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString USQUpdateSessionsCallbackProxy::STATIC_GetSearchKeywords(const struct FBlueprintSessionResult& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQUpdateSessionsCallbackProxy.GetSearchKeywords");

	USQUpdateSessionsCallbackProxy_GetSearchKeywords_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQUpdateSessionsCallbackProxy.GetPingInMs
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int USQUpdateSessionsCallbackProxy::STATIC_GetPingInMs(const struct FBlueprintSessionResult& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQUpdateSessionsCallbackProxy.GetPingInMs");

	USQUpdateSessionsCallbackProxy_GetPingInMs_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQUpdateSessionsCallbackProxy.GetPasswordProtected
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQUpdateSessionsCallbackProxy::STATIC_GetPasswordProtected(const struct FBlueprintSessionResult& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQUpdateSessionsCallbackProxy.GetPasswordProtected");

	USQUpdateSessionsCallbackProxy_GetPasswordProtected_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQUpdateSessionsCallbackProxy.GetMaxPlayers
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int USQUpdateSessionsCallbackProxy::STATIC_GetMaxPlayers(const struct FBlueprintSessionResult& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQUpdateSessionsCallbackProxy.GetMaxPlayers");

	USQUpdateSessionsCallbackProxy_GetMaxPlayers_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQUpdateSessionsCallbackProxy.GetMatchTimeout
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int USQUpdateSessionsCallbackProxy::STATIC_GetMatchTimeout(const struct FBlueprintSessionResult& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQUpdateSessionsCallbackProxy.GetMatchTimeout");

	USQUpdateSessionsCallbackProxy_GetMatchTimeout_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQUpdateSessionsCallbackProxy.GetMapName
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString USQUpdateSessionsCallbackProxy::STATIC_GetMapName(const struct FBlueprintSessionResult& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQUpdateSessionsCallbackProxy.GetMapName");

	USQUpdateSessionsCallbackProxy_GetMapName_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQUpdateSessionsCallbackProxy.GetLicensedServer
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBlueprintSessionResult Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQUpdateSessionsCallbackProxy::STATIC_GetLicensedServer(class UObject* WorldContextObject, const struct FBlueprintSessionResult& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQUpdateSessionsCallbackProxy.GetLicensedServer");

	USQUpdateSessionsCallbackProxy_GetLicensedServer_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQUpdateSessionsCallbackProxy.GetGameVersion
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString USQUpdateSessionsCallbackProxy::STATIC_GetGameVersion(const struct FBlueprintSessionResult& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQUpdateSessionsCallbackProxy.GetGameVersion");

	USQUpdateSessionsCallbackProxy_GetGameVersion_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQUpdateSessionsCallbackProxy.GetGameMode
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString USQUpdateSessionsCallbackProxy::STATIC_GetGameMode(const struct FBlueprintSessionResult& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQUpdateSessionsCallbackProxy.GetGameMode");

	USQUpdateSessionsCallbackProxy_GetGameMode_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQUpdateSessionsCallbackProxy.GetCurrentPlayers
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int USQUpdateSessionsCallbackProxy::STATIC_GetCurrentPlayers(const struct FBlueprintSessionResult& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQUpdateSessionsCallbackProxy.GetCurrentPlayers");

	USQUpdateSessionsCallbackProxy_GetCurrentPlayers_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQUpdateSessionsCallbackProxy.GetAnticheatProtected
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQUpdateSessionsCallbackProxy::STATIC_GetAnticheatProtected(const struct FBlueprintSessionResult& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQUpdateSessionsCallbackProxy.GetAnticheatProtected");

	USQUpdateSessionsCallbackProxy_GetAnticheatProtected_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQTournamentModeRulesetState.OnRep_Restrictions
// (Final, Native, Public)
void ASQTournamentModeRulesetState::OnRep_Restrictions()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQTournamentModeRulesetState.OnRep_Restrictions");

	ASQTournamentModeRulesetState_OnRep_Restrictions_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameRuleSet.VehicleDestroyed
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASQPlayerController*     Killer                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQPlayerController*     Victim                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQVehicle*              DestroyedVehicle               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameRuleSet::VehicleDestroyed(class ASQPlayerController* Killer, class ASQPlayerController* Victim, class ASQVehicle* DestroyedVehicle)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameRuleSet.VehicleDestroyed");

	ASQGameRuleSet_VehicleDestroyed_Params params;
	params.Killer = Killer;
	params.Victim = Victim;
	params.DestroyedVehicle = DestroyedVehicle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameRuleSet.UnregisterActor
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameRuleSet::UnregisterActor(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameRuleSet.UnregisterActor");

	ASQGameRuleSet_UnregisterActor_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameRuleSet.SetRoundTimeOverride
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            InRoundTimeOverride            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameRuleSet::SetRoundTimeOverride(int InRoundTimeOverride)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameRuleSet.SetRoundTimeOverride");

	ASQGameRuleSet_SetRoundTimeOverride_Params params;
	params.InRoundTimeOverride = InRoundTimeOverride;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameRuleSet.SendChatMessage
// (Native, Public, BlueprintCallable)
// Parameters:
// ESQChat                        ChatType                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 Message                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESQTeam                        Team                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Squad                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bBroadcastToAdmin              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameRuleSet::SendChatMessage(ESQChat ChatType, const struct FString& Message, ESQTeam Team, int Squad, bool bBroadcastToAdmin)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameRuleSet.SendChatMessage");

	ASQGameRuleSet_SendChatMessage_Params params;
	params.ChatType = ChatType;
	params.Message = Message;
	params.Team = Team;
	params.Squad = Squad;
	params.bBroadcastToAdmin = bBroadcastToAdmin;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameRuleSet.SecondPassed
// (Native, Event, Public, BlueprintEvent)
void ASQGameRuleSet::SecondPassed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameRuleSet.SecondPassed");

	ASQGameRuleSet_SecondPassed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameRuleSet.RegisterActor
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameRuleSet::RegisterActor(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameRuleSet.RegisterActor");

	ASQGameRuleSet_RegisterActor_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameRuleSet.ReadyToEndMatch
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// ESQReadyToEndMatch             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
ESQReadyToEndMatch ASQGameRuleSet::ReadyToEndMatch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameRuleSet.ReadyToEndMatch");

	ASQGameRuleSet_ReadyToEndMatch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameRuleSet.PostPlayerSpawn
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASQSoldier*              SpawningSoldier                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameRuleSet::PostPlayerSpawn(class ASQSoldier* SpawningSoldier)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameRuleSet.PostPlayerSpawn");

	ASQGameRuleSet_PostPlayerSpawn_Params params;
	params.SpawningSoldier = SpawningSoldier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameRuleSet.PostPlayerLogout
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AController*             Controller                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameRuleSet::PostPlayerLogout(class AController* Controller)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameRuleSet.PostPlayerLogout");

	ASQGameRuleSet_PostPlayerLogout_Params params;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameRuleSet.PostPlayerLogin
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class APlayerController*       Controller                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameRuleSet::PostPlayerLogin(class APlayerController* Controller)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameRuleSet.PostPlayerLogin");

	ASQGameRuleSet_PostPlayerLogin_Params params;
	params.Controller = Controller;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameRuleSet.PlayerWounded
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASQPlayerController*     Killer                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQPlayerController*     Victim                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameRuleSet::PlayerWounded(class ASQPlayerController* Killer, class ASQPlayerController* Victim)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameRuleSet.PlayerWounded");

	ASQGameRuleSet_PlayerWounded_Params params;
	params.Killer = Killer;
	params.Victim = Victim;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameRuleSet.PlayerWound
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASQPlayerController*     Victim                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameRuleSet::PlayerWound(class ASQPlayerController* Victim)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameRuleSet.PlayerWound");

	ASQGameRuleSet_PlayerWound_Params params;
	params.Victim = Victim;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameRuleSet.PlayerTeamWounded
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASQPlayerController*     Killer                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQPlayerController*     Victim                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameRuleSet::PlayerTeamWounded(class ASQPlayerController* Killer, class ASQPlayerController* Victim)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameRuleSet.PlayerTeamWounded");

	ASQGameRuleSet_PlayerTeamWounded_Params params;
	params.Killer = Killer;
	params.Victim = Victim;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameRuleSet.PlayerTeamKilled
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASQPlayerController*     Killer                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQPlayerController*     Victim                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameRuleSet::PlayerTeamKilled(class ASQPlayerController* Killer, class ASQPlayerController* Victim)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameRuleSet.PlayerTeamKilled");

	ASQGameRuleSet_PlayerTeamKilled_Params params;
	params.Killer = Killer;
	params.Victim = Victim;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameRuleSet.PlayerSuicide
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASQPlayerController*     Victim                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameRuleSet::PlayerSuicide(class ASQPlayerController* Victim)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameRuleSet.PlayerSuicide");

	ASQGameRuleSet_PlayerSuicide_Params params;
	params.Victim = Victim;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameRuleSet.PlayerSpawned
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASQPlayerController*     NewPlayer                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameRuleSet::PlayerSpawned(class ASQPlayerController* NewPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameRuleSet.PlayerSpawned");

	ASQGameRuleSet_PlayerSpawned_Params params;
	params.NewPlayer = NewPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameRuleSet.PlayerSelfWound
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASQPlayerController*     Victim                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameRuleSet::PlayerSelfWound(class ASQPlayerController* Victim)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameRuleSet.PlayerSelfWound");

	ASQGameRuleSet_PlayerSelfWound_Params params;
	params.Victim = Victim;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameRuleSet.PlayerSelfHealed
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASQPlayerController*     Healer                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameRuleSet::PlayerSelfHealed(class ASQPlayerController* Healer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameRuleSet.PlayerSelfHealed");

	ASQGameRuleSet_PlayerSelfHealed_Params params;
	params.Healer = Healer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameRuleSet.PlayerSelfBandaged
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASQPlayerController*     Bandager                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameRuleSet::PlayerSelfBandaged(class ASQPlayerController* Bandager)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameRuleSet.PlayerSelfBandaged");

	ASQGameRuleSet_PlayerSelfBandaged_Params params;
	params.Bandager = Bandager;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameRuleSet.PlayerRevived
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASQPlayerController*     Reviver                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQPlayerController*     RevivedPlayer                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameRuleSet::PlayerRevived(class ASQPlayerController* Reviver, class ASQPlayerController* RevivedPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameRuleSet.PlayerRevived");

	ASQGameRuleSet_PlayerRevived_Params params;
	params.Reviver = Reviver;
	params.RevivedPlayer = RevivedPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameRuleSet.PlayerKilled
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASQPlayerController*     Killer                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQPlayerController*     Victim                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameRuleSet::PlayerKilled(class ASQPlayerController* Killer, class ASQPlayerController* Victim)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameRuleSet.PlayerKilled");

	ASQGameRuleSet_PlayerKilled_Params params;
	params.Killer = Killer;
	params.Victim = Victim;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameRuleSet.PlayerJoinedTeam
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASQPlayerController*     Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            TeamIndex                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameRuleSet::PlayerJoinedTeam(class ASQPlayerController* Player, int TeamIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameRuleSet.PlayerJoinedTeam");

	ASQGameRuleSet_PlayerJoinedTeam_Params params;
	params.Player = Player;
	params.TeamIndex = TeamIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameRuleSet.PlayerJoined
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASQPlayerController*     NewPlayer                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameRuleSet::PlayerJoined(class ASQPlayerController* NewPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameRuleSet.PlayerJoined");

	ASQGameRuleSet_PlayerJoined_Params params;
	params.NewPlayer = NewPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameRuleSet.PlayerHealed
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASQPlayerController*     Healer                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQPlayerController*     HealedPlayer                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameRuleSet::PlayerHealed(class ASQPlayerController* Healer, class ASQPlayerController* HealedPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameRuleSet.PlayerHealed");

	ASQGameRuleSet_PlayerHealed_Params params;
	params.Healer = Healer;
	params.HealedPlayer = HealedPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameRuleSet.PlayerDied
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASQPlayerController*     Victim                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameRuleSet::PlayerDied(class ASQPlayerController* Victim)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameRuleSet.PlayerDied");

	ASQGameRuleSet_PlayerDied_Params params;
	params.Victim = Victim;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameRuleSet.PlayerBandaged
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASQPlayerController*     Bandager                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQPlayerController*     BandagedPlayer                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameRuleSet::PlayerBandaged(class ASQPlayerController* Bandager, class ASQPlayerController* BandagedPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameRuleSet.PlayerBandaged");

	ASQGameRuleSet_PlayerBandaged_Params params;
	params.Bandager = Bandager;
	params.BandagedPlayer = BandagedPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameRuleSet.NotifyPlayerOnScoreEvent
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class ASQPlayerController*     Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSQScoreEvent           ScoreEvent                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void ASQGameRuleSet::NotifyPlayerOnScoreEvent(class ASQPlayerController* Player, const struct FSQScoreEvent& ScoreEvent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameRuleSet.NotifyPlayerOnScoreEvent");

	ASQGameRuleSet_NotifyPlayerOnScoreEvent_Params params;
	params.Player = Player;
	params.ScoreEvent = ScoreEvent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameRuleSet.NotifyPlayer
// (Native, Public, BlueprintCallable)
// Parameters:
// class ASQPlayerController*     Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 Message                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESQNotificationTypes           NotificationType               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameRuleSet::NotifyPlayer(class ASQPlayerController* Player, const struct FString& Message, ESQNotificationTypes NotificationType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameRuleSet.NotifyPlayer");

	ASQGameRuleSet_NotifyPlayer_Params params;
	params.Player = Player;
	params.Message = Message;
	params.NotificationType = NotificationType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameRuleSet.ModifySoldierInventory
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASQSoldier*              Soldier                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameRuleSet::ModifySoldierInventory(class ASQSoldier* Soldier)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameRuleSet.ModifySoldierInventory");

	ASQGameRuleSet_ModifySoldierInventory_Params params;
	params.Soldier = Soldier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameRuleSet.MatchStarted
// (Native, Event, Public, BlueprintEvent)
void ASQGameRuleSet::MatchStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameRuleSet.MatchStarted");

	ASQGameRuleSet_MatchStarted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameRuleSet.MatchIsWaitingToStart
// (Native, Event, Public, BlueprintEvent)
void ASQGameRuleSet::MatchIsWaitingToStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameRuleSet.MatchIsWaitingToStart");

	ASQGameRuleSet_MatchIsWaitingToStart_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameRuleSet.LogisticsDropOff
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  VehicleActor                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          AmmoDroppedOff                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ConstructionDroppedOff         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameRuleSet::LogisticsDropOff(class AActor* VehicleActor, float AmmoDroppedOff, float ConstructionDroppedOff)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameRuleSet.LogisticsDropOff");

	ASQGameRuleSet_LogisticsDropOff_Params params;
	params.VehicleActor = VehicleActor;
	params.AmmoDroppedOff = AmmoDroppedOff;
	params.ConstructionDroppedOff = ConstructionDroppedOff;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameRuleSet.GetRoundTimeRemaining
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int ASQGameRuleSet::GetRoundTimeRemaining()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameRuleSet.GetRoundTimeRemaining");

	ASQGameRuleSet_GetRoundTimeRemaining_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameRuleSet.GetRoundTimeOverride
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int ASQGameRuleSet::GetRoundTimeOverride()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameRuleSet.GetRoundTimeOverride");

	ASQGameRuleSet_GetRoundTimeOverride_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameRuleSet.GetGameMode
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASQGameMode*             ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASQGameMode* ASQGameRuleSet::GetGameMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameRuleSet.GetGameMode");

	ASQGameRuleSet_GetGameMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameRuleSet.GetDisplayName
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString ASQGameRuleSet::GetDisplayName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameRuleSet.GetDisplayName");

	ASQGameRuleSet_GetDisplayName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// DelegateFunction Squad.SQToastWidget.ToastTextUpdatedEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// struct FText                   ToastText                      (Parm, NativeAccessSpecifierPublic)
void USQToastWidget::ToastTextUpdatedEvent__DelegateSignature(const struct FText& ToastText)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Squad.SQToastWidget.ToastTextUpdatedEvent__DelegateSignature");

	USQToastWidget_ToastTextUpdatedEvent__DelegateSignature_Params params;
	params.ToastText = ToastText;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQToastWidget.SetToastText
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FText                   InToastText                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void USQToastWidget::SetToastText(const struct FText& InToastText)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQToastWidget.SetToastText");

	USQToastWidget_SetToastText_Params params;
	params.InToastText = InToastText;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQToastWidget.SetLifetime
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          InLifetime                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQToastWidget::SetLifetime(float InLifetime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQToastWidget.SetLifetime");

	USQToastWidget_SetLifetime_Params params;
	params.InLifetime = InLifetime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQToastWidget.GetToastText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FText USQToastWidget::GetToastText()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQToastWidget.GetToastText");

	USQToastWidget_GetToastText_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQTemperatureComponent.OnRep_CurrentTemperature
// (Final, Native, Public)
// Parameters:
// float                          PreviousTemperature            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQTemperatureComponent::OnRep_CurrentTemperature(float PreviousTemperature)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQTemperatureComponent.OnRep_CurrentTemperature");

	USQTemperatureComponent_OnRep_CurrentTemperature_Params params;
	params.PreviousTemperature = PreviousTemperature;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQTemperatureComponent.AdjustTemperature
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          DegressOfAdjustment            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*             TempChanger                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQTemperatureComponent::AdjustTemperature(float DegressOfAdjustment, class AController* TempChanger)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQTemperatureComponent.AdjustTemperature");

	USQTemperatureComponent_AdjustTemperature_Params params;
	params.DegressOfAdjustment = DegressOfAdjustment;
	params.TempChanger = TempChanger;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQTeamStatePrivate.OnRep_IndexedTeamPrivateSquadStates
// (Native, Public)
void ASQTeamStatePrivate::OnRep_IndexedTeamPrivateSquadStates()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQTeamStatePrivate.OnRep_IndexedTeamPrivateSquadStates");

	ASQTeamStatePrivate_OnRep_IndexedTeamPrivateSquadStates_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQTeamStatePrivate.GetId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int ASQTeamStatePrivate::GetId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQTeamStatePrivate.GetId");

	ASQTeamStatePrivate_GetId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQTeamState.ScorePointsDelayed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Points                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 Reason                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQTeamState::ScorePointsDelayed(int Points, const struct FString& Reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQTeamState.ScorePointsDelayed");

	ASQTeamState_ScorePointsDelayed_Params params;
	params.Points = Points;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQTeamState.ScorePoints
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Points                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 Reason                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQTeamState::ScorePoints(int Points, const struct FString& Reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQTeamState.ScorePoints");

	ASQTeamState_ScorePoints_Params params;
	params.Points = Points;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQTeamState.RemovePlayerState
// (Native, Public)
// Parameters:
// class ASQPlayerState*          PlayerState                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQTeamState::RemovePlayerState(class ASQPlayerState* PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQTeamState.RemovePlayerState");

	ASQTeamState_RemovePlayerState_Params params;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQTeamState.RefreshSquadStates
// (Native, Public)
void ASQTeamState::RefreshSquadStates()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQTeamState.RefreshSquadStates");

	ASQTeamState_RefreshSquadStates_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQTeamState.OnRep_InfoClass
// (Native, Public)
void ASQTeamState::OnRep_InfoClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQTeamState.OnRep_InfoClass");

	ASQTeamState_OnRep_InfoClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQTeamState.OnRep_IndexedSquadStates
// (Native, Public)
void ASQTeamState::OnRep_IndexedSquadStates()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQTeamState.OnRep_IndexedSquadStates");

	ASQTeamState_OnRep_IndexedSquadStates_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQTeamState.GetTickets
// (Native, Public, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int ASQTeamState::GetTickets()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQTeamState.GetTickets");

	ASQTeamState_GetTickets_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQTeamState.GetTeamRoleAvailability
// (Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USQRoleSettings*         SquadRole                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQPlayerState*          Player                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bForDeployment                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OutAvailable                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OutTotal                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OutUsed                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQTeamState::GetTeamRoleAvailability(class USQRoleSettings* SquadRole, class ASQPlayerState* Player, bool bForDeployment, int* OutAvailable, int* OutTotal, int* OutUsed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQTeamState.GetTeamRoleAvailability");

	ASQTeamState_GetTeamRoleAvailability_Params params;
	params.SquadRole = SquadRole;
	params.Player = Player;
	params.bForDeployment = bForDeployment;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutAvailable != nullptr)
		*OutAvailable = params.OutAvailable;
	if (OutTotal != nullptr)
		*OutTotal = params.OutTotal;
	if (OutUsed != nullptr)
		*OutUsed = params.OutUsed;

}


// Function Squad.SQTeamState.GetSquadRoleAvailability
// (Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USQRoleSettings*         SquadRole                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQPlayerState*          Player                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bForDeployment                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OutAvailable                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OutTotal                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OutUsed                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQTeamState::GetSquadRoleAvailability(class USQRoleSettings* SquadRole, class ASQPlayerState* Player, bool bForDeployment, int* OutAvailable, int* OutTotal, int* OutUsed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQTeamState.GetSquadRoleAvailability");

	ASQTeamState_GetSquadRoleAvailability_Params params;
	params.SquadRole = SquadRole;
	params.Player = Player;
	params.bForDeployment = bForDeployment;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutAvailable != nullptr)
		*OutAvailable = params.OutAvailable;
	if (OutTotal != nullptr)
		*OutTotal = params.OutTotal;
	if (OutUsed != nullptr)
		*OutUsed = params.OutUsed;

}


// Function Squad.SQTeamState.GetRoleGroupAvailability
// (Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESQRoleTypeEnum                RoleType                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQPlayerState*          Player                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OutAvailable                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OutTotal                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OutUsed                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQTeamState::GetRoleGroupAvailability(ESQRoleTypeEnum RoleType, class ASQPlayerState* Player, int* OutAvailable, int* OutTotal, int* OutUsed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQTeamState.GetRoleGroupAvailability");

	ASQTeamState_GetRoleGroupAvailability_Params params;
	params.RoleType = RoleType;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutAvailable != nullptr)
		*OutAvailable = params.OutAvailable;
	if (OutTotal != nullptr)
		*OutTotal = params.OutTotal;
	if (OutUsed != nullptr)
		*OutUsed = params.OutUsed;

}


// Function Squad.SQTeamState.GetFirstAvailableSquadId
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int ASQTeamState::GetFirstAvailableSquadId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQTeamState.GetFirstAvailableSquadId");

	ASQTeamState_GetFirstAvailableSquadId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQTeamState.AddPlayerState
// (Native, Public)
// Parameters:
// class ASQPlayerState*          PlayerState                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQTeamState::AddPlayerState(class ASQPlayerState* PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQTeamState.AddPlayerState");

	ASQTeamState_AddPlayerState_Params params;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameSpawn.SetTeam
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESQTeam                        Team                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameSpawn::SetTeam(ESQTeam Team)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameSpawn.SetTeam");

	ASQGameSpawn_SetTeam_Params params;
	params.Team = Team;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameSpawn.SetSpawningEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameSpawn::SetSpawningEnabled(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameSpawn.SetSpawningEnabled");

	ASQGameSpawn_SetSpawningEnabled_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameSpawn.SetSieged
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameSpawn::SetSieged(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameSpawn.SetSieged");

	ASQGameSpawn_SetSieged_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameSpawn.SetRespawnIncrease
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameSpawn::SetRespawnIncrease(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameSpawn.SetRespawnIncrease");

	ASQGameSpawn_SetRespawnIncrease_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameSpawn.OnRep_Team
// (Native, Public)
void ASQGameSpawn::OnRep_Team()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameSpawn.OnRep_Team");

	ASQGameSpawn_OnRep_Team_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameSpawn.OnRep_SpawningEnabledChanged
// (Native, Public)
void ASQGameSpawn::OnRep_SpawningEnabledChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameSpawn.OnRep_SpawningEnabledChanged");

	ASQGameSpawn_OnRep_SpawningEnabledChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameSpawn.OnRep_SiegedChanged
// (Native, Public)
void ASQGameSpawn::OnRep_SiegedChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameSpawn.OnRep_SiegedChanged");

	ASQGameSpawn_OnRep_SiegedChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameSpawn.HasValidSpawnLocation
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQGameSpawn::HasValidSpawnLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameSpawn.HasValidSpawnLocation");

	ASQGameSpawn_HasValidSpawnLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameSpawn.GetWaveTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ASQGameSpawn::GetWaveTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameSpawn.GetWaveTime");

	ASQGameSpawn_GetWaveTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameSpawn.GetWaveSpawnStartTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ASQGameSpawn::GetWaveSpawnStartTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameSpawn.GetWaveSpawnStartTime");

	ASQGameSpawn_GetWaveSpawnStartTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameSpawn.GetWaveIntervalTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ASQGameSpawn::GetWaveIntervalTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameSpawn.GetWaveIntervalTime");

	ASQGameSpawn_GetWaveIntervalTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameSpawn.GetValidSpawnLocations
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FVector>         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
TArray<struct FVector> ASQGameSpawn::GetValidSpawnLocations()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameSpawn.GetValidSpawnLocations");

	ASQGameSpawn_GetValidSpawnLocations_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameSpawn.GetValidSpawnLocation
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UClass*                  DefaultPawnClass               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector ASQGameSpawn::GetValidSpawnLocation(class UClass* DefaultPawnClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameSpawn.GetValidSpawnLocation");

	ASQGameSpawn_GetValidSpawnLocation_Params params;
	params.DefaultPawnClass = DefaultPawnClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameSpawn.GetTeam
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESQTeam                        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
ESQTeam ASQGameSpawn::GetTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameSpawn.GetTeam");

	ASQGameSpawn_GetTeam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameSpawn.GetSpawnPointType
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESQSpawnPointType              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
ESQSpawnPointType ASQGameSpawn::GetSpawnPointType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameSpawn.GetSpawnPointType");

	ASQGameSpawn_GetSpawnPointType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameSpawn.GetSpawningEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQGameSpawn::GetSpawningEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameSpawn.GetSpawningEnabled");

	ASQGameSpawn_GetSpawningEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameSpawn.GetSpawnActor
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AActor* ASQGameSpawn::GetSpawnActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameSpawn.GetSpawnActor");

	ASQGameSpawn_GetSpawnActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameSpawn.GetSieged
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQGameSpawn::GetSieged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameSpawn.GetSieged");

	ASQGameSpawn_GetSieged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameSpawn.GetRespawnIncrease
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ASQGameSpawn::GetRespawnIncrease()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameSpawn.GetRespawnIncrease");

	ASQGameSpawn_GetRespawnIncrease_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameSpawn.GetRespawnDelay
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ASQGameSpawn::GetRespawnDelay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameSpawn.GetRespawnDelay");

	ASQGameSpawn_GetRespawnDelay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameSpawn.CanSpawn
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQGameSpawn::CanSpawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameSpawn.CanSpawn");

	ASQGameSpawn_CanSpawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameSpawn.BP_OnSiegedStateChanged
// (Native, Event, Public, BlueprintEvent)
void ASQGameSpawn::BP_OnSiegedStateChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameSpawn.BP_OnSiegedStateChanged");

	ASQGameSpawn_BP_OnSiegedStateChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQTeamPrep.OnCompExit
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQTeamPrep::OnCompExit(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQTeamPrep.OnCompExit");

	ASQTeamPrep_OnCompExit_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQTeamPrep.OnCompBeginOverlap
// (Final, Native, Protected, HasOutParms)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void ASQTeamPrep::OnCompBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQTeamPrep.OnCompBeginOverlap");

	ASQTeamPrep_OnCompBeginOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQTeamPrep.GetStagingTimeRemaining
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int ASQTeamPrep::GetStagingTimeRemaining()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQTeamPrep.GetStagingTimeRemaining");

	ASQTeamPrep_GetStagingTimeRemaining_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQTeamPrep.CheckOverlap
// (Final, Native, Protected)
void ASQTeamPrep::CheckOverlap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQTeamPrep.CheckOverlap");

	ASQTeamPrep_CheckOverlap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQTeamInterface.OnTeamChange
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int                            PreviousTeam                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQTeamInterface::OnTeamChange(int PreviousTeam)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQTeamInterface.OnTeamChange");

	USQTeamInterface_OnTeamChange_Params params;
	params.PreviousTeam = PreviousTeam;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQTeamInterface.GetTeamId
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int USQTeamInterface::GetTeamId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQTeamInterface.GetTeamId");

	USQTeamInterface_GetTeamId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQUserWidget.SelfRemove
// (Native, Public, BlueprintCallable)
void USQUserWidget::SelfRemove()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQUserWidget.SelfRemove");

	USQUserWidget_SelfRemove_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQUserWidget.BPInit
// (Event, Public, BlueprintEvent)
void USQUserWidget::BPInit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQUserWidget.BPInit");

	USQUserWidget_BPInit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQBaseButton.UpdateActiveState
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
void USQBaseButton::UpdateActiveState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBaseButton.UpdateActiveState");

	USQBaseButton_UpdateActiveState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQBaseButton.InitWidget
// (Native, Public, BlueprintCallable)
void USQBaseButton::InitWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBaseButton.InitWidget");

	USQBaseButton_InitWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSteamItem.SetEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bNewEnable                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bOverrideIncompatibles         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQSteamItem::SetEnabled(bool bNewEnable, bool bOverrideIncompatibles)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSteamItem.SetEnabled");

	USQSteamItem_SetEnabled_Params params;
	params.bNewEnable = bNewEnable;
	params.bOverrideIncompatibles = bOverrideIncompatibles;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSteamItem.IsCompatibleWith
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USQSteamItem*            OtherItem                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQSteamItem::IsCompatibleWith(class USQSteamItem* OtherItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSteamItem.IsCompatibleWith");

	USQSteamItem_IsCompatibleWith_Params params;
	params.OtherItem = OtherItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSteamInventoryUIBlueprintFunctionLibrary.GetSteamInventory
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USQSteamInventoryUI*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USQSteamInventoryUI* USQSteamInventoryUIBlueprintFunctionLibrary::STATIC_GetSteamInventory(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSteamInventoryUIBlueprintFunctionLibrary.GetSteamInventory");

	USQSteamInventoryUIBlueprintFunctionLibrary_GetSteamInventory_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSteamInventoryUI.OnGetCacheSuccess
// (Final, Native, Public, HasOutParms)
// Parameters:
// TArray<struct FBlueprintOnlineItem> Results                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
void USQSteamInventoryUI::OnGetCacheSuccess(TArray<struct FBlueprintOnlineItem> Results)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSteamInventoryUI.OnGetCacheSuccess");

	USQSteamInventoryUI_OnGetCacheSuccess_Params params;
	params.Results = Results;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSteamInventoryUI.GetItemsOfClass
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  ItemClass                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class USQSteamItem*>    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
TArray<class USQSteamItem*> USQSteamInventoryUI::GetItemsOfClass(class UClass* ItemClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSteamInventoryUI.GetItemsOfClass");

	USQSteamInventoryUI_GetItemsOfClass_Params params;
	params.ItemClass = ItemClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSteamInventoryUI.GetIncompatibleItems
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USQSteamItem*            ItemToCheckFor                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bEnabledOnly                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class USQSteamItem*>    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
TArray<class USQSteamItem*> USQSteamInventoryUI::GetIncompatibleItems(class USQSteamItem* ItemToCheckFor, bool bEnabledOnly)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSteamInventoryUI.GetIncompatibleItems");

	USQSteamInventoryUI_GetIncompatibleItems_Params params;
	params.ItemToCheckFor = ItemToCheckFor;
	params.bEnabledOnly = bEnabledOnly;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSteamInventoryUI.GetFirstIncompatibleItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USQSteamItem*            ItemToCheckFor                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bEnabledOnly                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USQSteamItem*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USQSteamItem* USQSteamInventoryUI::GetFirstIncompatibleItem(class USQSteamItem* ItemToCheckFor, bool bEnabledOnly)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSteamInventoryUI.GetFirstIncompatibleItem");

	USQSteamInventoryUI_GetFirstIncompatibleItem_Params params;
	params.ItemToCheckFor = ItemToCheckFor;
	params.bEnabledOnly = bEnabledOnly;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSteamInventoryUI.CacheSteamItems
// (Final, Native, Public, BlueprintCallable)
void USQSteamInventoryUI::CacheSteamItems()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSteamInventoryUI.CacheSteamItems");

	USQSteamInventoryUI_CacheSteamItems_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSteamInventory.OnGetCacheSuccess
// (Final, Native, Public, HasOutParms)
// Parameters:
// TArray<struct FBlueprintOnlineItem> Results                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
void USQSteamInventory::OnGetCacheSuccess(TArray<struct FBlueprintOnlineItem> Results)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSteamInventory.OnGetCacheSuccess");

	USQSteamInventory_OnGetCacheSuccess_Params params;
	params.Results = Results;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPawnMovementComponent.GetMovementBase
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPrimitiveComponent*     ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UPrimitiveComponent* USQPawnMovementComponent::GetMovementBase()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPawnMovementComponent.GetMovementBase");

	USQPawnMovementComponent_GetMovementBase_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQNetMoveComponent.SendPackedMoveRPC
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// TArray<unsigned char>          PackedMove                     (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
void USQNetMoveComponent::SendPackedMoveRPC(TArray<unsigned char> PackedMove)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQNetMoveComponent.SendPackedMoveRPC");

	USQNetMoveComponent_SendPackedMoveRPC_Params params;
	params.PackedMove = PackedMove;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQNetMoveComponent.SendClientCorrection
// (Net, NetReliable, Native, Event, Protected, NetClient, NetValidate)
// Parameters:
// TArray<unsigned char>          PackedMove                     (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
void USQNetMoveComponent::SendClientCorrection(TArray<unsigned char> PackedMove)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQNetMoveComponent.SendClientCorrection");

	USQNetMoveComponent_SendClientCorrection_Params params;
	params.PackedMove = PackedMove;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQNetMoveComponent.OnRep_LatestPackedMove
// (Native, Public)
void USQNetMoveComponent::OnRep_LatestPackedMove()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQNetMoveComponent.OnRep_LatestPackedMove");

	USQNetMoveComponent_OnRep_LatestPackedMove_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQStatefulButton.OnPressed
// (Event, Protected, BlueprintEvent)
void USQStatefulButton::OnPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQStatefulButton.OnPressed");

	USQStatefulButton_OnPressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQStatefulButton.GetCurrentState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int USQStatefulButton::GetCurrentState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQStatefulButton.GetCurrentState");

	USQStatefulButton_GetCurrentState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQStatefulButton.ChangeImage
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            ImageIndex                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQStatefulButton::ChangeImage(int ImageIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQStatefulButton.ChangeImage");

	USQStatefulButton_ChangeImage_Params params;
	params.ImageIndex = ImageIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQStagingTimerText.OnFellBelowThreshold
// (Event, Protected, BlueprintEvent)
void USQStagingTimerText::OnFellBelowThreshold()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQStagingTimerText.OnFellBelowThreshold");

	USQStagingTimerText_OnFellBelowThreshold_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateData.OnWorldCleanup
// (Final, Native, Private)
// Parameters:
// class UWorld*                  World                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bSessionEnded                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bCleanupResources              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQCoreStateData::OnWorldCleanup(class UWorld* World, bool bSessionEnded, bool bCleanupResources)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateData.OnWorldCleanup");

	USQCoreStateData_OnWorldCleanup_Params params;
	params.World = World;
	params.bSessionEnded = bSessionEnded;
	params.bCleanupResources = bCleanupResources;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateData.OnListenerCreate
// (Final, Native, Private)
// Parameters:
// class USQCoreStateListener*    Listener                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQCoreStateData::OnListenerCreate(class USQCoreStateListener* Listener)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateData.OnListenerCreate");

	USQCoreStateData_OnListenerCreate_Params params;
	params.Listener = Listener;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSquadState.ScorePointsDelayed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Points                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 Reason                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSquadState::ScorePointsDelayed(int Points, const struct FString& Reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSquadState.ScorePointsDelayed");

	ASQSquadState_ScorePointsDelayed_Params params;
	params.Points = Points;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSquadState.ScorePoints
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Points                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 Reason                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSquadState::ScorePoints(int Points, const struct FString& Reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSquadState.ScorePoints");

	ASQSquadState_ScorePoints_Params params;
	params.Points = Points;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSquadState.RemovePlayerState
// (Native, Public)
// Parameters:
// class ASQPlayerState*          PlayerState                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSquadState::RemovePlayerState(class ASQPlayerState* PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSquadState.RemovePlayerState");

	ASQSquadState_RemovePlayerState_Params params;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSquadState.OnRep_TeamId
// (Final, Native, Public)
void ASQSquadState::OnRep_TeamId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSquadState.OnRep_TeamId");

	ASQSquadState_OnRep_TeamId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSquadState.OnRep_PlayerStates
// (Final, Native, Public)
void ASQSquadState::OnRep_PlayerStates()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSquadState.OnRep_PlayerStates");

	ASQSquadState_OnRep_PlayerStates_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSquadState.OnRep_Name
// (Final, Native, Public)
void ASQSquadState::OnRep_Name()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSquadState.OnRep_Name");

	ASQSquadState_OnRep_Name_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSquadState.OnRep_LeaderState
// (Final, Native, Public)
// Parameters:
// class ASQPlayerState*          LastLeaderState                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSquadState::OnRep_LeaderState(class ASQPlayerState* LastLeaderState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSquadState.OnRep_LeaderState");

	ASQSquadState_OnRep_LeaderState_Params params;
	params.LastLeaderState = LastLeaderState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSquadState.OnRep_IsLocked
// (Final, Native, Public)
void ASQSquadState::OnRep_IsLocked()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSquadState.OnRep_IsLocked");

	ASQSquadState_OnRep_IsLocked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSquadState.OnRep_Id
// (Final, Native, Public)
void ASQSquadState::OnRep_Id()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSquadState.OnRep_Id");

	ASQSquadState_OnRep_Id_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSquadState.BroadcastPlayerLeaveEvent
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// class ASQPlayerState*          PlayerState                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSquadState::BroadcastPlayerLeaveEvent(class ASQPlayerState* PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSquadState.BroadcastPlayerLeaveEvent");

	ASQSquadState_BroadcastPlayerLeaveEvent_Params params;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSquadState.BroadcastPlayerJoinEvent
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// class ASQPlayerState*          PlayerState                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSquadState::BroadcastPlayerJoinEvent(class ASQPlayerState* PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSquadState.BroadcastPlayerJoinEvent");

	ASQSquadState_BroadcastPlayerJoinEvent_Params params;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSquadState.BroadcastLeaderChangeEvent
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// class ASQPlayerState*          PlayerState                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSquadState::BroadcastLeaderChangeEvent(class ASQPlayerState* PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSquadState.BroadcastLeaderChangeEvent");

	ASQSquadState_BroadcastLeaderChangeEvent_Params params;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSquadState.AddPlayerState
// (Native, Public)
// Parameters:
// class ASQPlayerState*          PlayerState                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSquadState::AddPlayerState(class ASQPlayerState* PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSquadState.AddPlayerState");

	ASQSquadState_AddPlayerState_Params params;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSquadSelection.ShowSquadCreationWidgets
// (Final, Native, Public, BlueprintCallable)
void USQSquadSelection::ShowSquadCreationWidgets()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSquadSelection.ShowSquadCreationWidgets");

	USQSquadSelection_ShowSquadCreationWidgets_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSquadSelection.SelfTick
// (Final, Native, Public, BlueprintCallable)
void USQSquadSelection::SelfTick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSquadSelection.SelfTick");

	USQSquadSelection_SelfTick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSquadSelection.RethrowSquadCreated
// (Final, Native, Public)
void USQSquadSelection::RethrowSquadCreated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSquadSelection.RethrowSquadCreated");

	USQSquadSelection_RethrowSquadCreated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSquadSelection.LeaveSquad
// (Final, Native, Public, BlueprintCallable)
void USQSquadSelection::LeaveSquad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSquadSelection.LeaveSquad");

	USQSquadSelection_LeaveSquad_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSquadSelection.InitWidget
// (Final, Native, Public, BlueprintCallable)
void USQSquadSelection::InitWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSquadSelection.InitWidget");

	USQSquadSelection_InitWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSquadSelection.HideSquadCreationWidgets
// (Final, Native, Public, BlueprintCallable)
void USQSquadSelection::HideSquadCreationWidgets()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSquadSelection.HideSquadCreationWidgets");

	USQSquadSelection_HideSquadCreationWidgets_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameRallyPoint.GetNumberOfSpawns
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int ASQGameRallyPoint::GetNumberOfSpawns()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameRallyPoint.GetNumberOfSpawns");

	ASQGameRallyPoint_GetNumberOfSpawns_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSquadRallyPoint.OnRep_SquadState
// (Native, Public)
void ASQSquadRallyPoint::OnRep_SquadState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSquadRallyPoint.OnRep_SquadState");

	ASQSquadRallyPoint_OnRep_SquadState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSquadMemberListItem.ShowActionMenu
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            MenuIdx                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQSquadMemberListItem::ShowActionMenu(int MenuIdx)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSquadMemberListItem.ShowActionMenu");

	USQSquadMemberListItem_ShowActionMenu_Params params;
	params.MenuIdx = MenuIdx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSquadMemberListItem.OnSLInvite
// (Final, Native, Protected)
void USQSquadMemberListItem::OnSLInvite()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSquadMemberListItem.OnSLInvite");

	USQSquadMemberListItem_OnSLInvite_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSquadMemberListItem.OnPromoteToSL
// (Final, Native, Protected)
void USQSquadMemberListItem::OnPromoteToSL()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSquadMemberListItem.OnPromoteToSL");

	USQSquadMemberListItem_OnPromoteToSL_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSquadMemberListItem.OnKick
// (Final, Native, Protected)
void USQSquadMemberListItem::OnKick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSquadMemberListItem.OnKick");

	USQSquadMemberListItem_OnKick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSquadMemberListItem.OnActionButton
// (Final, Native, Protected)
void USQSquadMemberListItem::OnActionButton()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSquadMemberListItem.OnActionButton");

	USQSquadMemberListItem_OnActionButton_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSquadMemberListItem.InitEventHandlers
// (Final, Native, Protected, BlueprintCallable)
void USQSquadMemberListItem::InitEventHandlers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSquadMemberListItem.InitEventHandlers");

	USQSquadMemberListItem_InitEventHandlers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSquadMemberListItem.BPInitWidgetRefs
// (Event, Public, BlueprintEvent)
void USQSquadMemberListItem::BPInitWidgetRefs()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSquadMemberListItem.BPInitWidgetRefs");

	USQSquadMemberListItem_BPInitWidgetRefs_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSquadMemberList.RefreshSquadInfo
// (Final, Native, Protected, BlueprintCallable)
void USQSquadMemberList::RefreshSquadInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSquadMemberList.RefreshSquadInfo");

	USQSquadMemberList_RefreshSquadInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSquadMemberList.RefreshList
// (Final, Native, Protected, BlueprintCallable)
void USQSquadMemberList::RefreshList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSquadMemberList.RefreshList");

	USQSquadMemberList_RefreshList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSquadMemberList.OnLockButtonClicked
// (Final, Native, Protected)
void USQSquadMemberList::OnLockButtonClicked()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSquadMemberList.OnLockButtonClicked");

	USQSquadMemberList_OnLockButtonClicked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSquadMemberList.OnInviteButtonClicked
// (Final, Native, Protected)
void USQSquadMemberList::OnInviteButtonClicked()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSquadMemberList.OnInviteButtonClicked");

	USQSquadMemberList_OnInviteButtonClicked_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSquadMemberList.Init
// (Final, Native, Protected, BlueprintCallable)
void USQSquadMemberList::Init()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSquadMemberList.Init");

	USQSquadMemberList_Init_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSquadList.InitWidget
// (Final, Native, Public, BlueprintCallable)
void USQSquadList::InitWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSquadList.InitWidget");

	USQSquadList_InitWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSquad.TryClaimVehicle
// (Final, Native, Public)
// Parameters:
// class ASQVehicle*              Vehicle                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQSquad::TryClaimVehicle(class ASQVehicle* Vehicle)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSquad.TryClaimVehicle");

	ASQSquad_TryClaimVehicle_Params params;
	params.Vehicle = Vehicle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSquad.TryApproveVehicleClaim
// (Final, Native, Public)
void ASQSquad::TryApproveVehicleClaim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSquad.TryApproveVehicleClaim");

	ASQSquad_TryApproveVehicleClaim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Squad.SQSquad.OnPlayerJoinPartSquadEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class ASQSquad*                Squad                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQPlayerController*     Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSquad::OnPlayerJoinPartSquadEvent__DelegateSignature(class ASQSquad* Squad, class ASQPlayerController* Player)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Squad.SQSquad.OnPlayerJoinPartSquadEvent__DelegateSignature");

	ASQSquad_OnPlayerJoinPartSquadEvent__DelegateSignature_Params params;
	params.Squad = Squad;
	params.Player = Player;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Squad.SQSquad.OnFireteamChangedEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class ASQSquad*                Squad                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            FireTeamId                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSquad::OnFireteamChangedEvent__DelegateSignature(class ASQSquad* Squad, int FireTeamId)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Squad.SQSquad.OnFireteamChangedEvent__DelegateSignature");

	ASQSquad_OnFireteamChangedEvent__DelegateSignature_Params params;
	params.Squad = Squad;
	params.FireTeamId = FireTeamId;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSquad.GiveSquadLeader
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASQPlayerState*          PlayerState                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQSquad::GiveSquadLeader(class ASQPlayerState* PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSquad.GiveSquadLeader");

	ASQSquad_GiveSquadLeader_Params params;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSquad.GetBlockingPartyVehicleClaims
// (Final, Native, Public, Const)
// Parameters:
// TArray<class USQVehicleClaim*> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
TArray<class USQVehicleClaim*> ASQSquad::GetBlockingPartyVehicleClaims()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSquad.GetBlockingPartyVehicleClaims");

	ASQSquad_GetBlockingPartyVehicleClaims_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSquad.GetBlockingDirectVehicleClaims
// (Final, Native, Public, Const)
// Parameters:
// TArray<class USQVehicleClaim*> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
TArray<class USQVehicleClaim*> ASQSquad::GetBlockingDirectVehicleClaims()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSquad.GetBlockingDirectVehicleClaims");

	ASQSquad_GetBlockingDirectVehicleClaims_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSpectatorMan.ServerSetFlySpeedTarget
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          InFlySpeedTarget               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSpectatorMan::ServerSetFlySpeedTarget(float InFlySpeedTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSpectatorMan.ServerSetFlySpeedTarget");

	ASQSpectatorMan_ServerSetFlySpeedTarget_Params params;
	params.InFlySpeedTarget = InFlySpeedTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSpectatorMan.ServerSetDecelerationTarget
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          InDecelerationTarget           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSpectatorMan::ServerSetDecelerationTarget(float InDecelerationTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSpectatorMan.ServerSetDecelerationTarget");

	ASQSpectatorMan_ServerSetDecelerationTarget_Params params;
	params.InDecelerationTarget = InDecelerationTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSpectatorMan.DrawHUD
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASQHUD*                  SquadHUD                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCanvas*                 Canvas                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSpectatorMan::DrawHUD(class ASQHUD* SquadHUD, class UCanvas* Canvas)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSpectatorMan.DrawHUD");

	ASQSpectatorMan_DrawHUD_Params params;
	params.SquadHUD = SquadHUD;
	params.Canvas = Canvas;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldierRagdollComponent.SetRagdollState
// (Native, Public, BlueprintCallable)
// Parameters:
// ESQSoldierRagdollReason        NewRagdollState                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQSoldierRagdollComponent::SetRagdollState(ESQSoldierRagdollReason NewRagdollState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierRagdollComponent.SetRagdollState");

	USQSoldierRagdollComponent_SetRagdollState_Params params;
	params.NewRagdollState = NewRagdollState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldierRagdollComponent.SetDragging
// (Final, Native, Public)
// Parameters:
// bool                           bIsDragging                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQSoldierRagdollComponent::SetDragging(bool bIsDragging)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierRagdollComponent.SetDragging");

	USQSoldierRagdollComponent_SetDragging_Params params;
	params.bIsDragging = bIsDragging;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldierRagdollComponent.ServerSetRagdollState
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// ESQSoldierRagdollReason        NewRagdollState                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQSoldierRagdollComponent::ServerSetRagdollState(ESQSoldierRagdollReason NewRagdollState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierRagdollComponent.ServerSetRagdollState");

	USQSoldierRagdollComponent_ServerSetRagdollState_Params params;
	params.NewRagdollState = NewRagdollState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldierRagdollComponent.OnRep_RagdollState
// (Native, Protected)
void USQSoldierRagdollComponent::OnRep_RagdollState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierRagdollComponent.OnRep_RagdollState");

	USQSoldierRagdollComponent_OnRep_RagdollState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldierRagdollComponent.IsInRagdoll
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQSoldierRagdollComponent::IsInRagdoll()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierRagdollComponent.IsInRagdoll");

	USQSoldierRagdollComponent_IsInRagdoll_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldierRagdollComponent.GetRagdollState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESQSoldierRagdollReason        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
ESQSoldierRagdollReason USQSoldierRagdollComponent::GetRagdollState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierRagdollComponent.GetRagdollState");

	USQSoldierRagdollComponent_GetRagdollState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldier.Wound
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// float                          KillingDamage                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class AController*             Killer                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQSoldier::Wound(float KillingDamage, const struct FDamageEvent& DamageEvent, class AController* Killer, class AActor* DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.Wound");

	ASQSoldier_Wound_Params params;
	params.KillingDamage = KillingDamage;
	params.DamageEvent = DamageEvent;
	params.Killer = Killer;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldier.UpdatePatches
// (Final, Native, Public)
void ASQSoldier::UpdatePatches()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.UpdatePatches");

	ASQSoldier_UpdatePatches_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.UpdateFirstPersonVisibility
// (Final, Native, Public, BlueprintCallable)
void ASQSoldier::UpdateFirstPersonVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.UpdateFirstPersonVisibility");

	ASQSoldier_UpdateFirstPersonVisibility_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.UnProne
// (Native, Public, BlueprintCallable)
void ASQSoldier::UnProne()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.UnProne");

	ASQSoldier_UnProne_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.SwitchWeapon
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            NewWeaponSlotla                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQSoldier::SwitchWeapon(int NewWeaponSlotla)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.SwitchWeapon");

	ASQSoldier_SwitchWeapon_Params params;
	params.NewWeaponSlotla = NewWeaponSlotla;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldier.SwitchedSeat
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class USQVehicleSeatComponent* PreviousSeat                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USQVehicleSeatComponent* NewSeat                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldier::SwitchedSeat(class USQVehicleSeatComponent* PreviousSeat, class USQVehicleSeatComponent* NewSeat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.SwitchedSeat");

	ASQSoldier_SwitchedSeat_Params params;
	params.PreviousSeat = PreviousSeat;
	params.NewSeat = NewSeat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.Suicide
// (Native, Public, BlueprintCallable)
void ASQSoldier::Suicide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.Suicide");

	ASQSoldier_Suicide_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.StopBodyDragging
// (Native, Public, BlueprintCallable)
void ASQSoldier::StopBodyDragging()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.StopBodyDragging");

	ASQSoldier_StopBodyDragging_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.StopBleeding
// (Final, Native, Public, BlueprintCallable)
void ASQSoldier::StopBleeding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.StopBleeding");

	ASQSoldier_StopBleeding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.StartBodyDragging
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQSoldier::StartBodyDragging()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.StartBodyDragging");

	ASQSoldier_StartBodyDragging_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldier.StartAimDownSights
// (Native, Public)
void ASQSoldier::StartAimDownSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.StartAimDownSights");

	ASQSoldier_StartAimDownSights_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.SetSeatState
// (Native, Public, BlueprintCallable)
// Parameters:
// ESQSoldierSeatState            SoldierSeatState               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldier::SetSeatState(ESQSoldierSeatState SoldierSeatState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.SetSeatState");

	ASQSoldier_SetSeatState_Params params;
	params.SoldierSeatState = SoldierSeatState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.SetFirstPersonVisibility
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bIsFirstPersonVisible          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldier::SetFirstPersonVisibility(bool bIsFirstPersonVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.SetFirstPersonVisibility");

	ASQSoldier_SetFirstPersonVisibility_Params params;
	params.bIsFirstPersonVisible = bIsFirstPersonVisible;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.ServerVehicleCollision
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ASQVehicle*              Vehicle                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bShouldKill                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldier::ServerVehicleCollision(class ASQVehicle* Vehicle, bool bShouldKill)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.ServerVehicleCollision");

	ASQSoldier_ServerVehicleCollision_Params params;
	params.Vehicle = Vehicle;
	params.bShouldKill = bShouldKill;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.ServerPickupAmmoBag
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// class ASQDeployableAmmoBag*    ammobag                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldier::ServerPickupAmmoBag(class ASQDeployableAmmoBag* ammobag)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.ServerPickupAmmoBag");

	ASQSoldier_ServerPickupAmmoBag_Params params;
	params.ammobag = ammobag;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.ServerEndInteract
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
void ASQSoldier::ServerEndInteract()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.ServerEndInteract");

	ASQSoldier_ServerEndInteract_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.ServerDragBody
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           bDrag                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQSoldier*              SoldierToDrag                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FName                   BoneName                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldier::ServerDragBody(bool bDrag, class ASQSoldier* SoldierToDrag, const struct FName& BoneName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.ServerDragBody");

	ASQSoldier_ServerDragBody_Params params;
	params.bDrag = bDrag;
	params.SoldierToDrag = SoldierToDrag;
	params.BoneName = BoneName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.ServerDisableSpawnProtection
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
void ASQSoldier::ServerDisableSpawnProtection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.ServerDisableSpawnProtection");

	ASQSoldier_ServerDisableSpawnProtection_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.ServerDeployableInteractable
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// class ASQDeployableInteractable* Deployable                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldier::ServerDeployableInteractable(class ASQDeployableInteractable* Deployable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.ServerDeployableInteractable");

	ASQSoldier_ServerDeployableInteractable_Params params;
	params.Deployable = Deployable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.ServerDebugToggleGodMode
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
void ASQSoldier::ServerDebugToggleGodMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.ServerDebugToggleGodMode");

	ASQSoldier_ServerDebugToggleGodMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.ServerDebugStopBleeding
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
void ASQSoldier::ServerDebugStopBleeding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.ServerDebugStopBleeding");

	ASQSoldier_ServerDebugStopBleeding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.ServerDebugRevive
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
void ASQSoldier::ServerDebugRevive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.ServerDebugRevive");

	ASQSoldier_ServerDebugRevive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.ServerDebugRearm
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
void ASQSoldier::ServerDebugRearm()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.ServerDebugRearm");

	ASQSoldier_ServerDebugRearm_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.ServerDebugFullHealth
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
void ASQSoldier::ServerDebugFullHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.ServerDebugFullHealth");

	ASQSoldier_ServerDebugFullHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.ServerBeginInteract
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
void ASQSoldier::ServerBeginInteract()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.ServerBeginInteract");

	ASQSoldier_ServerBeginInteract_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.ReviveServerOnly
// (Native, Public, BlueprintCallable)
void ASQSoldier::ReviveServerOnly()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.ReviveServerOnly");

	ASQSoldier_ReviveServerOnly_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.Prone
// (Native, Public, BlueprintCallable)
void ASQSoldier::Prone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.Prone");

	ASQSoldier_Prone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.PlayFootStep
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FName                   SocketName                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FName                   OpposingKneeSocketName         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          MaxDistanceInMeters            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldier::PlayFootStep(const struct FName& SocketName, const struct FName& OpposingKneeSocketName, float MaxDistanceInMeters)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.PlayFootStep");

	ASQSoldier_PlayFootStep_Params params;
	params.SocketName = SocketName;
	params.OpposingKneeSocketName = OpposingKneeSocketName;
	params.MaxDistanceInMeters = MaxDistanceInMeters;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.PlayEquipmentSound
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          MaxDistanceInMeters            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldier::PlayEquipmentSound(float MaxDistanceInMeters)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.PlayEquipmentSound");

	ASQSoldier_PlayEquipmentSound_Params params;
	params.MaxDistanceInMeters = MaxDistanceInMeters;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.PlayClothingSound
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          MaxDistanceInMeters            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldier::PlayClothingSound(float MaxDistanceInMeters)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.PlayClothingSound");

	ASQSoldier_PlayClothingSound_Params params;
	params.MaxDistanceInMeters = MaxDistanceInMeters;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.OnSnapZoneOverlapEnd
// (Native, Public)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldier::OnSnapZoneOverlapEnd(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.OnSnapZoneOverlapEnd");

	ASQSoldier_OnSnapZoneOverlapEnd_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.OnSnapZoneOverlapBegin
// (Native, Public, HasOutParms)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void ASQSoldier::OnSnapZoneOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.OnSnapZoneOverlapBegin");

	ASQSoldier_OnSnapZoneOverlapBegin_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.OnRep_SoldierSkinIndex
// (Final, Native, Public)
void ASQSoldier::OnRep_SoldierSkinIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.OnRep_SoldierSkinIndex");

	ASQSoldier_OnRep_SoldierSkinIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.OnRep_LastTakeHitInfo
// (Native, Protected)
void ASQSoldier::OnRep_LastTakeHitInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.OnRep_LastTakeHitInfo");

	ASQSoldier_OnRep_LastTakeHitInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.OnRep_IsWounded
// (Native, Public)
void ASQSoldier::OnRep_IsWounded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.OnRep_IsWounded");

	ASQSoldier_OnRep_IsWounded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.OnRep_IsDying
// (Native, Public)
void ASQSoldier::OnRep_IsDying()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.OnRep_IsDying");

	ASQSoldier_OnRep_IsDying_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.OnRep_IsBleeding
// (Native, Public)
void ASQSoldier::OnRep_IsBleeding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.OnRep_IsBleeding");

	ASQSoldier_OnRep_IsBleeding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.OnRep_Health
// (Native, Public)
// Parameters:
// float                          OldHealth                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldier::OnRep_Health(float OldHealth)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.OnRep_Health");

	ASQSoldier_OnRep_Health_Params params;
	params.OldHealth = OldHealth;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.OnRep_DraggingData
// (Final, Native, Private)
void ASQSoldier::OnRep_DraggingData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.OnRep_DraggingData");

	ASQSoldier_OnRep_DraggingData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.OnRep_CurrentSeat
// (Native, Public)
// Parameters:
// class USQVehicleSeatComponent* PreviousSeat                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldier::OnRep_CurrentSeat(class USQVehicleSeatComponent* PreviousSeat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.OnRep_CurrentSeat");

	ASQSoldier_OnRep_CurrentSeat_Params params;
	params.PreviousSeat = PreviousSeat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.OnRagdollHit
// (Final, Native, Public, HasOutParms, HasDefaults)
// Parameters:
// class UPrimitiveComponent*     HitComp                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 NormalImpulse                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void ASQSoldier::OnRagdollHit(class UPrimitiveComponent* HitComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.OnRagdollHit");

	ASQSoldier_OnRagdollHit_Params params;
	params.HitComp = HitComp;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.OnPrevItem
// (Native, Public, BlueprintCallable)
void ASQSoldier::OnPrevItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.OnPrevItem");

	ASQSoldier_OnPrevItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.OnNextItem
// (Native, Public, BlueprintCallable)
void ASQSoldier::OnNextItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.OnNextItem");

	ASQSoldier_OnNextItem_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.MulticastToggleGodMode
// (Net, NetReliable, Native, Event, NetMulticast, Public)
void ASQSoldier::MulticastToggleGodMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.MulticastToggleGodMode");

	ASQSoldier_MulticastToggleGodMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.MulticastSetDragging
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// bool                           bDrag                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQSoldier*              SoldierToDrag                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FName                   BoneName                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldier::MulticastSetDragging(bool bDrag, class ASQSoldier* SoldierToDrag, const struct FName& BoneName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.MulticastSetDragging");

	ASQSoldier_MulticastSetDragging_Params params;
	params.bDrag = bDrag;
	params.SoldierToDrag = SoldierToDrag;
	params.BoneName = BoneName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.MulticastLean
// (Final, Net, NetReliable, Native, Event, NetMulticast, Private)
// Parameters:
// unsigned char                  NewLeanDirection               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldier::MulticastLean(unsigned char NewLeanDirection)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.MulticastLean");

	ASQSoldier_MulticastLean_Params params;
	params.NewLeanDirection = NewLeanDirection;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.MulticastChangeRootComponent
// (Net, NetReliable, Native, Event, NetMulticast, Public)
// Parameters:
// bool                           bSetMeshAsRoot                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldier::MulticastChangeRootComponent(bool bSetMeshAsRoot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.MulticastChangeRootComponent");

	ASQSoldier_MulticastChangeRootComponent_Params params;
	params.bSetMeshAsRoot = bSetMeshAsRoot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.LeftVehicle
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class USQVehicleSeatComponent* PreviousSeat                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldier::LeftVehicle(class USQVehicleSeatComponent* PreviousSeat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.LeftVehicle");

	ASQSoldier_LeftVehicle_Params params;
	params.PreviousSeat = PreviousSeat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.LeftSeat
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class USQVehicleSeatComponent* PreviousSeat                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bSwitchedSeats                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bLeftVehicle                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldier::LeftSeat(class USQVehicleSeatComponent* PreviousSeat, bool bSwitchedSeats, bool bLeftVehicle)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.LeftSeat");

	ASQSoldier_LeftSeat_Params params;
	params.PreviousSeat = PreviousSeat;
	params.bSwitchedSeats = bSwitchedSeats;
	params.bLeftVehicle = bLeftVehicle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.IsSprinting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQSoldier::IsSprinting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.IsSprinting");

	ASQSoldier_IsSprinting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldier.IsInVehicle
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQSoldier::IsInVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.IsInVehicle");

	ASQSoldier_IsInVehicle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldier.IsInteracting
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQSoldier::IsInteracting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.IsInteracting");

	ASQSoldier_IsInteracting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldier.IsFirstPersonViewTarget
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQSoldier::IsFirstPersonViewTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.IsFirstPersonViewTarget");

	ASQSoldier_IsFirstPersonViewTarget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldier.IsAlive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQSoldier::IsAlive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.IsAlive");

	ASQSoldier_IsAlive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldier.InitiateDragging
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASQSoldier*              SoldierToDrag                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            BoneIndex                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldier::InitiateDragging(class ASQSoldier* SoldierToDrag, int BoneIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.InitiateDragging");

	ASQSoldier_InitiateDragging_Params params;
	params.SoldierToDrag = SoldierToDrag;
	params.BoneIndex = BoneIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.Heal
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          AmountHealed                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldier::Heal(float AmountHealed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.Heal");

	ASQSoldier_Heal_Params params;
	params.AmountHealed = AmountHealed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.GetTeamState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASQTeamState*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASQTeamState* ASQSoldier::GetTeamState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.GetTeamState");

	ASQSoldier_GetTeamState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldier.GetTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int ASQSoldier::GetTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.GetTeam");

	ASQSoldier_GetTeam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldier.GetSeatState
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ESQSoldierSeatState            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
ESQSoldierSeatState ASQSoldier::GetSeatState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.GetSeatState");

	ASQSoldier_GetSeatState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldier.GetPendingWeapon
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASQEquipableItem*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASQEquipableItem* ASQSoldier::GetPendingWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.GetPendingWeapon");

	ASQSoldier_GetPendingWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldier.GetMaxHealth
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int ASQSoldier::GetMaxHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.GetMaxHealth");

	ASQSoldier_GetMaxHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldier.GetInventory
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USQPawnInventoryComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USQPawnInventoryComponent* ASQSoldier::GetInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.GetInventory");

	ASQSoldier_GetInventory_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldier.GetFirstPersonVisibility
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQSoldier::GetFirstPersonVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.GetFirstPersonVisibility");

	ASQSoldier_GetFirstPersonVisibility_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldier.GetCurrentWeapon
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASQEquipableItem*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASQEquipableItem* ASQSoldier::GetCurrentWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.GetCurrentWeapon");

	ASQSoldier_GetCurrentWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldier.GetCurrentVehicle
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASQVehicle*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASQVehicle* ASQSoldier::GetCurrentVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.GetCurrentVehicle");

	ASQSoldier_GetCurrentVehicle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldier.GetCurrentSeatWeaponRotation
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
struct FRotator ASQSoldier::GetCurrentSeatWeaponRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.GetCurrentSeatWeaponRotation");

	ASQSoldier_GetCurrentSeatWeaponRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldier.GetCurrentSeatPawn
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASQVehicleSeat*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASQVehicleSeat* ASQSoldier::GetCurrentSeatPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.GetCurrentSeatPawn");

	ASQSoldier_GetCurrentSeatPawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldier.GetCurrentSeat
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USQVehicleSeatComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USQVehicleSeatComponent* ASQSoldier::GetCurrentSeat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.GetCurrentSeat");

	ASQSoldier_GetCurrentSeat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldier.EnteredVehicle
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class USQVehicleSeatComponent* NewSeat                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldier::EnteredVehicle(class USQVehicleSeatComponent* NewSeat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.EnteredVehicle");

	ASQSoldier_EnteredVehicle_Params params;
	params.NewSeat = NewSeat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.EnteredSeat
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class USQVehicleSeatComponent* PreviousSeat                   (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USQVehicleSeatComponent* NewSeat                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bSwitchedSeats                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bEnteredVehicle                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldier::EnteredSeat(class USQVehicleSeatComponent* PreviousSeat, class USQVehicleSeatComponent* NewSeat, bool bSwitchedSeats, bool bEnteredVehicle)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.EnteredSeat");

	ASQSoldier_EnteredSeat_Params params;
	params.PreviousSeat = PreviousSeat;
	params.NewSeat = NewSeat;
	params.bSwitchedSeats = bSwitchedSeats;
	params.bEnteredVehicle = bEnteredVehicle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.EndInteract
// (Native, Public, BlueprintCallable)
void ASQSoldier::EndInteract()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.EndInteract");

	ASQSoldier_EndInteract_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.EndFireWeapon
// (Native, Public, BlueprintCallable)
void ASQSoldier::EndFireWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.EndFireWeapon");

	ASQSoldier_EndFireWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.EndAltFireWeapon
// (Native, Public, BlueprintCallable)
void ASQSoldier::EndAltFireWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.EndAltFireWeapon");

	ASQSoldier_EndAltFireWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.EndAimDownSights
// (Native, Public)
void ASQSoldier::EndAimDownSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.EndAimDownSights");

	ASQSoldier_EndAimDownSights_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.DisableSpawnProtection
// (Native, Public, BlueprintCallable)
void ASQSoldier::DisableSpawnProtection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.DisableSpawnProtection");

	ASQSoldier_DisableSpawnProtection_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.Die
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// float                          KillingDamage                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class AController*             Killer                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQSoldier::Die(float KillingDamage, const struct FDamageEvent& DamageEvent, class AController* Killer, class AActor* DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.Die");

	ASQSoldier_Die_Params params;
	params.KillingDamage = KillingDamage;
	params.DamageEvent = DamageEvent;
	params.Killer = Killer;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldier.DebugToggleGodMode
// (Final, Exec, Native, Public, BlueprintCallable)
void ASQSoldier::DebugToggleGodMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.DebugToggleGodMode");

	ASQSoldier_DebugToggleGodMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.DebugStopBleeding
// (Final, Exec, Native, Public, BlueprintCallable)
void ASQSoldier::DebugStopBleeding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.DebugStopBleeding");

	ASQSoldier_DebugStopBleeding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.DebugRevive
// (Final, Exec, Native, Public, BlueprintCallable)
void ASQSoldier::DebugRevive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.DebugRevive");

	ASQSoldier_DebugRevive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.DebugRearm
// (Final, Exec, Native, Public, BlueprintCallable)
void ASQSoldier::DebugRearm()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.DebugRearm");

	ASQSoldier_DebugRearm_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.DebugFullHealth
// (Final, Exec, Native, Public)
void ASQSoldier::DebugFullHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.DebugFullHealth");

	ASQSoldier_DebugFullHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.ClearSeatState
// (Native, Public, BlueprintCallable)
void ASQSoldier::ClearSeatState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.ClearSeatState");

	ASQSoldier_ClearSeatState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.ChangeSoundMix
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USoundMix*               NewSoundMix                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldier::ChangeSoundMix(class USoundMix* NewSoundMix)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.ChangeSoundMix");

	ASQSoldier_ChangeSoundMix_Params params;
	params.NewSoundMix = NewSoundMix;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.CanStartWithMaxAmmo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQSoldier::CanStartWithMaxAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.CanStartWithMaxAmmo");

	ASQSoldier_CanStartWithMaxAmmo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldier.BPWoundedDamageTaken
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          damage                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldier::BPWoundedDamageTaken(float damage)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.BPWoundedDamageTaken");

	ASQSoldier_BPWoundedDamageTaken_Params params;
	params.damage = damage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.BPWound
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// float                          KillingDamage                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class AController*             Killer                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldier::BPWound(float KillingDamage, const struct FDamageEvent& DamageEvent, class AController* Killer, class AActor* DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.BPWound");

	ASQSoldier_BPWound_Params params;
	params.KillingDamage = KillingDamage;
	params.DamageEvent = DamageEvent;
	params.Killer = Killer;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.BPOnSuppression
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 ClosestPoint                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ClosenessRatio                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bAppliedSuppression            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldier::BPOnSuppression(const struct FVector& ClosestPoint, float ClosenessRatio, bool bAppliedSuppression)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.BPOnSuppression");

	ASQSoldier_BPOnSuppression_Params params;
	params.ClosestPoint = ClosestPoint;
	params.ClosenessRatio = ClosenessRatio;
	params.bAppliedSuppression = bAppliedSuppression;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.BPOnStartProne
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          HalfHeightAdjust               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ScaledHalfHeightAdjust         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldier::BPOnStartProne(float HalfHeightAdjust, float ScaledHalfHeightAdjust)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.BPOnStartProne");

	ASQSoldier_BPOnStartProne_Params params;
	params.HalfHeightAdjust = HalfHeightAdjust;
	params.ScaledHalfHeightAdjust = ScaledHalfHeightAdjust;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.BPOnSnapZoneOverlapEnd
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldier::BPOnSnapZoneOverlapEnd(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.BPOnSnapZoneOverlapEnd");

	ASQSoldier_BPOnSnapZoneOverlapEnd_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.BPOnSnapZoneOverlapBegin
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void ASQSoldier::BPOnSnapZoneOverlapBegin(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.BPOnSnapZoneOverlapBegin");

	ASQSoldier_BPOnSnapZoneOverlapBegin_Params params;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.BPOnEndProne
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          HalfHeightAdjust               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ScaledHalfHeightAdjust         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldier::BPOnEndProne(float HalfHeightAdjust, float ScaledHalfHeightAdjust)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.BPOnEndProne");

	ASQSoldier_BPOnEndProne_Params params;
	params.HalfHeightAdjust = HalfHeightAdjust;
	params.ScaledHalfHeightAdjust = ScaledHalfHeightAdjust;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.BPGetYawViewLimits
// (Native, Event, Public, HasOutParms, HasDefaults, BlueprintEvent, Const)
// Parameters:
// struct FVector2D               YawViewLimits                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector2D ASQSoldier::BPGetYawViewLimits(const struct FVector2D& YawViewLimits)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.BPGetYawViewLimits");

	ASQSoldier_BPGetYawViewLimits_Params params;
	params.YawViewLimits = YawViewLimits;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldier.BPDie
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// float                          KillingDamage                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class AController*             Killer                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldier::BPDie(float KillingDamage, const struct FDamageEvent& DamageEvent, class AController* Killer, class AActor* DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.BPDie");

	ASQSoldier_BPDie_Params params;
	params.KillingDamage = KillingDamage;
	params.DamageEvent = DamageEvent;
	params.Killer = Killer;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.BPBleedingDamageTaken
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          damage                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldier::BPBleedingDamageTaken(float damage)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.BPBleedingDamageTaken");

	ASQSoldier_BPBleedingDamageTaken_Params params;
	params.damage = damage;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.BlueprintUpdateSkin
// (Native, Event, Public, BlueprintEvent)
void ASQSoldier::BlueprintUpdateSkin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.BlueprintUpdateSkin");

	ASQSoldier_BlueprintUpdateSkin_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.BlueprintUpdateFirstPersonVisibility
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bIsFirstPersonVisible          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldier::BlueprintUpdateFirstPersonVisibility(bool bIsFirstPersonVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.BlueprintUpdateFirstPersonVisibility");

	ASQSoldier_BlueprintUpdateFirstPersonVisibility_Params params;
	params.bIsFirstPersonVisible = bIsFirstPersonVisible;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.BlueprintCalcCamera
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 InLocation                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                InRotation                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                          InFOV                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 OutLocation                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                OutRotation                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                          OutFOV                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldier::BlueprintCalcCamera(float DeltaTime, const struct FVector& InLocation, const struct FRotator& InRotation, float InFOV, struct FVector* OutLocation, struct FRotator* OutRotation, float* OutFOV)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.BlueprintCalcCamera");

	ASQSoldier_BlueprintCalcCamera_Params params;
	params.DeltaTime = DeltaTime;
	params.InLocation = InLocation;
	params.InRotation = InRotation;
	params.InFOV = InFOV;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutLocation != nullptr)
		*OutLocation = params.OutLocation;
	if (OutRotation != nullptr)
		*OutRotation = params.OutRotation;
	if (OutFOV != nullptr)
		*OutFOV = params.OutFOV;

}


// Function Squad.SQSoldier.BeginInteract
// (Native, Public, BlueprintCallable)
void ASQSoldier::BeginInteract()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.BeginInteract");

	ASQSoldier_BeginInteract_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.BeginFireWeapon
// (Native, Public, BlueprintCallable)
void ASQSoldier::BeginFireWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.BeginFireWeapon");

	ASQSoldier_BeginFireWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.BeginAltFireWeapon
// (Native, Public, BlueprintCallable)
void ASQSoldier::BeginAltFireWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.BeginAltFireWeapon");

	ASQSoldier_BeginAltFireWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldier.AttemptToRearmWeapons
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TScriptInterface<class USQRearmSource> RearmSource                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
// TArray<struct FSQRearmWeaponRequest> RearmRequest                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQSoldier::AttemptToRearmWeapons(const TScriptInterface<class USQRearmSource>& RearmSource, TArray<struct FSQRearmWeaponRequest> RearmRequest)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.AttemptToRearmWeapons");

	ASQSoldier_AttemptToRearmWeapons_Params params;
	params.RearmSource = RearmSource;
	params.RearmRequest = RearmRequest;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldier.AttemptSuppression
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 SuppressionStart               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 SuppressionEnd                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  ProjectileInstigator           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                  SuppressionInfoClass           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 OutClosestPoint                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bOutApplySuppression           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQSoldier::AttemptSuppression(const struct FVector& SuppressionStart, const struct FVector& SuppressionEnd, class AActor* ProjectileInstigator, class UClass* SuppressionInfoClass, struct FVector* OutClosestPoint, bool* bOutApplySuppression)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldier.AttemptSuppression");

	ASQSoldier_AttemptSuppression_Params params;
	params.SuppressionStart = SuppressionStart;
	params.SuppressionEnd = SuppressionEnd;
	params.ProjectileInstigator = ProjectileInstigator;
	params.SuppressionInfoClass = SuppressionInfoClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutClosestPoint != nullptr)
		*OutClosestPoint = params.OutClosestPoint;
	if (bOutApplySuppression != nullptr)
		*bOutApplySuppression = params.bOutApplySuppression;


	return params.ReturnValue;
}


// Function Squad.SQSoldierNew.WeaponMagazineHasAmmo
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQSoldierNew::WeaponMagazineHasAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierNew.WeaponMagazineHasAmmo");

	ASQSoldierNew_WeaponMagazineHasAmmo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldierNew.UpdateToProneCapsuleMotion
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          DeltaSeconds                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldierNew::UpdateToProneCapsuleMotion(float DeltaSeconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierNew.UpdateToProneCapsuleMotion");

	ASQSoldierNew_UpdateToProneCapsuleMotion_Params params;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldierNew.UpdateStaticItemInfo
// (Native, Public, BlueprintCallable)
// Parameters:
// class USQItemStaticInfo*       InfoObject                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldierNew::UpdateStaticItemInfo(class USQItemStaticInfo* InfoObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierNew.UpdateStaticItemInfo");

	ASQSoldierNew_UpdateStaticItemInfo_Params params;
	params.InfoObject = InfoObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldierNew.UpdateCachedAnimInstance3p
// (Final, Native, Public, BlueprintCallable)
void ASQSoldierNew::UpdateCachedAnimInstance3p()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierNew.UpdateCachedAnimInstance3p");

	ASQSoldierNew_UpdateCachedAnimInstance3p_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldierNew.UpdateBreathingSound
// (Native, Public, BlueprintCallable)
void ASQSoldierNew::UpdateBreathingSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierNew.UpdateBreathingSound");

	ASQSoldierNew_UpdateBreathingSound_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldierNew.Update1pRelativeLocation
// (Native, Public, BlueprintCallable)
void ASQSoldierNew::Update1pRelativeLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierNew.Update1pRelativeLocation");

	ASQSoldierNew_Update1pRelativeLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldierNew.Update1pCamStanceHeight
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          DeltaSeconds                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldierNew::Update1pCamStanceHeight(float DeltaSeconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierNew.Update1pCamStanceHeight");

	ASQSoldierNew_Update1pCamStanceHeight_Params params;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldierNew.ToggleViewReleased
// (Final, Native, Public, BlueprintCallable)
void ASQSoldierNew::ToggleViewReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierNew.ToggleViewReleased");

	ASQSoldierNew_ToggleViewReleased_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldierNew.ToggleViewPressed
// (Final, Native, Public, BlueprintCallable)
void ASQSoldierNew::ToggleViewPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierNew.ToggleViewPressed");

	ASQSoldierNew_ToggleViewPressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldierNew.ToggleThirdPersonView
// (Final, Native, Public, BlueprintCallable)
void ASQSoldierNew::ToggleThirdPersonView()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierNew.ToggleThirdPersonView");

	ASQSoldierNew_ToggleThirdPersonView_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldierNew.ToggleBipod
// (Native, Public, BlueprintCallable)
void ASQSoldierNew::ToggleBipod()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierNew.ToggleBipod");

	ASQSoldierNew_ToggleBipod_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldierNew.TickUpdateThirdPersonView
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldierNew::TickUpdateThirdPersonView(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierNew.TickUpdateThirdPersonView");

	ASQSoldierNew_TickUpdateThirdPersonView_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldierNew.ServerRetractBipod
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
void ASQSoldierNew::ServerRetractBipod()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierNew.ServerRetractBipod");

	ASQSoldierNew_ServerRetractBipod_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldierNew.ServerLowerWeapon
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                           bValue                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldierNew::ServerLowerWeapon(bool bValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierNew.ServerLowerWeapon");

	ASQSoldierNew_ServerLowerWeapon_Params params;
	params.bValue = bValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldierNew.ServerDeployBipod
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                 RemoteBipodDeploymentLocationZeroBased (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 RemoteActorLocationZeroBased   (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldierNew::ServerDeployBipod(const struct FVector& RemoteBipodDeploymentLocationZeroBased, const struct FVector& RemoteActorLocationZeroBased)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierNew.ServerDeployBipod");

	ASQSoldierNew_ServerDeployBipod_Params params;
	params.RemoteBipodDeploymentLocationZeroBased = RemoteBipodDeploymentLocationZeroBased;
	params.RemoteActorLocationZeroBased = RemoteActorLocationZeroBased;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldierNew.ServerClimb
// (Final, Net, NetReliable, Native, Event, Private, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FTransform              ClientTransformZeroBased       (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FSQClimbInfo            ClientInfo                     (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
void ASQSoldierNew::ServerClimb(const struct FTransform& ClientTransformZeroBased, const struct FSQClimbInfo& ClientInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierNew.ServerClimb");

	ASQSoldierNew_ServerClimb_Params params;
	params.ClientTransformZeroBased = ClientTransformZeroBased;
	params.ClientInfo = ClientInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldierNew.PlayOrStopMontage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAnimInstance*           AnimInstance                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*            Montage                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bStopAnimation                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          blendOutTime                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldierNew::PlayOrStopMontage(class UAnimInstance* AnimInstance, class UAnimMontage* Montage, bool bStopAnimation, float blendOutTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierNew.PlayOrStopMontage");

	ASQSoldierNew_PlayOrStopMontage_Params params;
	params.AnimInstance = AnimInstance;
	params.Montage = Montage;
	params.bStopAnimation = bStopAnimation;
	params.blendOutTime = blendOutTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldierNew.PlayOrStopAnimations
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAnimMontage*            FirstPersonAnim                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*            ThirdPersonAnim                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bStopAnimation                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          blendOutTime                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldierNew::PlayOrStopAnimations(class UAnimMontage* FirstPersonAnim, class UAnimMontage* ThirdPersonAnim, bool bStopAnimation, float blendOutTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierNew.PlayOrStopAnimations");

	ASQSoldierNew_PlayOrStopAnimations_Params params;
	params.FirstPersonAnim = FirstPersonAnim;
	params.ThirdPersonAnim = ThirdPersonAnim;
	params.bStopAnimation = bStopAnimation;
	params.blendOutTime = blendOutTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldierNew.OutOfBoundsKillCallback
// (Final, Native, Public)
void ASQSoldierNew::OutOfBoundsKillCallback()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierNew.OutOfBoundsKillCallback");

	ASQSoldierNew_OutOfBoundsKillCallback_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldierNew.OnRep_WeaponLoweredChanged
// (Final, Native, Private)
// Parameters:
// bool                           bVal                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldierNew::OnRep_WeaponLoweredChanged(bool bVal)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierNew.OnRep_WeaponLoweredChanged");

	ASQSoldierNew_OnRep_WeaponLoweredChanged_Params params;
	params.bVal = bVal;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldierNew.OnRep_ClimbInfo
// (Final, Native, Private)
// Parameters:
// struct FSQClimbInfo            PrevClimbInfo                  (Parm, NativeAccessSpecifierPublic)
void ASQSoldierNew::OnRep_ClimbInfo(const struct FSQClimbInfo& PrevClimbInfo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierNew.OnRep_ClimbInfo");

	ASQSoldierNew_OnRep_ClimbInfo_Params params;
	params.PrevClimbInfo = PrevClimbInfo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldierNew.OnRep_Bipod
// (Final, Native, Protected)
// Parameters:
// bool                           bBipodWasDeployed              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldierNew::OnRep_Bipod(bool bBipodWasDeployed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierNew.OnRep_Bipod");

	ASQSoldierNew_OnRep_Bipod_Params params;
	params.bBipodWasDeployed = bBipodWasDeployed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Squad.SQSoldierNew.OnPossessionChanged__DelegateSignature
// (MulticastDelegate, Public, Delegate)
void ASQSoldierNew::OnPossessionChanged__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Squad.SQSoldierNew.OnPossessionChanged__DelegateSignature");

	ASQSoldierNew_OnPossessionChanged__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldierNew.OnExitBoundary
// (Final, Native, Public)
// Parameters:
// class USQBoundaryListener*     Listener                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQBoundary*             Boundary                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldierNew::OnExitBoundary(class USQBoundaryListener* Listener, class ASQBoundary* Boundary)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierNew.OnExitBoundary");

	ASQSoldierNew_OnExitBoundary_Params params;
	params.Listener = Listener;
	params.Boundary = Boundary;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Squad.SQSoldierNew.OnEquip__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class USQItemStaticInfo*       StaticInfo                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldierNew::OnEquip__DelegateSignature(class USQItemStaticInfo* StaticInfo)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Squad.SQSoldierNew.OnEquip__DelegateSignature");

	ASQSoldierNew_OnEquip__DelegateSignature_Params params;
	params.StaticInfo = StaticInfo;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldierNew.OnEnterBoundary
// (Final, Native, Public)
// Parameters:
// class USQBoundaryListener*     Listener                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQBoundary*             Boundary                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldierNew::OnEnterBoundary(class USQBoundaryListener* Listener, class ASQBoundary* Boundary)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierNew.OnEnterBoundary");

	ASQSoldierNew_OnEnterBoundary_Params params;
	params.Listener = Listener;
	params.Boundary = Boundary;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldierNew.On_RepIsPlayingVoipHandAnim
// (Final, Native, Private)
void ASQSoldierNew::On_RepIsPlayingVoipHandAnim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierNew.On_RepIsPlayingVoipHandAnim");

	ASQSoldierNew_On_RepIsPlayingVoipHandAnim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldierNew.MulticastPlayEmoteAnim
// (Final, Net, Native, Event, NetMulticast, Private)
// Parameters:
// ESQEmotes                      Emote                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldierNew::MulticastPlayEmoteAnim(ESQEmotes Emote)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierNew.MulticastPlayEmoteAnim");

	ASQSoldierNew_MulticastPlayEmoteAnim_Params params;
	params.Emote = Emote;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldierNew.MulticastPlayCustomEmote
// (Final, Net, Native, Event, NetMulticast, Private)
// Parameters:
// struct FName                   CustomName                     (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldierNew::MulticastPlayCustomEmote(const struct FName& CustomName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierNew.MulticastPlayCustomEmote");

	ASQSoldierNew_MulticastPlayCustomEmote_Params params;
	params.CustomName = CustomName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldierNew.IsWeaponLowered
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQSoldierNew::IsWeaponLowered()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierNew.IsWeaponLowered");

	ASQSoldierNew_IsWeaponLowered_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldierNew.IsPullingTriggerOnWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQSoldierNew::IsPullingTriggerOnWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierNew.IsPullingTriggerOnWeapon");

	ASQSoldierNew_IsPullingTriggerOnWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldierNew.IsOutOfMapBounds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQSoldierNew::IsOutOfMapBounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierNew.IsOutOfMapBounds");

	ASQSoldierNew_IsOutOfMapBounds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldierNew.IsMontagePlaying
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UAnimMontage*            FirstPersonAnim                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAnimMontage*            ThirdPersonAnim                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQSoldierNew::IsMontagePlaying(class UAnimMontage* FirstPersonAnim, class UAnimMontage* ThirdPersonAnim)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierNew.IsMontagePlaying");

	ASQSoldierNew_IsMontagePlaying_Params params;
	params.FirstPersonAnim = FirstPersonAnim;
	params.ThirdPersonAnim = ThirdPersonAnim;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldierNew.IsClimbing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           bRequiredOnly                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQSoldierNew::IsClimbing(bool bRequiredOnly)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierNew.IsClimbing");

	ASQSoldierNew_IsClimbing_Params params;
	params.bRequiredOnly = bRequiredOnly;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldierNew.InputClimb
// (Final, Native, Private)
void ASQSoldierNew::InputClimb()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierNew.InputClimb");

	ASQSoldierNew_InputClimb_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldierNew.IncreaseCameraDistance
// (Final, Native, Public, BlueprintCallable)
void ASQSoldierNew::IncreaseCameraDistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierNew.IncreaseCameraDistance");

	ASQSoldierNew_IncreaseCameraDistance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldierNew.DecreaseCameraDistance
// (Final, Native, Public, BlueprintCallable)
void ASQSoldierNew::DecreaseCameraDistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierNew.DecreaseCameraDistance");

	ASQSoldierNew_DecreaseCameraDistance_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldierNew.ClientRejectClimb
// (Final, Net, NetReliable, Native, Event, Private, NetClient)
void ASQSoldierNew::ClientRejectClimb()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierNew.ClientRejectClimb");

	ASQSoldierNew_ClientRejectClimb_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldierNew.ClientRejectBipod
// (Net, NetReliable, Native, Event, Protected, NetClient)
void ASQSoldierNew::ClientRejectBipod()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierNew.ClientRejectBipod");

	ASQSoldierNew_ClientRejectBipod_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldierNew.CheckItemCollision
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQSoldierNew::CheckItemCollision()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierNew.CheckItemCollision");

	ASQSoldierNew_CheckItemCollision_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldierNew.CanZoom
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQSoldierNew::CanZoom()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierNew.CanZoom");

	ASQSoldierNew_CanZoom_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldierNew.CalcCamera_BP
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 InLocation                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                InRotation                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                          InFOV                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 OutLocation                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                OutRotation                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                          OutFOV                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQSoldierNew::CalcCamera_BP(float DeltaTime, const struct FVector& InLocation, const struct FRotator& InRotation, float InFOV, struct FVector* OutLocation, struct FRotator* OutRotation, float* OutFOV)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierNew.CalcCamera_BP");

	ASQSoldierNew_CalcCamera_BP_Params params;
	params.DeltaTime = DeltaTime;
	params.InLocation = InLocation;
	params.InRotation = InRotation;
	params.InFOV = InFOV;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutLocation != nullptr)
		*OutLocation = params.OutLocation;
	if (OutRotation != nullptr)
		*OutRotation = params.OutRotation;
	if (OutFOV != nullptr)
		*OutFOV = params.OutFOV;

}


// Function Squad.SQSoldierMovement.UpdateStamina
// (Native, Public)
void USQSoldierMovement::UpdateStamina()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierMovement.UpdateStamina");

	USQSoldierMovement_UpdateStamina_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldierMovement.SetIsHurt
// (Final, Native, Public)
// Parameters:
// bool                           bHurt                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQSoldierMovement::SetIsHurt(bool bHurt)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierMovement.SetIsHurt");

	USQSoldierMovement_SetIsHurt_Params params;
	params.bHurt = bHurt;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSoldierMovement.IsWalkPressed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQSoldierMovement::IsWalkPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierMovement.IsWalkPressed");

	USQSoldierMovement_IsWalkPressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldierMovement.IsStaminaOverThreshold
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQSoldierMovement::IsStaminaOverThreshold()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierMovement.IsStaminaOverThreshold");

	USQSoldierMovement_IsStaminaOverThreshold_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldierMovement.IsSprintPressed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQSoldierMovement::IsSprintPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierMovement.IsSprintPressed");

	USQSoldierMovement_IsSprintPressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldierMovement.IsSprinting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQSoldierMovement::IsSprinting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierMovement.IsSprinting");

	USQSoldierMovement_IsSprinting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldierMovement.IsProne
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQSoldierMovement::IsProne()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierMovement.IsProne");

	USQSoldierMovement_IsProne_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldierMovement.IsLeaningRight
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQSoldierMovement::IsLeaningRight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierMovement.IsLeaningRight");

	USQSoldierMovement_IsLeaningRight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldierMovement.IsLeaningLeft
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQSoldierMovement::IsLeaningLeft()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierMovement.IsLeaningLeft");

	USQSoldierMovement_IsLeaningLeft_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldierMovement.IsDragging
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQSoldierMovement::IsDragging()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierMovement.IsDragging");

	USQSoldierMovement_IsDragging_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldierMovement.IsAimingDownSights
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQSoldierMovement::IsAimingDownSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierMovement.IsAimingDownSights");

	USQSoldierMovement_IsAimingDownSights_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldierMovement.GetProneWeight
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQSoldierMovement::GetProneWeight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierMovement.GetProneWeight");

	USQSoldierMovement_GetProneWeight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldierMovement.GetJumpVelocity
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQSoldierMovement::GetJumpVelocity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierMovement.GetJumpVelocity");

	USQSoldierMovement_GetJumpVelocity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldierMovement.GetCrouchWeight
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQSoldierMovement::GetCrouchWeight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierMovement.GetCrouchWeight");

	USQSoldierMovement_GetCrouchWeight_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldierMovement.CanSprint
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQSoldierMovement::CanSprint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierMovement.CanSprint");

	USQSoldierMovement_CanSprint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldierMovement.CanRun
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQSoldierMovement::CanRun()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierMovement.CanRun");

	USQSoldierMovement_CanRun_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldierMovement.CanJump
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQSoldierMovement::CanJump()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierMovement.CanJump");

	USQSoldierMovement_CanJump_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldierMovement.CanCrouchInCurrentState
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQSoldierMovement::CanCrouchInCurrentState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierMovement.CanCrouchInCurrentState");

	USQSoldierMovement_CanCrouchInCurrentState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldierMovement.CalculateStamina
// (Native, Public)
// Parameters:
// float                          Penalty                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          StanceRegenMultiplier          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQSoldierMovement::CalculateStamina(float Penalty, float StanceRegenMultiplier)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierMovement.CalculateStamina");

	USQSoldierMovement_CalculateStamina_Params params;
	params.Penalty = Penalty;
	params.StanceRegenMultiplier = StanceRegenMultiplier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQSoldierMovement.ApplyStaminaBurstLoss
// (Native, Public)
// Parameters:
// float                          Penalty                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQSoldierMovement::ApplyStaminaBurstLoss(float Penalty)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSoldierMovement.ApplyStaminaBurstLoss");

	USQSoldierMovement_ApplyStaminaBurstLoss_Params params;
	params.Penalty = Penalty;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSimpleMovementComponent.AddRotationInput
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                InRotationInput                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
void USQSimpleMovementComponent::AddRotationInput(const struct FRotator& InRotationInput)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSimpleMovementComponent.AddRotationInput");

	USQSimpleMovementComponent_AddRotationInput_Params params;
	params.InRotationInput = InRotationInput;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSimpleMovementComponent.AddMoveInput
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 InMoveInput                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQSimpleMovementComponent::AddMoveInput(const struct FVector& InMoveInput)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSimpleMovementComponent.AddMoveInput");

	USQSimpleMovementComponent_AddMoveInput_Params params;
	params.InMoveInput = InMoveInput;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQShockwave.NearbyExplosionEvent
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// class AActor*                  ProjectileActor                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          DistanceFromEffect             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQShockwave::NearbyExplosionEvent(class AActor* ProjectileActor, const struct FVector& Location, float DistanceFromEffect)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQShockwave.NearbyExplosionEvent");

	USQShockwave_NearbyExplosionEvent_Params params;
	params.ProjectileActor = ProjectileActor;
	params.Location = Location;
	params.DistanceFromEffect = DistanceFromEffect;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQShockwave.GetShockwaveSetting
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSQShockwaveQualitySetting ReturnValue                    (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
struct FSQShockwaveQualitySetting USQShockwave::GetShockwaveSetting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQShockwave.GetShockwaveSetting");

	USQShockwave_GetShockwaveSetting_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQShockwave.Explode
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UWorld*                  World                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  ProjectileActor                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQShockwave::Explode(class UWorld* World, class AActor* ProjectileActor, const struct FVector& Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQShockwave.Explode");

	USQShockwave_Explode_Params params;
	params.World = World;
	params.ProjectileActor = ProjectileActor;
	params.Location = Location;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQServerListItemWidget.SetSession
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FBlueprintSessionResult Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void USQServerListItemWidget::SetSession(const struct FBlueprintSessionResult& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQServerListItemWidget.SetSession");

	USQServerListItemWidget_SetSession_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQServerListItemWidget.ServerConnectionCheckUpdate
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FSQConnectionCheckResponse UpdateResponse                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
void USQServerListItemWidget::ServerConnectionCheckUpdate(const struct FSQConnectionCheckResponse& UpdateResponse)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQServerListItemWidget.ServerConnectionCheckUpdate");

	USQServerListItemWidget_ServerConnectionCheckUpdate_Params params;
	params.UpdateResponse = UpdateResponse;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQServerListItemWidget.GetServerURL
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString USQServerListItemWidget::GetServerURL()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQServerListItemWidget.GetServerURL");

	USQServerListItemWidget_GetServerURL_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQServerListItemWidget.ClientJoinAccepted
// (Event, Public, BlueprintEvent)
void USQServerListItemWidget::ClientJoinAccepted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQServerListItemWidget.ClientJoinAccepted");

	USQServerListItemWidget_ClientJoinAccepted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQServerListItemWidget.CheckMissingMods
// (Native, Public, BlueprintCallable)
// Parameters:
// TArray<struct FSQModLoadProgress> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
TArray<struct FSQModLoadProgress> USQServerListItemWidget::CheckMissingMods()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQServerListItemWidget.CheckMissingMods");

	USQServerListItemWidget_CheckMissingMods_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQServerBrowserWidget.UpdateSortedState
// (Native, Public, BlueprintCallable)
// Parameters:
// ESQSortLevels                  SortLevel                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQServerBrowserWidget::UpdateSortedState(ESQSortLevels SortLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQServerBrowserWidget.UpdateSortedState");

	USQServerBrowserWidget_UpdateSortedState_Params params;
	params.SortLevel = SortLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQServerBrowserWidget.UpdateIndexes
// (Native, Public, BlueprintCallable)
void USQServerBrowserWidget::UpdateIndexes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQServerBrowserWidget.UpdateIndexes");

	USQServerBrowserWidget_UpdateIndexes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQServerBrowserWidget.StartFindSessions
// (Final, Native, Private, BlueprintCallable)
void USQServerBrowserWidget::StartFindSessions()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQServerBrowserWidget.StartFindSessions");

	USQServerBrowserWidget_StartFindSessions_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQServerBrowserWidget.SortServerName
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           bIsAscending                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQServerBrowserWidget::SortServerName(bool bIsAscending)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQServerBrowserWidget.SortServerName");

	USQServerBrowserWidget_SortServerName_Params params;
	params.bIsAscending = bIsAscending;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQServerBrowserWidget.SortPing
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           bIsAscending                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQServerBrowserWidget::SortPing(bool bIsAscending)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQServerBrowserWidget.SortPing");

	USQServerBrowserWidget_SortPing_Params params;
	params.bIsAscending = bIsAscending;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQServerBrowserWidget.SortNumPlayers
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           bIsAscending                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQServerBrowserWidget::SortNumPlayers(bool bIsAscending)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQServerBrowserWidget.SortNumPlayers");

	USQServerBrowserWidget_SortNumPlayers_Params params;
	params.bIsAscending = bIsAscending;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQServerBrowserWidget.SortMapName
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           bIsAscending                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQServerBrowserWidget::SortMapName(bool bIsAscending)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQServerBrowserWidget.SortMapName");

	USQServerBrowserWidget_SortMapName_Params params;
	params.bIsAscending = bIsAscending;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQServerBrowserWidget.SortGameMode
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           bIsAscending                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQServerBrowserWidget::SortGameMode(bool bIsAscending)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQServerBrowserWidget.SortGameMode");

	USQServerBrowserWidget_SortGameMode_Params params;
	params.bIsAscending = bIsAscending;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQServerBrowserWidget.SortByName
// (Native, Public, BlueprintCallable)
// Parameters:
// ESQSortLevels                  SortByColumn                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIsAscending                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQServerBrowserWidget::SortByName(ESQSortLevels SortByColumn, bool bIsAscending)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQServerBrowserWidget.SortByName");

	USQServerBrowserWidget_SortByName_Params params;
	params.SortByColumn = SortByColumn;
	params.bIsAscending = bIsAscending;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQServerBrowserWidget.ResetSortedState
// (Native, Public, BlueprintCallable)
void USQServerBrowserWidget::ResetSortedState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQServerBrowserWidget.ResetSortedState");

	USQServerBrowserWidget_ResetSortedState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQServerBrowserWidget.OnUpdateSession
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// TArray<struct FBlueprintSessionResult> Results                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
void USQServerBrowserWidget::OnUpdateSession(TArray<struct FBlueprintSessionResult> Results)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQServerBrowserWidget.OnUpdateSession");

	USQServerBrowserWidget_OnUpdateSession_Params params;
	params.Results = Results;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQServerBrowserWidget.OnSuccess
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// TArray<struct FBlueprintSessionResult> Results                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
void USQServerBrowserWidget::OnSuccess(TArray<struct FBlueprintSessionResult> Results)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQServerBrowserWidget.OnSuccess");

	USQServerBrowserWidget_OnSuccess_Params params;
	params.Results = Results;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQServerBrowserWidget.OnFindSessionsNewSessionUpdate
// (Final, Native, Private, HasOutParms)
// Parameters:
// struct FBlueprintSessionResult SessionResult                  (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
void USQServerBrowserWidget::OnFindSessionsNewSessionUpdate(const struct FBlueprintSessionResult& SessionResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQServerBrowserWidget.OnFindSessionsNewSessionUpdate");

	USQServerBrowserWidget_OnFindSessionsNewSessionUpdate_Params params;
	params.SessionResult = SessionResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQServerBrowserWidget.OnFindSessionsCompleted
// (Final, Native, Private, HasOutParms)
// Parameters:
// TArray<struct FBlueprintSessionResult> Results                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                           bSuccess                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQServerBrowserWidget::OnFindSessionsCompleted(TArray<struct FBlueprintSessionResult> Results, bool bSuccess)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQServerBrowserWidget.OnFindSessionsCompleted");

	USQServerBrowserWidget_OnFindSessionsCompleted_Params params;
	params.Results = Results;
	params.bSuccess = bSuccess;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQServerBrowserWidget.OnFindSessionsCancelled
// (Final, Native, Private)
void USQServerBrowserWidget::OnFindSessionsCancelled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQServerBrowserWidget.OnFindSessionsCancelled");

	USQServerBrowserWidget_OnFindSessionsCancelled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQServerBrowserWidget.OnFailure
// (Event, Public, BlueprintEvent)
void USQServerBrowserWidget::OnFailure()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQServerBrowserWidget.OnFailure");

	USQServerBrowserWidget_OnFailure_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQProgressWidget.ToggleTimer
// (Final, Native, Public, BlueprintCallable)
void USQProgressWidget::ToggleTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQProgressWidget.ToggleTimer");

	USQProgressWidget_ToggleTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQProgressWidget.StartTimer
// (Final, Native, Public, BlueprintCallable)
void USQProgressWidget::StartTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQProgressWidget.StartTimer");

	USQProgressWidget_StartTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQProgressWidget.ResumeTimer
// (Final, Native, Public, BlueprintCallable)
void USQProgressWidget::ResumeTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQProgressWidget.ResumeTimer");

	USQProgressWidget_ResumeTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQProgressWidget.PauseTimer
// (Final, Native, Public, BlueprintCallable)
void USQProgressWidget::PauseTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQProgressWidget.PauseTimer");

	USQProgressWidget_PauseTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQProgressWidget.CancelTimer
// (Final, Native, Public, BlueprintCallable)
void USQProgressWidget::CancelTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQProgressWidget.CancelTimer");

	USQProgressWidget_CancelTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQProgressWidget.BPOnTimerStarted
// (Event, Public, BlueprintEvent)
void USQProgressWidget::BPOnTimerStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQProgressWidget.BPOnTimerStarted");

	USQProgressWidget_BPOnTimerStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQProgressWidget.BPOnTimerResumed
// (Event, Public, BlueprintEvent)
void USQProgressWidget::BPOnTimerResumed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQProgressWidget.BPOnTimerResumed");

	USQProgressWidget_BPOnTimerResumed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQProgressWidget.BPOnTimerReached
// (Event, Public, BlueprintEvent)
void USQProgressWidget::BPOnTimerReached()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQProgressWidget.BPOnTimerReached");

	USQProgressWidget_BPOnTimerReached_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQProgressWidget.BPOnTimerProgress
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          RemainingPct                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQProgressWidget::BPOnTimerProgress(float RemainingPct)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQProgressWidget.BPOnTimerProgress");

	USQProgressWidget_BPOnTimerProgress_Params params;
	params.RemainingPct = RemainingPct;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQProgressWidget.BPOnTimerPaused
// (Event, Public, BlueprintEvent)
void USQProgressWidget::BPOnTimerPaused()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQProgressWidget.BPOnTimerPaused");

	USQProgressWidget_BPOnTimerPaused_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQProgressWidget.BPOnTimerCanceled
// (Event, Public, BlueprintEvent)
void USQProgressWidget::BPOnTimerCanceled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQProgressWidget.BPOnTimerCanceled");

	USQProgressWidget_BPOnTimerCanceled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSeatProgressWidget.FinishOnServer
// (Final, Native, Protected, BlueprintCallable)
void USQSeatProgressWidget::FinishOnServer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSeatProgressWidget.FinishOnServer");

	USQSeatProgressWidget_FinishOnServer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSeatProgressWidget.BPOnShowVehicleInventory
// (Event, Public, BlueprintEvent)
void USQSeatProgressWidget::BPOnShowVehicleInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSeatProgressWidget.BPOnShowVehicleInventory");

	USQSeatProgressWidget_BPOnShowVehicleInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQScoreboardTeamScore.InitWidget
// (Native, Public, BlueprintCallable)
void USQScoreboardTeamScore::InitWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQScoreboardTeamScore.InitWidget");

	USQScoreboardTeamScore_InitWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQScoreboardTeam.UpdateState
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
void USQScoreboardTeam::UpdateState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQScoreboardTeam.UpdateState");

	USQScoreboardTeam_UpdateState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQScoreboardTeam.UpdateSquads
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
void USQScoreboardTeam::UpdateSquads()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQScoreboardTeam.UpdateSquads");

	USQScoreboardTeam_UpdateSquads_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQScoreboardTeam.UpdatePlayers
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
void USQScoreboardTeam::UpdatePlayers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQScoreboardTeam.UpdatePlayers");

	USQScoreboardTeam_UpdatePlayers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQScoreboardTeam.UpdatePlayerJoinedSquad
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASQPlayerState*          Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQScoreboardTeam::UpdatePlayerJoinedSquad(class ASQPlayerState* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQScoreboardTeam.UpdatePlayerJoinedSquad");

	USQScoreboardTeam_UpdatePlayerJoinedSquad_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQScoreboardTeam.UpdateAllSpeakers
// (Native, Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FSQRemoteTalkerDisplayInfo> CurrentTalkers                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
void USQScoreboardTeam::UpdateAllSpeakers(TArray<struct FSQRemoteTalkerDisplayInfo> CurrentTalkers)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQScoreboardTeam.UpdateAllSpeakers");

	USQScoreboardTeam_UpdateAllSpeakers_Params params;
	params.CurrentTalkers = CurrentTalkers;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQScoreboardTeam.ToggleShowAllStats
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
void USQScoreboardTeam::ToggleShowAllStats()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQScoreboardTeam.ToggleShowAllStats");

	USQScoreboardTeam_ToggleShowAllStats_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQScoreboardTeam.SortSquads
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
void USQScoreboardTeam::SortSquads()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQScoreboardTeam.SortSquads");

	USQScoreboardTeam_SortSquads_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQScoreboardTeam.InitWidget
// (Final, Native, Public, BlueprintCallable)
void USQScoreboardTeam::InitWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQScoreboardTeam.InitWidget");

	USQScoreboardTeam_InitWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQScoreboardTeam.CreateNewSquad
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASQSquadState*           NewSquad                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQScoreboardTeam::CreateNewSquad(class ASQSquadState* NewSquad)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQScoreboardTeam.CreateNewSquad");

	USQScoreboardTeam_CreateNewSquad_Params params;
	params.NewSquad = NewSquad;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQScoreboardTeam.CreateNewPlayer
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASQTeamState*            Team                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQPlayerState*          Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQScoreboardTeam::CreateNewPlayer(class ASQTeamState* Team, class ASQPlayerState* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQScoreboardTeam.CreateNewPlayer");

	USQScoreboardTeam_CreateNewPlayer_Params params;
	params.Team = Team;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQScoreboardTeam.CleanDataForWidget
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
void USQScoreboardTeam::CleanDataForWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQScoreboardTeam.CleanDataForWidget");

	USQScoreboardTeam_CleanDataForWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQScoreboardSquad.UpdateState
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
void USQScoreboardSquad::UpdateState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQScoreboardSquad.UpdateState");

	USQScoreboardSquad_UpdateState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQScoreboardSquad.InitWidget
// (Native, Public, BlueprintCallable)
void USQScoreboardSquad::InitWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQScoreboardSquad.InitWidget");

	USQScoreboardSquad_InitWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQScoreboardPlayer.UpdateState
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
void USQScoreboardPlayer::UpdateState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQScoreboardPlayer.UpdateState");

	USQScoreboardPlayer_UpdateState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQScoreboardPlayer.OnMutePlayer
// (Final, Native, Protected)
// Parameters:
// int                            CurrentState                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQScoreboardPlayer::OnMutePlayer(int CurrentState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQScoreboardPlayer.OnMutePlayer");

	USQScoreboardPlayer_OnMutePlayer_Params params;
	params.CurrentState = CurrentState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQScoreboardPlayer.InitWidget
// (Native, Public, BlueprintCallable)
void USQScoreboardPlayer::InitWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQScoreboardPlayer.InitWidget");

	USQScoreboardPlayer_InitWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQScoreboardPlayer.ChangeVoipColor
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESQVoiceChannel                Channel                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQScoreboardPlayer::ChangeVoipColor(ESQVoiceChannel Channel)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQScoreboardPlayer.ChangeVoipColor");

	USQScoreboardPlayer_ChangeVoipColor_Params params;
	params.Channel = Channel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQScoreboard.UpdateState
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
void USQScoreboard::UpdateState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQScoreboard.UpdateState");

	USQScoreboard_UpdateState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQScoreboard.InitWidget
// (Native, Public, BlueprintCallable)
void USQScoreboard::InitWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQScoreboard.InitWidget");

	USQScoreboard_InitWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSaveGameWrapper.SetSavedGame
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USaveGame*               NewSaveGame                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQSaveGameWrapper::SetSavedGame(class USaveGame* NewSaveGame)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSaveGameWrapper.SetSavedGame");

	USQSaveGameWrapper_SetSavedGame_Params params;
	params.NewSaveGame = NewSaveGame;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSaveGameWrapper.Save
// (Final, Native, Public, BlueprintCallable)
void USQSaveGameWrapper::Save()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSaveGameWrapper.Save");

	USQSaveGameWrapper_Save_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQSaveGameWrapper.GetSavedGame
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USaveGame*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USaveGame* USQSaveGameWrapper::GetSavedGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQSaveGameWrapper.GetSavedGame");

	USQSaveGameWrapper_GetSavedGame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQForceNetMovementComponent.AddYawTorque
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Amount                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQForceNetMovementComponent::AddYawTorque(float Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQForceNetMovementComponent.AddYawTorque");

	USQForceNetMovementComponent_AddYawTorque_Params params;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQForceNetMovementComponent.AddTorque
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Torque                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQForceNetMovementComponent::AddTorque(const struct FVector& Torque)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQForceNetMovementComponent.AddTorque");

	USQForceNetMovementComponent_AddTorque_Params params;
	params.Torque = Torque;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQForceNetMovementComponent.AddRollTorque
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Amount                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQForceNetMovementComponent::AddRollTorque(float Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQForceNetMovementComponent.AddRollTorque");

	USQForceNetMovementComponent_AddRollTorque_Params params;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQForceNetMovementComponent.AddPitchTorque
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Amount                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQForceNetMovementComponent::AddPitchTorque(float Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQForceNetMovementComponent.AddPitchTorque");

	USQForceNetMovementComponent_AddPitchTorque_Params params;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQForceNetMovementComponent.AddForceAtLocationWithTorqueMultiplier
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Force                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Position                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 TorqueMultiplier               (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQForceNetMovementComponent::AddForceAtLocationWithTorqueMultiplier(const struct FVector& Force, const struct FVector& Position, const struct FVector& TorqueMultiplier)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQForceNetMovementComponent.AddForceAtLocationWithTorqueMultiplier");

	USQForceNetMovementComponent_AddForceAtLocationWithTorqueMultiplier_Params params;
	params.Force = Force;
	params.Position = Position;
	params.TorqueMultiplier = TorqueMultiplier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQForceNetMovementComponent.AddForceAtLocation
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Force                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Position                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          TorqueMultiplier               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQForceNetMovementComponent::AddForceAtLocation(const struct FVector& Force, const struct FVector& Position, float TorqueMultiplier)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQForceNetMovementComponent.AddForceAtLocation");

	USQForceNetMovementComponent_AddForceAtLocation_Params params;
	params.Force = Force;
	params.Position = Position;
	params.TorqueMultiplier = TorqueMultiplier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQForceNetMovementComponent.AddForce
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Force                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQForceNetMovementComponent::AddForce(const struct FVector& Force)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQForceNetMovementComponent.AddForce");

	USQForceNetMovementComponent_AddForce_Params params;
	params.Force = Force;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQRotorVehicleMovementComponent.ToggleRotorLockByType
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// ESQRotorType                   RotorType                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQRotorVehicleMovementComponent::ToggleRotorLockByType(ESQRotorType RotorType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRotorVehicleMovementComponent.ToggleRotorLockByType");

	USQRotorVehicleMovementComponent_ToggleRotorLockByType_Params params;
	params.RotorType = RotorType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQRotorVehicleMovementComponent.AddThrustByType
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// ESQRotorType                   RotorType                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Thrust                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQRotorVehicleMovementComponent::AddThrustByType(ESQRotorType RotorType, float Thrust)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRotorVehicleMovementComponent.AddThrustByType");

	USQRotorVehicleMovementComponent_AddThrustByType_Params params;
	params.RotorType = RotorType;
	params.Thrust = Thrust;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQRotorVehicleMovementComponent.AddThrust
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            RotorIdx                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Thrust                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQRotorVehicleMovementComponent::AddThrust(int RotorIdx, float Thrust)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRotorVehicleMovementComponent.AddThrust");

	USQRotorVehicleMovementComponent_AddThrust_Params params;
	params.RotorIdx = RotorIdx;
	params.Thrust = Thrust;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleEngine.IsEngineToggleActive
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQVehicleEngine::IsEngineToggleActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleEngine.IsEngineToggleActive");

	USQVehicleEngine_IsEngineToggleActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleEngine.IsEngineActive
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQVehicleEngine::IsEngineActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleEngine.IsEngineActive");

	USQVehicleEngine_IsEngineActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleEngine.GetCurrentEngineToggleRequiredDuration
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQVehicleEngine::GetCurrentEngineToggleRequiredDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleEngine.GetCurrentEngineToggleRequiredDuration");

	USQVehicleEngine_GetCurrentEngineToggleRequiredDuration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleEngine.GetCurrentEngineTogglePercentage
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQVehicleEngine::GetCurrentEngineTogglePercentage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleEngine.GetCurrentEngineTogglePercentage");

	USQVehicleEngine_GetCurrentEngineTogglePercentage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleEngineComponent.StopEngineImmediately
// (Final, Native, Public, BlueprintCallable)
void USQVehicleEngineComponent::StopEngineImmediately()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleEngineComponent.StopEngineImmediately");

	USQVehicleEngineComponent_StopEngineImmediately_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleEngineComponent.ServerSetEngineToggleActiveInput
// (Net, NetReliable, Native, Event, Protected, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// bool                           bInIsEngineToggleActive        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQVehicleEngineComponent::ServerSetEngineToggleActiveInput(bool bInIsEngineToggleActive)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleEngineComponent.ServerSetEngineToggleActiveInput");

	USQVehicleEngineComponent_ServerSetEngineToggleActiveInput_Params params;
	params.bInIsEngineToggleActive = bInIsEngineToggleActive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleEngineComponent.ServerSetEngineActiveInput
// (Net, NetReliable, Native, Event, Protected, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// bool                           bNewEngineActive               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQVehicleEngineComponent::ServerSetEngineActiveInput(bool bNewEngineActive)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleEngineComponent.ServerSetEngineActiveInput");

	USQVehicleEngineComponent_ServerSetEngineActiveInput_Params params;
	params.bNewEngineActive = bNewEngineActive;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleEngineComponent.OnRep_EngineToggleActive
// (Native, Protected)
void USQVehicleEngineComponent::OnRep_EngineToggleActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleEngineComponent.OnRep_EngineToggleActive");

	USQVehicleEngineComponent_OnRep_EngineToggleActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleEngineComponent.OnRep_EngineActive
// (Native, Protected)
void USQVehicleEngineComponent::OnRep_EngineActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleEngineComponent.OnRep_EngineActive");

	USQVehicleEngineComponent_OnRep_EngineActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleEngineComponent.OnPlayerExitedVehicleHandler
// (Final, Native, Protected)
// Parameters:
// class ASQVehicle*              Vehicle                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*       Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Seat                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQVehicleEngineComponent::OnPlayerExitedVehicleHandler(class ASQVehicle* Vehicle, class APlayerController* Player, int Seat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleEngineComponent.OnPlayerExitedVehicleHandler");

	USQVehicleEngineComponent_OnPlayerExitedVehicleHandler_Params params;
	params.Vehicle = Vehicle;
	params.Player = Player;
	params.Seat = Seat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleEngineComponent.OnPlayerEnteredVehicleHandler
// (Final, Native, Protected)
// Parameters:
// class ASQVehicle*              Vehicle                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*       Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Seat                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQVehicleEngineComponent::OnPlayerEnteredVehicleHandler(class ASQVehicle* Vehicle, class APlayerController* Player, int Seat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleEngineComponent.OnPlayerEnteredVehicleHandler");

	USQVehicleEngineComponent_OnPlayerEnteredVehicleHandler_Params params;
	params.Vehicle = Vehicle;
	params.Player = Player;
	params.Seat = Seat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQRotorBladesComponent.TakeFatalDamage
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQRotorBladesComponent::TakeFatalDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRotorBladesComponent.TakeFatalDamage");

	USQRotorBladesComponent_TakeFatalDamage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQRotorBladesComponent.IsHealthy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQRotorBladesComponent::IsHealthy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRotorBladesComponent.IsHealthy");

	USQRotorBladesComponent_IsHealthy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQRotorBladesComponent.DamageRotor
// (Final, Native, Public, BlueprintCallable)
void USQRotorBladesComponent::DamageRotor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRotorBladesComponent.DamageRotor");

	USQRotorBladesComponent_DamageRotor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQRotatingMovementComponent.OnRep_RotationReplicatedMovement
// (Native, Protected)
void USQRotatingMovementComponent::OnRep_RotationReplicatedMovement()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRotatingMovementComponent.OnRep_RotationReplicatedMovement");

	USQRotatingMovementComponent_OnRep_RotationReplicatedMovement_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQRotatingMovementComponent.GetCurrentRotationVelocity
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
struct FRotator USQRotatingMovementComponent::GetCurrentRotationVelocity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRotatingMovementComponent.GetCurrentRotationVelocity");

	USQRotatingMovementComponent_GetCurrentRotationVelocity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQRotatingMovementComponent.AddRotationInput
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                InRotationInput                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
void USQRotatingMovementComponent::AddRotationInput(const struct FRotator& InRotationInput)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRotatingMovementComponent.AddRotationInput");

	USQRotatingMovementComponent_AddRotationInput_Params params;
	params.InRotationInput = InRotationInput;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQRoleListUnit.SelfTick
// (Final, Native, Public, BlueprintCallable)
void USQRoleListUnit::SelfTick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRoleListUnit.SelfTick");

	USQRoleListUnit_SelfTick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQRoleListUnit.InitWidget
// (Final, Native, Public, BlueprintCallable)
void USQRoleListUnit::InitWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRoleListUnit.InitWidget");

	USQRoleListUnit_InitWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQRoleListGroup.InitWidget
// (Final, Native, Public, BlueprintCallable)
void USQRoleListGroup::InitWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRoleListGroup.InitWidget");

	USQRoleListGroup_InitWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQRoleListGroup.GroupAvailabilityText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FText USQRoleListGroup::GroupAvailabilityText()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRoleListGroup.GroupAvailabilityText");

	USQRoleListGroup_GroupAvailabilityText_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQRoleList.InitWidget
// (Final, Native, Public, BlueprintCallable)
void USQRoleList::InitWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRoleList.InitWidget");

	USQRoleList_InitWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQRoleList.DoTick
// (Final, Native, Public, BlueprintCallable)
void USQRoleList::DoTick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRoleList.DoTick");

	USQRoleList_DoTick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQRoleList.DisableAllRoleTicks
// (Final, Native, Public, BlueprintCallable)
void USQRoleList::DisableAllRoleTicks()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRoleList.DisableAllRoleTicks");

	USQRoleList_DisableAllRoleTicks_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQRepairEquipable.OnRep_RepairedTarget
// (Final, Native, Protected)
// Parameters:
// class ASQVehicle*              PreviousRepairedTarget         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQRepairEquipable::OnRep_RepairedTarget(class ASQVehicle* PreviousRepairedTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRepairEquipable.OnRep_RepairedTarget");

	ASQRepairEquipable_OnRep_RepairedTarget_Params params;
	params.PreviousRepairedTarget = PreviousRepairedTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQRepairTool.ServerStopRepairing
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
void ASQRepairTool::ServerStopRepairing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRepairTool.ServerStopRepairing");

	ASQRepairTool_ServerStopRepairing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQRepairTool.ServerStartRepairing
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// class ASQVehicle*              RepairedVehicle                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQRepairTool::ServerStartRepairing(class ASQVehicle* RepairedVehicle)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRepairTool.ServerStartRepairing");

	ASQRepairTool_ServerStartRepairing_Params params;
	params.RepairedVehicle = RepairedVehicle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQRearmSource.UnbindEventToAmmoUpdated
// (Native, Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FScriptDelegate         Delegate                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQRearmSource::UnbindEventToAmmoUpdated(const struct FScriptDelegate& Delegate)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRearmSource.UnbindEventToAmmoUpdated");

	USQRearmSource_UnbindEventToAmmoUpdated_Params params;
	params.Delegate = Delegate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQRearmSource.GetRearmType
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// ESQRearmType                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
ESQRearmType USQRearmSource::GetRearmType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRearmSource.GetRearmType");

	USQRearmSource_GetRearmType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQRearmSource.GetRearmSuccessString
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString USQRearmSource::GetRearmSuccessString()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRearmSource.GetRearmSuccessString");

	USQRearmSource_GetRearmSuccessString_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQRearmSource.GetRearmNoAmmoString
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString USQRearmSource::GetRearmNoAmmoString()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRearmSource.GetRearmNoAmmoString");

	USQRearmSource_GetRearmNoAmmoString_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQRearmSource.GetAmmo
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQRearmSource::GetAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRearmSource.GetAmmo");

	USQRearmSource_GetAmmo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQRearmSource.ConsumeAmmo
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                          AmmoRequired                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQRearmSource::ConsumeAmmo(float AmmoRequired)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRearmSource.ConsumeAmmo");

	USQRearmSource_ConsumeAmmo_Params params;
	params.AmmoRequired = AmmoRequired;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQRearmSource.CanRearmWeapon
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ASQEquipableItem*        Weapon                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQRearmSource::CanRearmWeapon(class ASQEquipableItem* Weapon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRearmSource.CanRearmWeapon");

	USQRearmSource_CanRearmWeapon_Params params;
	params.Weapon = Weapon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQRearmSource.CanRearmPawn
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class APawn*                   Rearmer                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQRearmSource::CanRearmPawn(class APawn* Rearmer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRearmSource.CanRearmPawn");

	USQRearmSource_CanRearmPawn_Params params;
	params.Rearmer = Rearmer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQRearmSource.BindEventToAmmoUpdated
// (Native, Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FScriptDelegate         Delegate                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQRearmSource::BindEventToAmmoUpdated(const struct FScriptDelegate& Delegate)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRearmSource.BindEventToAmmoUpdated");

	USQRearmSource_BindEventToAmmoUpdated_Params params;
	params.Delegate = Delegate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQRandomizer.OnRep_RandomSeed
// (Native, Protected)
void ASQRandomizer::OnRep_RandomSeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRandomizer.OnRep_RandomSeed");

	ASQRandomizer_OnRep_RandomSeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQRandomizer.BPRandRange
// (Native, Protected, BlueprintCallable)
// Parameters:
// int                            Min                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Max                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int ASQRandomizer::BPRandRange(int Min, int Max)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRandomizer.BPRandRange");

	ASQRandomizer_BPRandRange_Params params;
	params.Min = Min;
	params.Max = Max;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQRandomizer.BPRandHSVColor
// (Native, Protected, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor            BaseColor                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bRandomizeHue                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          MinHue                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          MaxHue                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bRandomizeSaturation           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          MinSaturation                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          MaxSaturation                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bRandomizeValue                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          MinValue                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          MaxValue                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bRandomizeAlpha                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          MinAlpha                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          MaxAlpha                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FLinearColor ASQRandomizer::BPRandHSVColor(const struct FLinearColor& BaseColor, bool bRandomizeHue, float MinHue, float MaxHue, bool bRandomizeSaturation, float MinSaturation, float MaxSaturation, bool bRandomizeValue, float MinValue, float MaxValue, bool bRandomizeAlpha, float MinAlpha, float MaxAlpha)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRandomizer.BPRandHSVColor");

	ASQRandomizer_BPRandHSVColor_Params params;
	params.BaseColor = BaseColor;
	params.bRandomizeHue = bRandomizeHue;
	params.MinHue = MinHue;
	params.MaxHue = MaxHue;
	params.bRandomizeSaturation = bRandomizeSaturation;
	params.MinSaturation = MinSaturation;
	params.MaxSaturation = MaxSaturation;
	params.bRandomizeValue = bRandomizeValue;
	params.MinValue = MinValue;
	params.MaxValue = MaxValue;
	params.bRandomizeAlpha = bRandomizeAlpha;
	params.MinAlpha = MinAlpha;
	params.MaxAlpha = MaxAlpha;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQRandomizer.BPRandColor
// (Native, Protected, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FLinearColor            BaseColor                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bRandomizeRed                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          MinRed                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          MaxRed                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bRandomizeGreen                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          MinGreen                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          MaxGreen                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bRandomizeBlue                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          MinBlue                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          MaxBlue                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bRandomizeAlpha                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          MinAlpha                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          MaxAlpha                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FLinearColor ASQRandomizer::BPRandColor(const struct FLinearColor& BaseColor, bool bRandomizeRed, float MinRed, float MaxRed, bool bRandomizeGreen, float MinGreen, float MaxGreen, bool bRandomizeBlue, float MinBlue, float MaxBlue, bool bRandomizeAlpha, float MinAlpha, float MaxAlpha)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRandomizer.BPRandColor");

	ASQRandomizer_BPRandColor_Params params;
	params.BaseColor = BaseColor;
	params.bRandomizeRed = bRandomizeRed;
	params.MinRed = MinRed;
	params.MaxRed = MaxRed;
	params.bRandomizeGreen = bRandomizeGreen;
	params.MinGreen = MinGreen;
	params.MaxGreen = MaxGreen;
	params.bRandomizeBlue = bRandomizeBlue;
	params.MinBlue = MinBlue;
	params.MaxBlue = MaxBlue;
	params.bRandomizeAlpha = bRandomizeAlpha;
	params.MinAlpha = MinAlpha;
	params.MaxAlpha = MaxAlpha;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQRandomizer.BPFRandRange
// (Native, Protected, BlueprintCallable)
// Parameters:
// float                          Min                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Max                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ASQRandomizer::BPFRandRange(float Min, float Max)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRandomizer.BPFRandRange");

	ASQRandomizer_BPFRandRange_Params params;
	params.Min = Min;
	params.Max = Max;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQRandomizer.BPBeginSeededPlay
// (Event, Protected, BlueprintEvent)
void ASQRandomizer::BPBeginSeededPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRandomizer.BPBeginSeededPlay");

	ASQRandomizer_BPBeginSeededPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQRandomizer_StaticMesh.SetMesh
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQRandomizer_StaticMesh::SetMesh(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRandomizer_StaticMesh.SetMesh");

	ASQRandomizer_StaticMesh_SetMesh_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQRandomizer_SceneComponent.ShowRandomComponent
// (Native, Public, BlueprintCallable)
void ASQRandomizer_SceneComponent::ShowRandomComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRandomizer_SceneComponent.ShowRandomComponent");

	ASQRandomizer_SceneComponent_ShowRandomComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQRandomizer_SceneComponent.DisableAllComponents
// (Native, Public, BlueprintCallable)
void ASQRandomizer_SceneComponent::DisableAllComponents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRandomizer_SceneComponent.DisableAllComponents");

	ASQRandomizer_SceneComponent_DisableAllComponents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQRadialButton.UpdateRadialAngle
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                          UpdatedAngle                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQRadialButton::UpdateRadialAngle(float UpdatedAngle)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRadialButton.UpdateRadialAngle");

	USQRadialButton_UpdateRadialAngle_Params params;
	params.UpdatedAngle = UpdatedAngle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQRadialButton.OnHoverEnd
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
void USQRadialButton::OnHoverEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRadialButton.OnHoverEnd");

	USQRadialButton_OnHoverEnd_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQRadialButton.OnHoverBegin
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
void USQRadialButton::OnHoverBegin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRadialButton.OnHoverBegin");

	USQRadialButton_OnHoverBegin_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQRadialIconButton.UpdateOuterRimImage
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
void USQRadialIconButton::UpdateOuterRimImage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRadialIconButton.UpdateOuterRimImage");

	USQRadialIconButton_UpdateOuterRimImage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQRadialIconButton.UpdateInnerHoverImage
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
void USQRadialIconButton::UpdateInnerHoverImage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRadialIconButton.UpdateInnerHoverImage");

	USQRadialIconButton_UpdateInnerHoverImage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQRadialIconButton.UpdateIconImage
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
void USQRadialIconButton::UpdateIconImage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRadialIconButton.UpdateIconImage");

	USQRadialIconButton_UpdateIconImage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQRadialRoleIconButton.UpdateLimit
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
void USQRadialRoleIconButton::UpdateLimit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRadialRoleIconButton.UpdateLimit");

	USQRadialRoleIconButton_UpdateLimit_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQRadialIconToggleButton.Toggle
// (Final, Native, Public, BlueprintCallable)
void USQRadialIconToggleButton::Toggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRadialIconToggleButton.Toggle");

	USQRadialIconToggleButton_Toggle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQRadialIconToggleButton.OnToggleChanged
// (Event, Public, BlueprintCallable, BlueprintEvent)
void USQRadialIconToggleButton::OnToggleChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRadialIconToggleButton.OnToggleChanged");

	USQRadialIconToggleButton_OnToggleChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQRadialDeployableButton.UpdateLimitText
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
void USQRadialDeployableButton::UpdateLimitText()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRadialDeployableButton.UpdateLimitText");

	USQRadialDeployableButton_UpdateLimitText_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQRadialDeployableButton.UpdateDeployableLimit
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
void USQRadialDeployableButton::UpdateDeployableLimit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRadialDeployableButton.UpdateDeployableLimit");

	USQRadialDeployableButton_UpdateDeployableLimit_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQProtectionZone.OnCompExit
// (Final, Native, Protected)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQProtectionZone::OnCompExit(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQProtectionZone.OnCompExit");

	ASQProtectionZone_OnCompExit_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQProtectionZone.OnCompBeginOverlap
// (Final, Native, Protected, HasOutParms)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void ASQProtectionZone::OnCompBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQProtectionZone.OnCompBeginOverlap");

	ASQProtectionZone_OnCompBeginOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQProtectionZone.CheckOverlap
// (Final, Native, Protected)
void ASQProtectionZone::CheckOverlap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQProtectionZone.CheckOverlap");

	ASQProtectionZone_CheckOverlap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQProjectileSpawnerComponent.StopFiring
// (Final, Native, Public, BlueprintCallable)
void USQProjectileSpawnerComponent::StopFiring()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQProjectileSpawnerComponent.StopFiring");

	USQProjectileSpawnerComponent_StopFiring_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQProjectileSpawnerComponent.StartFiring
// (Final, Native, Public, BlueprintCallable)
void USQProjectileSpawnerComponent::StartFiring()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQProjectileSpawnerComponent.StartFiring");

	USQProjectileSpawnerComponent_StartFiring_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQProjectileSpawnerComponent.OnRep_IsFiring
// (Final, Native, Private)
// Parameters:
// bool                           OldValue                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQProjectileSpawnerComponent::OnRep_IsFiring(bool OldValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQProjectileSpawnerComponent.OnRep_IsFiring");

	USQProjectileSpawnerComponent_OnRep_IsFiring_Params params;
	params.OldValue = OldValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQProjectileSpawnerComponent.OnProjectileImpact
// (Final, Native, Private, HasOutParms, HasDefaults)
// Parameters:
// class AActor*                  SelfActor                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 NormalImpulse                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void USQProjectileSpawnerComponent::OnProjectileImpact(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQProjectileSpawnerComponent.OnProjectileImpact");

	USQProjectileSpawnerComponent_OnProjectileImpact_Params params;
	params.SelfActor = SelfActor;
	params.OtherActor = OtherActor;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// DelegateFunction Squad.SQProjectileSpawnerComponent.OnFireEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate)
void USQProjectileSpawnerComponent::OnFireEvent__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Squad.SQProjectileSpawnerComponent.OnFireEvent__DelegateSignature");

	USQProjectileSpawnerComponent_OnFireEvent__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQProjectileMovement.SetFlightToPosition
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 LookatPos                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          AngularSpeed                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQProjectileMovement::SetFlightToPosition(const struct FVector& LookatPos, float AngularSpeed, float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQProjectileMovement.SetFlightToPosition");

	USQProjectileMovement_SetFlightToPosition_Params params;
	params.LookatPos = LookatPos;
	params.AngularSpeed = AngularSpeed;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerState.UpdateContextVoiceSettings
// (Final, Native, Public)
// Parameters:
// class ASQSquadState*           Squad                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQPlayerState*          Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerState::UpdateContextVoiceSettings(class ASQSquadState* Squad, class ASQPlayerState* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.UpdateContextVoiceSettings");

	ASQPlayerState_UpdateContextVoiceSettings_Params params;
	params.Squad = Squad;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerState.SetTeamWorkScore
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          InTeamWorkScore                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerState::SetTeamWorkScore(float InTeamWorkScore)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.SetTeamWorkScore");

	ASQPlayerState_SetTeamWorkScore_Params params;
	params.InTeamWorkScore = InTeamWorkScore;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerState.SetTeamState
// (Native, Public)
// Parameters:
// class ASQTeamState*            NewTeamState                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerState::SetTeamState(class ASQTeamState* NewTeamState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.SetTeamState");

	ASQPlayerState_SetTeamState_Params params;
	params.NewTeamState = NewTeamState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerState.SetSupporterPatch
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture*                InSupporterPatch               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerState::SetSupporterPatch(class UTexture* InSupporterPatch)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.SetSupporterPatch");

	ASQPlayerState_SetSupporterPatch_Params params;
	params.InSupporterPatch = InSupporterPatch;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerState.SetSquadState
// (Native, Public)
// Parameters:
// class ASQSquadState*           NewSquadState                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerState::SetSquadState(class ASQSquadState* NewSquadState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.SetSquadState");

	ASQPlayerState_SetSquadState_Params params;
	params.NewSquadState = NewSquadState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerState.SetSoldier
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASQSoldier*              InSoldier                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerState::SetSoldier(class ASQSoldier* InSoldier)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.SetSoldier");

	ASQPlayerState_SetSoldier_Params params;
	params.InSoldier = InSoldier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerState.SetRevivedPoints
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          InRevivedPoints                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerState::SetRevivedPoints(float InRevivedPoints)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.SetRevivedPoints");

	ASQPlayerState_SetRevivedPoints_Params params;
	params.InRevivedPoints = InRevivedPoints;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerState.SetPlayerNamePrefix
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 NewPlayerNamePrefix            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerState::SetPlayerNamePrefix(const struct FString& NewPlayerNamePrefix)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.SetPlayerNamePrefix");

	ASQPlayerState_SetPlayerNamePrefix_Params params;
	params.NewPlayerNamePrefix = NewPlayerNamePrefix;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerState.SetObjectiveScore
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          InObjectiveScore               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerState::SetObjectiveScore(float InObjectiveScore)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.SetObjectiveScore");

	ASQPlayerState_SetObjectiveScore_Params params;
	params.InObjectiveScore = InObjectiveScore;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerState.SetNumWounds
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            InWounds                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerState::SetNumWounds(int InWounds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.SetNumWounds");

	ASQPlayerState_SetNumWounds_Params params;
	params.InWounds = InWounds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerState.SetNumWounded
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            InWounded                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerState::SetNumWounded(int InWounded)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.SetNumWounded");

	ASQPlayerState_SetNumWounded_Params params;
	params.InWounded = InWounded;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerState.SetNumTeamKills
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            InNumTeamkills                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerState::SetNumTeamKills(int InNumTeamkills)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.SetNumTeamKills");

	ASQPlayerState_SetNumTeamKills_Params params;
	params.InNumTeamkills = InNumTeamkills;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerState.SetNumKills
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            InNumKill                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerState::SetNumKills(int InNumKill)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.SetNumKills");

	ASQPlayerState_SetNumKills_Params params;
	params.InNumKill = InNumKill;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerState.SetNumDeaths
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            InNumDeaths                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerState::SetNumDeaths(int InNumDeaths)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.SetNumDeaths");

	ASQPlayerState_SetNumDeaths_Params params;
	params.InNumDeaths = InNumDeaths;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerState.SetLives
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            InLives                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerState::SetLives(int InLives)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.SetLives");

	ASQPlayerState_SetLives_Params params;
	params.InLives = InLives;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerState.SetIsQA
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bInIsQA                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerState::SetIsQA(bool bInIsQA)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.SetIsQA");

	ASQPlayerState_SetIsQA_Params params;
	params.bInIsQA = bInIsQA;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerState.SetIsMember
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bInIsMember                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerState::SetIsMember(bool bInIsMember)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.SetIsMember");

	ASQPlayerState_SetIsMember_Params params;
	params.bInIsMember = bInIsMember;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerState.SetIsDev
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bInIsDev                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerState::SetIsDev(bool bInIsDev)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.SetIsDev");

	ASQPlayerState_SetIsDev_Params params;
	params.bInIsDev = bInIsDev;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerState.SetIsAdmin
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bInIsAdmin                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerState::SetIsAdmin(bool bInIsAdmin)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.SetIsAdmin");

	ASQPlayerState_SetIsAdmin_Params params;
	params.bInIsAdmin = bInIsAdmin;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerState.SetHealPoints
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          InHealPoints                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerState::SetHealPoints(float InHealPoints)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.SetHealPoints");

	ASQPlayerState_SetHealPoints_Params params;
	params.InHealPoints = InHealPoints;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerState.SetDeployRoleAvaliable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           InDeployRoleAvaliable          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerState::SetDeployRoleAvaliable(bool InDeployRoleAvaliable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.SetDeployRoleAvaliable");

	ASQPlayerState_SetDeployRoleAvaliable_Params params;
	params.InDeployRoleAvaliable = InDeployRoleAvaliable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerState.SetDeployRole
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USQRoleSettings*         InDeployRole                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerState::SetDeployRole(class USQRoleSettings* InDeployRole)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.SetDeployRole");

	ASQPlayerState_SetDeployRole_Params params;
	params.InDeployRole = InDeployRole;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerState.SetCurrentSeat
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USQVehicleSeatComponent* InCurrentSeat                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerState::SetCurrentSeat(class USQVehicleSeatComponent* InCurrentSeat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.SetCurrentSeat");

	ASQPlayerState_SetCurrentSeat_Params params;
	params.InCurrentSeat = InCurrentSeat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerState.SetCurrentRole
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USQRoleSettings*         InCurrentRole                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerState::SetCurrentRole(class USQRoleSettings* InCurrentRole)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.SetCurrentRole");

	ASQPlayerState_SetCurrentRole_Params params;
	params.InCurrentRole = InCurrentRole;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerState.SetCurrentPawn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class APawn*                   InPawn                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerState::SetCurrentPawn(class APawn* InPawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.SetCurrentPawn");

	ASQPlayerState_SetCurrentPawn_Params params;
	params.InPawn = InPawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerState.SetClanPatch
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UTexture*                InClanPatch                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerState::SetClanPatch(class UTexture* InClanPatch)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.SetClanPatch");

	ASQPlayerState_SetClanPatch_Params params;
	params.InClanPatch = InClanPatch;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerState.ServerSetPlayerNamePrefix
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 NewPlayerNamePrefix            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerState::ServerSetPlayerNamePrefix(const struct FString& NewPlayerNamePrefix)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.ServerSetPlayerNamePrefix");

	ASQPlayerState_ServerSetPlayerNamePrefix_Params params;
	params.NewPlayerNamePrefix = NewPlayerNamePrefix;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerState.ServerSendSerializedInventoryItems
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// TArray<unsigned char>          SerializedData                 (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<int>                    ActiveClanMemberItems          (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
void ASQPlayerState::ServerSendSerializedInventoryItems(TArray<unsigned char> SerializedData, TArray<int> ActiveClanMemberItems)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.ServerSendSerializedInventoryItems");

	ASQPlayerState_ServerSendSerializedInventoryItems_Params params;
	params.SerializedData = SerializedData;
	params.ActiveClanMemberItems = ActiveClanMemberItems;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerState.ServerRequestTeamChange
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            NewTeam                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerState::ServerRequestTeamChange(int NewTeam)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.ServerRequestTeamChange");

	ASQPlayerState_ServerRequestTeamChange_Params params;
	params.NewTeam = NewTeam;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerState.ServerOnImpact
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// uint64_t                       ProjectileId                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 NormalImpulse                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              Hit                            (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void ASQPlayerState::ServerOnImpact(uint64_t ProjectileId, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.ServerOnImpact");

	ASQPlayerState_ServerOnImpact_Params params;
	params.ProjectileId = ProjectileId;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerState.ScorePointsDelayed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Points                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 Reason                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerState::ScorePointsDelayed(int Points, const struct FString& Reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.ScorePointsDelayed");

	ASQPlayerState_ScorePointsDelayed_Params params;
	params.Points = Points;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerState.ScorePoints
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Points                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 Reason                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerState::ScorePoints(int Points, const struct FString& Reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.ScorePoints");

	ASQPlayerState_ScorePoints_Params params;
	params.Points = Points;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerState.RemovedPlacedDeployableItemAt
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            Index                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQPlayerState::RemovedPlacedDeployableItemAt(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.RemovedPlacedDeployableItemAt");

	ASQPlayerState_RemovedPlacedDeployableItemAt_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerState.OnRep_TeamState
// (Native, Public)
void ASQPlayerState::OnRep_TeamState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.OnRep_TeamState");

	ASQPlayerState_OnRep_TeamState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerState.OnRep_SquadState
// (Native, Public)
// Parameters:
// class ASQSquadState*           OldSquadState                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerState::OnRep_SquadState(class ASQSquadState* OldSquadState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.OnRep_SquadState");

	ASQPlayerState_OnRep_SquadState_Params params;
	params.OldSquadState = OldSquadState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerState.OnRep_PlayerNamePrefix
// (Native, Public)
// Parameters:
// struct FString                 OldPlayerNamePrefix            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerState::OnRep_PlayerNamePrefix(const struct FString& OldPlayerNamePrefix)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.OnRep_PlayerNamePrefix");

	ASQPlayerState_OnRep_PlayerNamePrefix_Params params;
	params.OldPlayerNamePrefix = OldPlayerNamePrefix;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerState.OnRep_FireTeamPosition
// (Native, Public)
void ASQPlayerState::OnRep_FireTeamPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.OnRep_FireTeamPosition");

	ASQPlayerState_OnRep_FireTeamPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerState.OnRep_FireTeamIndex
// (Native, Public)
void ASQPlayerState::OnRep_FireTeamIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.OnRep_FireTeamIndex");

	ASQPlayerState_OnRep_FireTeamIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerState.OnRep_DeployRole
// (Native, Public)
void ASQPlayerState::OnRep_DeployRole()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.OnRep_DeployRole");

	ASQPlayerState_OnRep_DeployRole_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerState.OnRep_CurrentSeat
// (Native, Public)
// Parameters:
// class USQVehicleSeatComponent* LastSeat                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerState::OnRep_CurrentSeat(class USQVehicleSeatComponent* LastSeat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.OnRep_CurrentSeat");

	ASQPlayerState_OnRep_CurrentSeat_Params params;
	params.LastSeat = LastSeat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerState.OnRep_CurrentRole
// (Native, Public)
// Parameters:
// class USQRoleSettings*         OldPlayerCurrentRole           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerState::OnRep_CurrentRole(class USQRoleSettings* OldPlayerCurrentRole)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.OnRep_CurrentRole");

	ASQPlayerState_OnRep_CurrentRole_Params params;
	params.OldPlayerCurrentRole = OldPlayerCurrentRole;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerState.OnRep_CurrentPawn
// (Native, Public)
void ASQPlayerState::OnRep_CurrentPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.OnRep_CurrentPawn");

	ASQPlayerState_OnRep_CurrentPawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerState.MulticastOnImpact
// (Net, NetReliable, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// uint64_t                       ProjectileId                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 NormalImpulse                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              Hit                            (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void ASQPlayerState::MulticastOnImpact(uint64_t ProjectileId, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.MulticastOnImpact");

	ASQPlayerState_MulticastOnImpact_Params params;
	params.ProjectileId = ProjectileId;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerState.IsSquadLeader
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQPlayerState::IsSquadLeader()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.IsSquadLeader");

	ASQPlayerState_IsSquadLeader_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerState.IsQA
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQPlayerState::IsQA()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.IsQA");

	ASQPlayerState_IsQA_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerState.IsMember
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQPlayerState::IsMember()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.IsMember");

	ASQPlayerState_IsMember_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerState.IsFireTeamLeader
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQPlayerState::IsFireTeamLeader()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.IsFireTeamLeader");

	ASQPlayerState_IsFireTeamLeader_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerState.IsDev
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQPlayerState::IsDev()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.IsDev");

	ASQPlayerState_IsDev_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerState.IsCommander
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQPlayerState::IsCommander()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.IsCommander");

	ASQPlayerState_IsCommander_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerState.IsAdmin
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQPlayerState::IsAdmin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.IsAdmin");

	ASQPlayerState_IsAdmin_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerState.GetUniqueNetID
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FUniqueNetIdRepl        ReturnValue                    (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FUniqueNetIdRepl ASQPlayerState::GetUniqueNetID()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.GetUniqueNetID");

	ASQPlayerState_GetUniqueNetID_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerState.GetTeamWorkScore
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ASQPlayerState::GetTeamWorkScore()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.GetTeamWorkScore");

	ASQPlayerState_GetTeamWorkScore_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerState.GetTeamState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASQTeamState*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASQTeamState* ASQPlayerState::GetTeamState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.GetTeamState");

	ASQPlayerState_GetTeamState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerState.GetSupporterPatch
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture*                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UTexture* ASQPlayerState::GetSupporterPatch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.GetSupporterPatch");

	ASQPlayerState_GetSupporterPatch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerState.GetSquadState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASQSquadState*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASQSquadState* ASQPlayerState::GetSquadState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.GetSquadState");

	ASQPlayerState_GetSquadState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerState.GetSoldier
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASQSoldier*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASQSoldier* ASQPlayerState::GetSoldier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.GetSoldier");

	ASQPlayerState_GetSoldier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerState.GetShortPlayerName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString ASQPlayerState::GetShortPlayerName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.GetShortPlayerName");

	ASQPlayerState_GetShortPlayerName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerState.GetRevivedPoints
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ASQPlayerState::GetRevivedPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.GetRevivedPoints");

	ASQPlayerState_GetRevivedPoints_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerState.GetPlayerOnlineID
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString ASQPlayerState::GetPlayerOnlineID()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.GetPlayerOnlineID");

	ASQPlayerState_GetPlayerOnlineID_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerState.GetPlayerNamePrefix
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString ASQPlayerState::GetPlayerNamePrefix()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.GetPlayerNamePrefix");

	ASQPlayerState_GetPlayerNamePrefix_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerState.GetPlacedDeployableItemsCount
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int ASQPlayerState::GetPlacedDeployableItemsCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.GetPlacedDeployableItemsCount");

	ASQPlayerState_GetPlacedDeployableItemsCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerState.GetPlacedDeployableAt
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQDeployable*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASQDeployable* ASQPlayerState::GetPlacedDeployableAt(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.GetPlacedDeployableAt");

	ASQPlayerState_GetPlacedDeployableAt_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerState.GetObjectiveScore
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ASQPlayerState::GetObjectiveScore()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.GetObjectiveScore");

	ASQPlayerState_GetObjectiveScore_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerState.GetNumWounds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int ASQPlayerState::GetNumWounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.GetNumWounds");

	ASQPlayerState_GetNumWounds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerState.GetNumWounded
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int ASQPlayerState::GetNumWounded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.GetNumWounded");

	ASQPlayerState_GetNumWounded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerState.GetNumTeamKills
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int ASQPlayerState::GetNumTeamKills()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.GetNumTeamKills");

	ASQPlayerState_GetNumTeamKills_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerState.GetNumKills
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int ASQPlayerState::GetNumKills()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.GetNumKills");

	ASQPlayerState_GetNumKills_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerState.GetNumDeaths
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int ASQPlayerState::GetNumDeaths()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.GetNumDeaths");

	ASQPlayerState_GetNumDeaths_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerState.GetLives
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int ASQPlayerState::GetLives()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.GetLives");

	ASQPlayerState_GetLives_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerState.GetHealPoints
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ASQPlayerState::GetHealPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.GetHealPoints");

	ASQPlayerState_GetHealPoints_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerState.GetFullPlayerName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString ASQPlayerState::GetFullPlayerName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.GetFullPlayerName");

	ASQPlayerState_GetFullPlayerName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerState.GetFireTeamPosition
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int ASQPlayerState::GetFireTeamPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.GetFireTeamPosition");

	ASQPlayerState_GetFireTeamPosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerState.GetFireTeamIndex
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int ASQPlayerState::GetFireTeamIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.GetFireTeamIndex");

	ASQPlayerState_GetFireTeamIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerState.GetDeployRoleAvaliable
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQPlayerState::GetDeployRoleAvaliable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.GetDeployRoleAvaliable");

	ASQPlayerState_GetDeployRoleAvaliable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerState.GetDeployRole
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USQRoleSettings*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USQRoleSettings* ASQPlayerState::GetDeployRole()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.GetDeployRole");

	ASQPlayerState_GetDeployRole_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerState.GetCurrentVehicle
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASQVehicle*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASQVehicle* ASQPlayerState::GetCurrentVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.GetCurrentVehicle");

	ASQPlayerState_GetCurrentVehicle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerState.GetCurrentSeatPawn
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASQVehicleSeat*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASQVehicleSeat* ASQPlayerState::GetCurrentSeatPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.GetCurrentSeatPawn");

	ASQPlayerState_GetCurrentSeatPawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerState.GetCurrentSeat
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USQVehicleSeatComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USQVehicleSeatComponent* ASQPlayerState::GetCurrentSeat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.GetCurrentSeat");

	ASQPlayerState_GetCurrentSeat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerState.GetCurrentRole
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USQRoleSettings*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USQRoleSettings* ASQPlayerState::GetCurrentRole()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.GetCurrentRole");

	ASQPlayerState_GetCurrentRole_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerState.GetCurrentPawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class APawn*                   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class APawn* ASQPlayerState::GetCurrentPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.GetCurrentPawn");

	ASQPlayerState_GetCurrentPawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerState.GetClanPatch
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture*                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UTexture* ASQPlayerState::GetClanPatch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.GetClanPatch");

	ASQPlayerState_GetClanPatch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerState.BPOnRep_PlayerNamePrefix
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FString                 OldPlayerNamePrefix            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 NewPlayerNamePrefix            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerState::BPOnRep_PlayerNamePrefix(const struct FString& OldPlayerNamePrefix, const struct FString& NewPlayerNamePrefix)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.BPOnRep_PlayerNamePrefix");

	ASQPlayerState_BPOnRep_PlayerNamePrefix_Params params;
	params.OldPlayerNamePrefix = OldPlayerNamePrefix;
	params.NewPlayerNamePrefix = NewPlayerNamePrefix;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerState.AddPlacedDeployableItem
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASQDeployable*           Deployable                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerState::AddPlacedDeployableItem(class ASQDeployable* Deployable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerState.AddPlacedDeployableItem");

	ASQPlayerState_AddPlacedDeployableItem_Params params;
	params.Deployable = Deployable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerCameraManager.ModifyNearClipPlane
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          NearClipPlaneDistance          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerCameraManager::ModifyNearClipPlane(float NearClipPlaneDistance)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerCameraManager.ModifyNearClipPlane");

	ASQPlayerCameraManager_ModifyNearClipPlane_Params params;
	params.NearClipPlaneDistance = NearClipPlaneDistance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerCameraManager.GetNearClipPlane
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ASQPlayerCameraManager::GetNearClipPlane()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerCameraManager.GetNearClipPlane");

	ASQPlayerCameraManager_GetNearClipPlane_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerCameraManager.GetLastNearClipPlane
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ASQPlayerCameraManager::GetLastNearClipPlane()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerCameraManager.GetLastNearClipPlane");

	ASQPlayerCameraManager_GetLastNearClipPlane_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerCameraManager.CalcScreenCenterRay
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          Range                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 OutStart                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 OutEnd                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerCameraManager::CalcScreenCenterRay(float Range, struct FVector* OutStart, struct FVector* OutEnd)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerCameraManager.CalcScreenCenterRay");

	ASQPlayerCameraManager_CalcScreenCenterRay_Params params;
	params.Range = Range;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutStart != nullptr)
		*OutStart = params.OutStart;
	if (OutEnd != nullptr)
		*OutEnd = params.OutEnd;

}


// Function Squad.SQPhysicsVolume.BPActorLeavingVolume
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPhysicsVolume::BPActorLeavingVolume(class AActor* Other)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPhysicsVolume.BPActorLeavingVolume");

	ASQPhysicsVolume_BPActorLeavingVolume_Params params;
	params.Other = Other;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPhysicsVolume.BPActorEnteredVolume
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPhysicsVolume::BPActorEnteredVolume(class AActor* Other)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPhysicsVolume.BPActorEnteredVolume");

	ASQPhysicsVolume_BPActorEnteredVolume_Params params;
	params.Other = Other;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPhysicalMaterialEffects.GetThrowableEffect
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USQPhysicalMaterial*     Material                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSQProjectileImpactEffect ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
struct FSQProjectileImpactEffect USQPhysicalMaterialEffects::GetThrowableEffect(class USQPhysicalMaterial* Material)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPhysicalMaterialEffects.GetThrowableEffect");

	USQPhysicalMaterialEffects_GetThrowableEffect_Params params;
	params.Material = Material;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPhysicalMaterialEffects.GetImpactEffect
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USQPhysicalMaterial*     Material                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSQProjectileImpactEffect ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
struct FSQProjectileImpactEffect USQPhysicalMaterialEffects::GetImpactEffect(class USQPhysicalMaterial* Material)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPhysicalMaterialEffects.GetImpactEffect");

	USQPhysicalMaterialEffects_GetImpactEffect_Params params;
	params.Material = Material;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPhysicalMaterialEffects.GetExplosionEffect
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USQPhysicalMaterial*     Material                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSQExplosionEffect      ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
struct FSQExplosionEffect USQPhysicalMaterialEffects::GetExplosionEffect(class USQPhysicalMaterial* Material)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPhysicalMaterialEffects.GetExplosionEffect");

	USQPhysicalMaterialEffects_GetExplosionEffect_Params params;
	params.Material = Material;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPhysicalMaterialEffects.GetEffect
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USQPhysicalMaterial*     Material                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSQEffectsSet           ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
struct FSQEffectsSet USQPhysicalMaterialEffects::GetEffect(class USQPhysicalMaterial* Material)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPhysicalMaterialEffects.GetEffect");

	USQPhysicalMaterialEffects_GetEffect_Params params;
	params.Material = Material;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPhysicalMaterialEffects.GetBlastEffect
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USQPhysicalMaterial*     Material                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSQProjectileImpactEffect ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
struct FSQProjectileImpactEffect USQPhysicalMaterialEffects::GetBlastEffect(class USQPhysicalMaterial* Material)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPhysicalMaterialEffects.GetBlastEffect");

	USQPhysicalMaterialEffects_GetBlastEffect_Params params;
	params.Material = Material;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPhysicalMaterial.GetShockwave
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSQProjectileImpactEffect InImpactEffect                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class USQShockwave*            DefaultShockwave               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USQShockwave*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USQShockwave* USQPhysicalMaterial::GetShockwave(const struct FSQProjectileImpactEffect& InImpactEffect, class USQShockwave* DefaultShockwave)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPhysicalMaterial.GetShockwave");

	USQPhysicalMaterial_GetShockwave_Params params;
	params.InImpactEffect = InImpactEffect;
	params.DefaultShockwave = DefaultShockwave;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPhysicalMaterial.GetParticle
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSQProjectileImpactEffect InImpactEffect                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UParticleSystem*         DefaultParticle                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UParticleSystem*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UParticleSystem* USQPhysicalMaterial::GetParticle(const struct FSQProjectileImpactEffect& InImpactEffect, class UParticleSystem* DefaultParticle)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPhysicalMaterial.GetParticle");

	USQPhysicalMaterial_GetParticle_Params params;
	params.InImpactEffect = InImpactEffect;
	params.DefaultParticle = DefaultParticle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPhysicalMaterial.GetDecal
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSQProjectileImpactEffect InImpactEffect                 (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class UMaterialInterface*      DefaultDecal                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UMaterialInterface*      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UMaterialInterface* USQPhysicalMaterial::GetDecal(const struct FSQProjectileImpactEffect& InImpactEffect, class UMaterialInterface* DefaultDecal)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPhysicalMaterial.GetDecal");

	USQPhysicalMaterial_GetDecal_Params params;
	params.InImpactEffect = InImpactEffect;
	params.DefaultDecal = DefaultDecal;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPainCausingVolumeComponent.OnBeginOverlap
// (Native, Public, HasOutParms)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void USQPainCausingVolumeComponent::OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPainCausingVolumeComponent.OnBeginOverlap");

	USQPainCausingVolumeComponent_OnBeginOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapLattice.WorldLocationToDrawLocation
// (Final, Native, Protected, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USQMapWidgetBase*        MapWidget                      (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D               ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector2D USQMapLattice::WorldLocationToDrawLocation(const struct FVector& Location, class USQMapWidgetBase* MapWidget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapLattice.WorldLocationToDrawLocation");

	USQMapLattice_WorldLocationToDrawLocation_Params params;
	params.Location = Location;
	params.MapWidget = MapWidget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQMapLattice.DrawWidget
// (Native, Public, BlueprintCallable, Const)
// Parameters:
// struct FPaintContext           Context                        (Parm, NoDestructor, NativeAccessSpecifierPublic)
void USQMapLattice::DrawWidget(const struct FPaintContext& Context)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapLattice.DrawWidget");

	USQMapLattice_DrawWidget_Params params;
	params.Context = Context;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQOnlineHelpers.IsUserInSession
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FSQBlueprintFriend      User                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FBlueprintSessionResult Session                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQOnlineHelpers::STATIC_IsUserInSession(const struct FSQBlueprintFriend& User, const struct FBlueprintSessionResult& Session)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQOnlineHelpers.IsUserInSession");

	USQOnlineHelpers_IsUserInSession_Params params;
	params.User = User;
	params.Session = Session;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQOnlineHelpers.GetUsersSessionIndex
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FSQBlueprintFriend      User                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FBlueprintSessionResult> Sessions                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int USQOnlineHelpers::STATIC_GetUsersSessionIndex(const struct FSQBlueprintFriend& User, TArray<struct FBlueprintSessionResult> Sessions)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQOnlineHelpers.GetUsersSessionIndex");

	USQOnlineHelpers_GetUsersSessionIndex_Params params;
	params.User = User;
	params.Sessions = Sessions;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQOnlineHelpers.GetUsersInSession
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<struct FSQBlueprintFriend> Results                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FBlueprintSessionResult Session                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FSQBlueprintFriend> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
TArray<struct FSQBlueprintFriend> USQOnlineHelpers::STATIC_GetUsersInSession(TArray<struct FSQBlueprintFriend> Results, const struct FBlueprintSessionResult& Session)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQOnlineHelpers.GetUsersInSession");

	USQOnlineHelpers_GetUsersInSession_Params params;
	params.Results = Results;
	params.Session = Session;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQTeamActor.SetTeam
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESQTeam                        Team                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQTeamActor::SetTeam(ESQTeam Team)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQTeamActor.SetTeam");

	ASQTeamActor_SetTeam_Params params;
	params.Team = Team;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQTeamActor.OnRep_Team
// (Native, Public)
void ASQTeamActor::OnRep_Team()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQTeamActor.OnRep_Team");

	ASQTeamActor_OnRep_Team_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQTeamActor.GetTeam
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESQTeam                        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
ESQTeam ASQTeamActor::GetTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQTeamActor.GetTeam");

	ASQTeamActor_GetTeam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQObjective.SetWaitingToBeShown
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           bInIsWaitingToBeShown          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQObjective::SetWaitingToBeShown(bool bInIsWaitingToBeShown)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQObjective.SetWaitingToBeShown");

	ASQObjective_SetWaitingToBeShown_Params params;
	params.bInIsWaitingToBeShown = bInIsWaitingToBeShown;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQObjective.SetObjectiveMet
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           bObjectiveMet                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESQTeam                        InTeam                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQObjective::SetObjectiveMet(bool bObjectiveMet, ESQTeam InTeam)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQObjective.SetObjectiveMet");

	ASQObjective_SetObjectiveMet_Params params;
	params.bObjectiveMet = bObjectiveMet;
	params.InTeam = InTeam;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQObjective.SetKnownToEveryone
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           bInIsKnownToEveryone           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQObjective::SetKnownToEveryone(bool bInIsKnownToEveryone)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQObjective.SetKnownToEveryone");

	ASQObjective_SetKnownToEveryone_Params params;
	params.bInIsKnownToEveryone = bInIsKnownToEveryone;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQObjective.OnRep_HasObjectiveBeenMet
// (Final, Native, Protected)
void ASQObjective::OnRep_HasObjectiveBeenMet()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQObjective.OnRep_HasObjectiveBeenMet");

	ASQObjective_OnRep_HasObjectiveBeenMet_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQObjective.OnMet
// (Event, Public, BlueprintEvent)
void ASQObjective::OnMet()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQObjective.OnMet");

	ASQObjective_OnMet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQObjective.IsWaitingToBeShown
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQObjective::IsWaitingToBeShown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQObjective.IsWaitingToBeShown");

	ASQObjective_IsWaitingToBeShown_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQObjective.IsKnownToEveryone
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQObjective::IsKnownToEveryone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQObjective.IsKnownToEveryone");

	ASQObjective_IsKnownToEveryone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQObjective.HasObjectiveBeenMet
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQObjective::HasObjectiveBeenMet()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQObjective.HasObjectiveBeenMet");

	ASQObjective_HasObjectiveBeenMet_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQObjective.GetObjectiveShownMessage
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASQGameRuleSet*          RuleSet                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESQTeam                        InTeam                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FText ASQObjective::GetObjectiveShownMessage(class ASQGameRuleSet* RuleSet, ESQTeam InTeam)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQObjective.GetObjectiveShownMessage");

	ASQObjective_GetObjectiveShownMessage_Params params;
	params.RuleSet = RuleSet;
	params.InTeam = InTeam;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQObjective.GetObjectiveMetMessage
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASQGameRuleSet*          RuleSet                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESQTeam                        InTeam                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FText ASQObjective::GetObjectiveMetMessage(class ASQGameRuleSet* RuleSet, ESQTeam InTeam)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQObjective.GetObjectiveMetMessage");

	ASQObjective_GetObjectiveMetMessage_Params params;
	params.RuleSet = RuleSet;
	params.InTeam = InTeam;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQObjective.GetObjectiveMetByTeam
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESQTeam                        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
ESQTeam ASQObjective::GetObjectiveMetByTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQObjective.GetObjectiveMetByTeam");

	ASQObjective_GetObjectiveMetByTeam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQObjective.GetLocationForTeam
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESQTeam                        InTeam                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector ASQObjective::GetLocationForTeam(ESQTeam InTeam)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQObjective.GetLocationForTeam");

	ASQObjective_GetLocationForTeam_Params params;
	params.InTeam = InTeam;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQObjective_Destroyable.OnRep_HasBeenDestroyed
// (Final, Native, Protected)
void ASQObjective_Destroyable::OnRep_HasBeenDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQObjective_Destroyable.OnRep_HasBeenDestroyed");

	ASQObjective_Destroyable_OnRep_HasBeenDestroyed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQObjective_Destroyable.ObjectiveDestroyed
// (BlueprintAuthorityOnly, Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// float                          damage                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class AController*             EventInstigator                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQObjective_Destroyable::ObjectiveDestroyed(float damage, const struct FDamageEvent& DamageEvent, class AController* EventInstigator, class AActor* DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQObjective_Destroyable.ObjectiveDestroyed");

	ASQObjective_Destroyable_ObjectiveDestroyed_Params params;
	params.damage = damage;
	params.DamageEvent = DamageEvent;
	params.EventInstigator = EventInstigator;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQObjective_Destroyable.MulticastPlayDamageEffects
// (Net, Native, Event, NetMulticast, Protected)
// Parameters:
// class UClass*                  DamageTypeClass                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQObjective_Destroyable::MulticastPlayDamageEffects(class UClass* DamageTypeClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQObjective_Destroyable.MulticastPlayDamageEffects");

	ASQObjective_Destroyable_MulticastPlayDamageEffects_Params params;
	params.DamageTypeClass = DamageTypeClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQObjective_Destroyable.BPClientObjectiveDestroyed
// (Event, Public, BlueprintEvent)
void ASQObjective_Destroyable::BPClientObjectiveDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQObjective_Destroyable.BPClientObjectiveDestroyed");

	ASQObjective_Destroyable_BPClientObjectiveDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQNotificationData.GetNotificationLayout
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESQNotificationTypes           NotificationType               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSQNotificationLayout   ReturnValue                    (ConstParm, Parm, OutParm, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
struct FSQNotificationLayout USQNotificationData::GetNotificationLayout(ESQNotificationTypes NotificationType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQNotificationData.GetNotificationLayout");

	USQNotificationData_GetNotificationLayout_Params params;
	params.NotificationType = NotificationType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQNetworkPollingComponent.GetRollingPacketLossOutgoing
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQNetworkPollingComponent::GetRollingPacketLossOutgoing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQNetworkPollingComponent.GetRollingPacketLossOutgoing");

	USQNetworkPollingComponent_GetRollingPacketLossOutgoing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQNetworkPollingComponent.GetRollingPacketLossIncoming
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQNetworkPollingComponent::GetRollingPacketLossIncoming()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQNetworkPollingComponent.GetRollingPacketLossIncoming");

	USQNetworkPollingComponent_GetRollingPacketLossIncoming_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQMovementComponentNetworker.Server_ReplicateMoveToServer
// (Net, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// TArray<struct FMovePacket>     Payload                        (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
void USQMovementComponentNetworker::Server_ReplicateMoveToServer(TArray<struct FMovePacket> Payload)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMovementComponentNetworker.Server_ReplicateMoveToServer");

	USQMovementComponentNetworker_Server_ReplicateMoveToServer_Params params;
	params.Payload = Payload;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMovementComponentNetworker.Client_ReplicateClientAdjustment
// (Net, Native, Event, Protected, NetClient)
// Parameters:
// TArray<struct FAdjustPositionAndRotationPacket> Payload                        (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
void USQMovementComponentNetworker::Client_ReplicateClientAdjustment(TArray<struct FAdjustPositionAndRotationPacket> Payload)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMovementComponentNetworker.Client_ReplicateClientAdjustment");

	USQMovementComponentNetworker_Client_ReplicateClientAdjustment_Params params;
	params.Payload = Payload;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMovementComponentManager.UnRegisterComponent
// (Native, Public, BlueprintCallable)
// Parameters:
// class USQMovementComponentBase* MovementComponent              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQMovementComponentManager::UnRegisterComponent(class USQMovementComponentBase* MovementComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMovementComponentManager.UnRegisterComponent");

	USQMovementComponentManager_UnRegisterComponent_Params params;
	params.MovementComponent = MovementComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMovementComponentManager.RegisterComponent
// (Native, Public, BlueprintCallable)
// Parameters:
// class USQMovementComponentBase* MovementComponent              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQMovementComponentManager::RegisterComponent(class USQMovementComponentBase* MovementComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMovementComponentManager.RegisterComponent");

	USQMovementComponentManager_RegisterComponent_Params params;
	params.MovementComponent = MovementComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMovementAdjustmentComponent.OnEndOverlap
// (Native, Public)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQMovementAdjustmentComponent::OnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMovementAdjustmentComponent.OnEndOverlap");

	USQMovementAdjustmentComponent_OnEndOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMovementAdjustmentComponent.OnBeginOverlap
// (Native, Public, HasOutParms)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void USQMovementAdjustmentComponent::OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMovementAdjustmentComponent.OnBeginOverlap");

	USQMovementAdjustmentComponent_OnBeginOverlap_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleViewWidget.Unzoom
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
void USQVehicleViewWidget::Unzoom()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleViewWidget.Unzoom");

	USQVehicleViewWidget_Unzoom_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleViewWidget.InitWidget
// (Final, Native, Public, BlueprintCallable)
void USQVehicleViewWidget::InitWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleViewWidget.InitWidget");

	USQVehicleViewWidget_InitWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleViewWidget.IncreaseZoomLevel
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
void USQVehicleViewWidget::IncreaseZoomLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleViewWidget.IncreaseZoomLevel");

	USQVehicleViewWidget_IncreaseZoomLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleViewWidget.DecreaseZoomLevel
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
void USQVehicleViewWidget::DecreaseZoomLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleViewWidget.DecreaseZoomLevel");

	USQVehicleViewWidget_DecreaseZoomLevel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQProjectile.PlayProjectileSound
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USoundCue*               Sound                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAudioComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UAudioComponent* ASQProjectile::PlayProjectileSound(class USoundCue* Sound)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQProjectile.PlayProjectileSound");

	ASQProjectile_PlayProjectileSound_Params params;
	params.Sound = Sound;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQProjectile.PlayExplosionEffect
// (Native, Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult              ImpactHit                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQProjectile::PlayExplosionEffect(const struct FHitResult& ImpactHit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQProjectile.PlayExplosionEffect");

	ASQProjectile_PlayExplosionEffect_Params params;
	params.ImpactHit = ImpactHit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQProjectile.OnImpact
// (Native, Event, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                  SelfActor                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 NormalImpulse                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void ASQProjectile::OnImpact(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQProjectile.OnImpact");

	ASQProjectile_OnImpact_Params params;
	params.SelfActor = SelfActor;
	params.OtherActor = OtherActor;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQProjectile.GetWeapon
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class ASQEquipableItem*        ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASQEquipableItem* ASQProjectile::GetWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQProjectile.GetWeapon");

	ASQProjectile_GetWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQProjectile.GetDamage
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ASQProjectile::GetDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQProjectile.GetDamage");

	ASQProjectile_GetDamage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQProjectile.DisableAndDestroy
// (Native, Protected, BlueprintCallable)
void ASQProjectile::DisableAndDestroy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQProjectile.DisableAndDestroy");

	ASQProjectile_DisableAndDestroy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQProjectile.BPApplyExplosiveDamage
// (BlueprintAuthorityOnly, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FHitResult              LastHitResult                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>          IgnoreActors                   (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQProjectile::BPApplyExplosiveDamage(const struct FHitResult& LastHitResult, class AActor* DamageCauser, TArray<class AActor*> IgnoreActors)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQProjectile.BPApplyExplosiveDamage");

	ASQProjectile_BPApplyExplosiveDamage_Params params;
	params.LastHitResult = LastHitResult;
	params.DamageCauser = DamageCauser;
	params.IgnoreActors = IgnoreActors;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQProjectile.BlueprintOnImpact
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// struct FHitResult              HitResult                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void ASQProjectile::BlueprintOnImpact(const struct FHitResult& HitResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQProjectile.BlueprintOnImpact");

	ASQProjectile_BlueprintOnImpact_Params params;
	params.HitResult = HitResult;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMortarProjectile.SpawnArtilleryProjectile
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UClass*                  ProjectileClass                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*             InstigatorController           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  ProjectileOwner                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                Rotation                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                          InitialVelocity                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bCreatedOnServer               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQMortarProjectile::STATIC_SpawnArtilleryProjectile(class UClass* ProjectileClass, class AController* InstigatorController, class AActor* ProjectileOwner, const struct FVector& Location, const struct FRotator& Rotation, float InitialVelocity, bool bCreatedOnServer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMortarProjectile.SpawnArtilleryProjectile");

	ASQMortarProjectile_SpawnArtilleryProjectile_Params params;
	params.ProjectileClass = ProjectileClass;
	params.InstigatorController = InstigatorController;
	params.ProjectileOwner = ProjectileOwner;
	params.Location = Location;
	params.Rotation = Rotation;
	params.InitialVelocity = InitialVelocity;
	params.bCreatedOnServer = bCreatedOnServer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMortarProjectile.CreateSmoke
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
void ASQMortarProjectile::CreateSmoke()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMortarProjectile.CreateSmoke");

	ASQMortarProjectile_CreateSmoke_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMortarProjectile.BPOnNearGroundDistanceReached
// (Event, Public, BlueprintEvent)
void ASQMortarProjectile::BPOnNearGroundDistanceReached()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMortarProjectile.BPOnNearGroundDistanceReached");

	ASQMortarProjectile_BPOnNearGroundDistanceReached_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMortarProjectile.BPOnBeginDescending
// (Event, Public, BlueprintEvent)
void ASQMortarProjectile::BPOnBeginDescending()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMortarProjectile.BPOnBeginDescending");

	ASQMortarProjectile_BPOnBeginDescending_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQHealingEquipableItem.OnRep_HealedTarget
// (Final, Native, Protected)
// Parameters:
// class ASQSoldier*              PreviousHealedTarget           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQHealingEquipableItem::OnRep_HealedTarget(class ASQSoldier* PreviousHealedTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHealingEquipableItem.OnRep_HealedTarget");

	ASQHealingEquipableItem_OnRep_HealedTarget_Params params;
	params.PreviousHealedTarget = PreviousHealedTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMedicBag.IncreaseHealth
// (Final, Native, Private)
void ASQMedicBag::IncreaseHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMedicBag.IncreaseHealth");

	ASQMedicBag_IncreaseHealth_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateWidget.OnSelectionStateChanged
// (Event, Protected, BlueprintEvent)
void USQCoreStateWidget::OnSelectionStateChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateWidget.OnSelectionStateChanged");

	USQCoreStateWidget_OnSelectionStateChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateWidget.OnScaleChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          UniformScale                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQCoreStateWidget::OnScaleChanged(float UniformScale)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateWidget.OnScaleChanged");

	USQCoreStateWidget_OnScaleChanged_Params params;
	params.UniformScale = UniformScale;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateWidget.AnnounceSelectionState
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// ESQSelectionState              InSelectionState               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQCoreStateWidget::AnnounceSelectionState(ESQSelectionState InSelectionState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateWidget.AnnounceSelectionState");

	USQCoreStateWidget_AnnounceSelectionState_Params params;
	params.InSelectionState = InSelectionState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidget.OnTintValueChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidget::OnTintValueChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidget.OnTintValueChanged");

	USQMapWidget_OnTintValueChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidget.OnAngleChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidget::OnAngleChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidget.OnAngleChanged");

	USQMapWidget_OnAngleChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidget.GetTintValue
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<ESQMapWidgetTint>  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
TEnumAsByte<ESQMapWidgetTint> USQMapWidget::GetTintValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidget.GetTintValue");

	USQMapWidget_GetTintValue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQMapWidget.GetTintColor
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FLinearColor USQMapWidget::GetTintColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidget.GetTintColor");

	USQMapWidget_GetTintColor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQMapWidgetPawn.OnIsOwnedChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetPawn::OnIsOwnedChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetPawn.OnIsOwnedChanged");

	USQMapWidgetPawn_OnIsOwnedChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetPawn.OnIsOwnedBySelfChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetPawn::OnIsOwnedBySelfChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetPawn.OnIsOwnedBySelfChanged");

	USQMapWidgetPawn_OnIsOwnedBySelfChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetPawn.OnIsInSelfTeam
// (Event, Protected, BlueprintEvent)
void USQMapWidgetPawn::OnIsInSelfTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetPawn.OnIsInSelfTeam");

	USQMapWidgetPawn_OnIsInSelfTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetPawn.OnIsInSelfSquad
// (Event, Protected, BlueprintEvent)
void USQMapWidgetPawn::OnIsInSelfSquad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetPawn.OnIsInSelfSquad");

	USQMapWidgetPawn_OnIsInSelfSquad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetPawn.OnFireTeamIndexChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetPawn::OnFireTeamIndexChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetPawn.OnFireTeamIndexChanged");

	USQMapWidgetPawn_OnFireTeamIndexChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetPawn.OnCameraRotationYawChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetPawn::OnCameraRotationYawChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetPawn.OnCameraRotationYawChanged");

	USQMapWidgetPawn_OnCameraRotationYawChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetSoldier.OnSquadIdChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetSoldier::OnSquadIdChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetSoldier.OnSquadIdChanged");

	USQMapWidgetSoldier_OnSquadIdChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetSoldier.OnSoldierLocationChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetSoldier::OnSoldierLocationChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetSoldier.OnSoldierLocationChanged");

	USQMapWidgetSoldier_OnSoldierLocationChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetSoldier.OnSoldierInfoChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetSoldier::OnSoldierInfoChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetSoldier.OnSoldierInfoChanged");

	USQMapWidgetSoldier_OnSoldierInfoChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetSoldier.OnShowIncapChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetSoldier::OnShowIncapChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetSoldier.OnShowIncapChanged");

	USQMapWidgetSoldier_OnShowIncapChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetSoldier.OnShowBleedingChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetSoldier::OnShowBleedingChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetSoldier.OnShowBleedingChanged");

	USQMapWidgetSoldier_OnShowBleedingChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetSoldier.OnPlayerChangedRole
// (Final, Native, Protected)
// Parameters:
// class USQRoleSettings*         NewRole                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQMapWidgetSoldier::OnPlayerChangedRole(class USQRoleSettings* NewRole)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetSoldier.OnPlayerChangedRole");

	USQMapWidgetSoldier_OnPlayerChangedRole_Params params;
	params.NewRole = NewRole;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetSoldier.OnLeaderStateChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetSoldier::OnLeaderStateChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetSoldier.OnLeaderStateChanged");

	USQMapWidgetSoldier_OnLeaderStateChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetSoldier.OnIsWoundedChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetSoldier::OnIsWoundedChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetSoldier.OnIsWoundedChanged");

	USQMapWidgetSoldier_OnIsWoundedChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetSoldier.OnIsWithinCanSelfSeeHealthSatusRangeChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetSoldier::OnIsWithinCanSelfSeeHealthSatusRangeChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetSoldier.OnIsWithinCanSelfSeeHealthSatusRangeChanged");

	USQMapWidgetSoldier_OnIsWithinCanSelfSeeHealthSatusRangeChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetSoldier.OnIsUsingFreeLookChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetSoldier::OnIsUsingFreeLookChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetSoldier.OnIsUsingFreeLookChanged");

	USQMapWidgetSoldier_OnIsUsingFreeLookChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetSoldier.OnIsMedicChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetSoldier::OnIsMedicChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetSoldier.OnIsMedicChanged");

	USQMapWidgetSoldier_OnIsMedicChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetSoldier.OnIsInVehicleChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetSoldier::OnIsInVehicleChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetSoldier.OnIsInVehicleChanged");

	USQMapWidgetSoldier_OnIsInVehicleChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetSoldier.OnIsBleedingChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetSoldier::OnIsBleedingChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetSoldier.OnIsBleedingChanged");

	USQMapWidgetSoldier_OnIsBleedingChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetSoldier.OnIsAliveChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetSoldier::OnIsAliveChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetSoldier.OnIsAliveChanged");

	USQMapWidgetSoldier_OnIsAliveChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetSoldier.OnHealthStatusRangeChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetSoldier::OnHealthStatusRangeChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetSoldier.OnHealthStatusRangeChanged");

	USQMapWidgetSoldier_OnHealthStatusRangeChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetSoldier.OnFireteamIdChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetSoldier::OnFireteamIdChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetSoldier.OnFireteamIdChanged");

	USQMapWidgetSoldier_OnFireteamIdChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetSoldier.OnCurrentRoleChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetSoldier::OnCurrentRoleChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetSoldier.OnCurrentRoleChanged");

	USQMapWidgetSoldier_OnCurrentRoleChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetSoldier.OnCanSelfSeeHealthStatusChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetSoldier::OnCanSelfSeeHealthStatusChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetSoldier.OnCanSelfSeeHealthStatusChanged");

	USQMapWidgetSoldier_OnCanSelfSeeHealthStatusChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetSoldier.GetShowIncap
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQMapWidgetSoldier::GetShowIncap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetSoldier.GetShowIncap");

	USQMapWidgetSoldier_GetShowIncap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQMapWidgetSoldier.GetShowBleeding
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQMapWidgetSoldier::GetShowBleeding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetSoldier.GetShowBleeding");

	USQMapWidgetSoldier_GetShowBleeding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQMapWidgetDeployable.OnBuildStateChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetDeployable::OnBuildStateChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetDeployable.OnBuildStateChanged");

	USQMapWidgetDeployable_OnBuildStateChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetSpawnPoint.OnSpawnPointTypeChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetSpawnPoint::OnSpawnPointTypeChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetSpawnPoint.OnSpawnPointTypeChanged");

	USQMapWidgetSpawnPoint_OnSpawnPointTypeChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetSpawnPoint.OnSpawningEnabledChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetSpawnPoint::OnSpawningEnabledChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetSpawnPoint.OnSpawningEnabledChanged");

	USQMapWidgetSpawnPoint_OnSpawningEnabledChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetSpawnPoint.OnSiegedChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetSpawnPoint::OnSiegedChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetSpawnPoint.OnSiegedChanged");

	USQMapWidgetSpawnPoint_OnSiegedChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetSpawnPoint.OnIsSelectedChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetSpawnPoint::OnIsSelectedChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetSpawnPoint.OnIsSelectedChanged");

	USQMapWidgetSpawnPoint_OnIsSelectedChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetRallyPoint.OnSquadIdChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetRallyPoint::OnSquadIdChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetRallyPoint.OnSquadIdChanged");

	USQMapWidgetRallyPoint_OnSquadIdChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetRallyPoint.OnNumberOfSpawnsChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetRallyPoint::OnNumberOfSpawnsChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetRallyPoint.OnNumberOfSpawnsChanged");

	USQMapWidgetRallyPoint_OnNumberOfSpawnsChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetRallyPoint.OnIsInSelfSquadChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetRallyPoint::OnIsInSelfSquadChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetRallyPoint.OnIsInSelfSquadChanged");

	USQMapWidgetRallyPoint_OnIsInSelfSquadChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetRallyPoint.OnEventSquadStateChanged
// (Final, Native, Protected)
// Parameters:
// class ASQSquadState*           NewSquad                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQSquadState*           OldSquad                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQPlayerState*          Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQMapWidgetRallyPoint::OnEventSquadStateChanged(class ASQSquadState* NewSquad, class ASQSquadState* OldSquad, class ASQPlayerState* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetRallyPoint.OnEventSquadStateChanged");

	USQMapWidgetRallyPoint_OnEventSquadStateChanged_Params params;
	params.NewSquad = NewSquad;
	params.OldSquad = OldSquad;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetMapMarker.OnTintChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetMapMarker::OnTintChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetMapMarker.OnTintChanged");

	USQMapWidgetMapMarker_OnTintChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetMapMarker.OnTextureChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetMapMarker::OnTextureChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetMapMarker.OnTextureChanged");

	USQMapWidgetMapMarker_OnTextureChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetMapMarker.OnSquadIdChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetMapMarker::OnSquadIdChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetMapMarker.OnSquadIdChanged");

	USQMapWidgetMapMarker_OnSquadIdChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetMapMarker.OnFireteamIdChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetMapMarker::OnFireteamIdChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetMapMarker.OnFireteamIdChanged");

	USQMapWidgetMapMarker_OnFireteamIdChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetMapMarkerSelectable.OnRightClicked
// (Event, Protected, BlueprintEvent)
void USQMapWidgetMapMarkerSelectable::OnRightClicked()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetMapMarkerSelectable.OnRightClicked");

	USQMapWidgetMapMarkerSelectable_OnRightClicked_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetForwardBase.OnSiegedChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetForwardBase::OnSiegedChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetForwardBase.OnSiegedChanged");

	USQMapWidgetForwardBase_OnSiegedChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetForwardBase.OnExclusionRadiusChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetForwardBase::OnExclusionRadiusChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetForwardBase.OnExclusionRadiusChanged");

	USQMapWidgetForwardBase_OnExclusionRadiusChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetForwardBase.OnConstructionRadiusChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetForwardBase::OnConstructionRadiusChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetForwardBase.OnConstructionRadiusChanged");

	USQMapWidgetForwardBase_OnConstructionRadiusChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetForwardBase.OnConstructionPointsChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetForwardBase::OnConstructionPointsChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetForwardBase.OnConstructionPointsChanged");

	USQMapWidgetForwardBase_OnConstructionPointsChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetForwardBase.OnCanSpawnChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetForwardBase::OnCanSpawnChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetForwardBase.OnCanSpawnChanged");

	USQMapWidgetForwardBase_OnCanSpawnChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetForwardBase.OnAmmoPointsChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetForwardBase::OnAmmoPointsChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetForwardBase.OnAmmoPointsChanged");

	USQMapWidgetForwardBase_OnAmmoPointsChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetVehicle.UpdateHoldsCommander
// (Final, Native, Protected, BlueprintCallable)
void USQMapWidgetVehicle::UpdateHoldsCommander()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetVehicle.UpdateHoldsCommander");

	USQMapWidgetVehicle_UpdateHoldsCommander_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetVehicle.OnVehicleOccupantInfoChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// int                            AtIndex                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQMapWidgetVehicle::OnVehicleOccupantInfoChanged(int AtIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetVehicle.OnVehicleOccupantInfoChanged");

	USQMapWidgetVehicle_OnVehicleOccupantInfoChanged_Params params;
	params.AtIndex = AtIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetVehicle.OnStaticUIDataChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetVehicle::OnStaticUIDataChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetVehicle.OnStaticUIDataChanged");

	USQMapWidgetVehicle_OnStaticUIDataChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetVehicle.OnSelfInVehicleSeatChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetVehicle::OnSelfInVehicleSeatChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetVehicle.OnSelfInVehicleSeatChanged");

	USQMapWidgetVehicle_OnSelfInVehicleSeatChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetVehicle.OnIsInClaimingSquadChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetVehicle::OnIsInClaimingSquadChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetVehicle.OnIsInClaimingSquadChanged");

	USQMapWidgetVehicle_OnIsInClaimingSquadChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetVehicle.OnHoldsSquadLeaderChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetVehicle::OnHoldsSquadLeaderChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetVehicle.OnHoldsSquadLeaderChanged");

	USQMapWidgetVehicle_OnHoldsSquadLeaderChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetVehicle.OnHoldsOccupantChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetVehicle::OnHoldsOccupantChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetVehicle.OnHoldsOccupantChanged");

	USQMapWidgetVehicle_OnHoldsOccupantChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetVehicle.OnHoldsCommanderChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetVehicle::OnHoldsCommanderChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetVehicle.OnHoldsCommanderChanged");

	USQMapWidgetVehicle_OnHoldsCommanderChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetVehicle.OnClaimingSquadIDChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetVehicle::OnClaimingSquadIDChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetVehicle.OnClaimingSquadIDChanged");

	USQMapWidgetVehicle_OnClaimingSquadIDChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetVehicle.IsSelfInVehicle
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQMapWidgetVehicle::IsSelfInVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetVehicle.IsSelfInVehicle");

	USQMapWidgetVehicle_IsSelfInVehicle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQMapWidgetEmplacement.OnTeamIDChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetEmplacement::OnTeamIDChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetEmplacement.OnTeamIDChanged");

	USQMapWidgetEmplacement_OnTeamIDChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetDeployableExplosive.OnExplosiveTypeChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetDeployableExplosive::OnExplosiveTypeChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetDeployableExplosive.OnExplosiveTypeChanged");

	USQMapWidgetDeployableExplosive_OnExplosiveTypeChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetCaptureZone.OnUncappableChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetCaptureZone::OnUncappableChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetCaptureZone.OnUncappableChanged");

	USQMapWidgetCaptureZone_OnUncappableChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetCaptureZone.OnOwningTeamChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetCaptureZone::OnOwningTeamChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetCaptureZone.OnOwningTeamChanged");

	USQMapWidgetCaptureZone_OnOwningTeamChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetCaptureZone.OnFlagTextureChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetCaptureZone::OnFlagTextureChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetCaptureZone.OnFlagTextureChanged");

	USQMapWidgetCaptureZone_OnFlagTextureChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetCaptureZone.OnFlagNameChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetCaptureZone::OnFlagNameChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetCaptureZone.OnFlagNameChanged");

	USQMapWidgetCaptureZone_OnFlagNameChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetCaptureZone.OnContestingChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetCaptureZone::OnContestingChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetCaptureZone.OnContestingChanged");

	USQMapWidgetCaptureZone_OnContestingChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetCaptureZone.OnCapturingTeamChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetCaptureZone::OnCapturingTeamChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetCaptureZone.OnCapturingTeamChanged");

	USQMapWidgetCaptureZone_OnCapturingTeamChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetCaptureZone.OnCapturePercentChanged
// (Event, Protected, BlueprintEvent)
void USQMapWidgetCaptureZone::OnCapturePercentChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetCaptureZone.OnCapturePercentChanged");

	USQMapWidgetCaptureZone_OnCapturePercentChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetBase.SetMapBody
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPanelWidget*            NewMapBody                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQMapWidgetBase::SetMapBody(class UPanelWidget* NewMapBody)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetBase.SetMapBody");

	USQMapWidgetBase_SetMapBody_Params params;
	params.NewMapBody = NewMapBody;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapWidgetBase.RemoveMarkerWidget
// (Event, Public, BlueprintEvent)
// Parameters:
// class USQMapMarkerBase*        Target                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQMapWidgetBase::RemoveMarkerWidget(class USQMapMarkerBase* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetBase.RemoveMarkerWidget");

	USQMapWidgetBase_RemoveMarkerWidget_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQMapWidgetBase.GetWorldBounds
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FBox2D                  ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
struct FBox2D USQMapWidgetBase::GetWorldBounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetBase.GetWorldBounds");

	USQMapWidgetBase_GetWorldBounds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQMapWidgetBase.GetNumGridLines
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D               ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector2D USQMapWidgetBase::GetNumGridLines()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetBase.GetNumGridLines");

	USQMapWidgetBase_GetNumGridLines_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQMapWidgetBase.GetMapBoundsScale
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D               ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector2D USQMapWidgetBase::GetMapBoundsScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetBase.GetMapBoundsScale");

	USQMapWidgetBase_GetMapBoundsScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQMapWidgetBase.GetMapBody
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UPanelWidget*            ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UPanelWidget* USQMapWidgetBase::GetMapBody()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetBase.GetMapBody");

	USQMapWidgetBase_GetMapBody_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQMapWidgetBase.CreateMarkerWidget
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FSQMapMarkerVisualData  MapMarkerVisualData            (ConstParm, Parm, NoDestructor, NativeAccessSpecifierPublic)
// class USQMapMarkerBase*        ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USQMapMarkerBase* USQMapWidgetBase::CreateMarkerWidget(const struct FSQMapMarkerVisualData& MapMarkerVisualData)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapWidgetBase.CreateMarkerWidget");

	USQMapWidgetBase_CreateMarkerWidget_Params params;
	params.MapMarkerVisualData = MapMarkerVisualData;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQMapIconWidget.ShouldMarkerUpdate
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQMapIconWidget::ShouldMarkerUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapIconWidget.ShouldMarkerUpdate");

	USQMapIconWidget_ShouldMarkerUpdate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQMapIconWidget.IsMarkerVisible
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQMapIconWidget::IsMarkerVisible()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapIconWidget.IsMarkerVisible");

	USQMapIconWidget_IsMarkerVisible_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQMapIconWidget.GetSquadColor
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FLinearColor USQMapIconWidget::GetSquadColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapIconWidget.GetSquadColor");

	USQMapIconWidget_GetSquadColor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQMapIconWidget.GetNeutralColor
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FLinearColor USQMapIconWidget::GetNeutralColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapIconWidget.GetNeutralColor");

	USQMapIconWidget_GetNeutralColor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQMapIconWidget.GetFriendlyColor
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FLinearColor USQMapIconWidget::GetFriendlyColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapIconWidget.GetFriendlyColor");

	USQMapIconWidget_GetFriendlyColor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQMapIconWidget.GetEnemyColor
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FLinearColor USQMapIconWidget::GetEnemyColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapIconWidget.GetEnemyColor");

	USQMapIconWidget_GetEnemyColor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQMapPawnIconWidget.UpdateTeam
// (Native, Public, BlueprintCallable)
void USQMapPawnIconWidget::UpdateTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapPawnIconWidget.UpdateTeam");

	USQMapPawnIconWidget_UpdateTeam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapPawnIconWidget.UpdateIsSl
// (Native, Public, BlueprintCallable)
void USQMapPawnIconWidget::UpdateIsSl()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapPawnIconWidget.UpdateIsSl");

	USQMapPawnIconWidget_UpdateIsSl_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapPawnIconWidget.UpdateIsSelf
// (Native, Public, BlueprintCallable)
void USQMapPawnIconWidget::UpdateIsSelf()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapPawnIconWidget.UpdateIsSelf");

	USQMapPawnIconWidget_UpdateIsSelf_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapPawnIconWidget.UpdateIsInSameTeam
// (Native, Public, BlueprintCallable)
void USQMapPawnIconWidget::UpdateIsInSameTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapPawnIconWidget.UpdateIsInSameTeam");

	USQMapPawnIconWidget_UpdateIsInSameTeam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapPawnIconWidget.UpdateIsInSameSquad
// (Native, Public, BlueprintCallable)
void USQMapPawnIconWidget::UpdateIsInSameSquad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapPawnIconWidget.UpdateIsInSameSquad");

	USQMapPawnIconWidget_UpdateIsInSameSquad_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapPawnIconWidget.GetWidgetPlayerState
// (Native, Public, BlueprintCallable)
// Parameters:
// class ASQPlayerState*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASQPlayerState* USQMapPawnIconWidget::GetWidgetPlayerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapPawnIconWidget.GetWidgetPlayerState");

	USQMapPawnIconWidget_GetWidgetPlayerState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQMapSoldierIconWidget.UpdateIsWithinMedicRange
// (Final, Native, Public, BlueprintCallable)
void USQMapSoldierIconWidget::UpdateIsWithinMedicRange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapSoldierIconWidget.UpdateIsWithinMedicRange");

	USQMapSoldierIconWidget_UpdateIsWithinMedicRange_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapSoldierIconWidget.UpdateIsSelfMedic
// (Final, Native, Public, BlueprintCallable)
void USQMapSoldierIconWidget::UpdateIsSelfMedic()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapSoldierIconWidget.UpdateIsSelfMedic");

	USQMapSoldierIconWidget_UpdateIsSelfMedic_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapSoldierIconWidget.UpdateIsMedic
// (Final, Native, Public, BlueprintCallable)
void USQMapSoldierIconWidget::UpdateIsMedic()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapSoldierIconWidget.UpdateIsMedic");

	USQMapSoldierIconWidget_UpdateIsMedic_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapSoldierIconWidget.UpdateIsInVehicle
// (Final, Native, Public, BlueprintCallable)
void USQMapSoldierIconWidget::UpdateIsInVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapSoldierIconWidget.UpdateIsInVehicle");

	USQMapSoldierIconWidget_UpdateIsInVehicle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapSoldierIconWidget.UpdateIsBleeding
// (Final, Native, Public, BlueprintCallable)
void USQMapSoldierIconWidget::UpdateIsBleeding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapSoldierIconWidget.UpdateIsBleeding");

	USQMapSoldierIconWidget_UpdateIsBleeding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapSoldierIconWidget.UpdateIsAlive
// (Final, Native, Public, BlueprintCallable)
void USQMapSoldierIconWidget::UpdateIsAlive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapSoldierIconWidget.UpdateIsAlive");

	USQMapSoldierIconWidget_UpdateIsAlive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMap.ZoomSwitch
// (Native, Public, BlueprintCallable)
void USQMap::ZoomSwitch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMap.ZoomSwitch");

	USQMap_ZoomSwitch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMap.UpdateTickZoom
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D               MapCoords                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQMap::UpdateTickZoom(float DeltaTime, struct FVector2D* MapCoords)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMap.UpdateTickZoom");

	USQMap_UpdateTickZoom_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (MapCoords != nullptr)
		*MapCoords = params.MapCoords;

}


// Function Squad.SQMap.TranslateWorldToMapZoom
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 InWorldCoords                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           OutbIsInRange                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector2D USQMap::TranslateWorldToMapZoom(const struct FVector& InWorldCoords, bool* OutbIsInRange)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMap.TranslateWorldToMapZoom");

	USQMap_TranslateWorldToMapZoom_Params params;
	params.InWorldCoords = InWorldCoords;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutbIsInRange != nullptr)
		*OutbIsInRange = params.OutbIsInRange;


	return params.ReturnValue;
}


// Function Squad.SQMap.TranslateWorldToMapAnchorsDirect
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 InWorldCoords                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector2D USQMap::TranslateWorldToMapAnchorsDirect(const struct FVector& InWorldCoords)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMap.TranslateWorldToMapAnchorsDirect");

	USQMap_TranslateWorldToMapAnchorsDirect_Params params;
	params.InWorldCoords = InWorldCoords;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQMap.TranslateMapToWorldRayTrace
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D               InCoords                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector USQMap::TranslateMapToWorldRayTrace(const struct FVector2D& InCoords)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMap.TranslateMapToWorldRayTrace");

	USQMap_TranslateMapToWorldRayTrace_Params params;
	params.InCoords = InCoords;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQMap.TranslateMapToWorld
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D               InCoords                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector USQMap::TranslateMapToWorld(const struct FVector2D& InCoords)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMap.TranslateMapToWorld");

	USQMap_TranslateMapToWorld_Params params;
	params.InCoords = InCoords;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQMap.TranslateMapPathBorderClamp
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D               InCoords                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           OutbIsClamped                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector2D USQMap::TranslateMapPathBorderClamp(const struct FVector2D& InCoords, bool* OutbIsClamped)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMap.TranslateMapPathBorderClamp");

	USQMap_TranslateMapPathBorderClamp_Params params;
	params.InCoords = InCoords;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutbIsClamped != nullptr)
		*OutbIsClamped = params.OutbIsClamped;


	return params.ReturnValue;
}


// Function Squad.SQMap.TranslateMapCoordsIsInRange
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D               InCoords                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           OutbIsInRange                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector2D USQMap::TranslateMapCoordsIsInRange(const struct FVector2D& InCoords, bool* OutbIsInRange)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMap.TranslateMapCoordsIsInRange");

	USQMap_TranslateMapCoordsIsInRange_Params params;
	params.InCoords = InCoords;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutbIsInRange != nullptr)
		*OutbIsInRange = params.OutbIsInRange;


	return params.ReturnValue;
}


// Function Squad.SQMap.TranslateMapCoords
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D               InCoords                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector2D USQMap::TranslateMapCoords(const struct FVector2D& InCoords)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMap.TranslateMapCoords");

	USQMap_TranslateMapCoords_Params params;
	params.InCoords = InCoords;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQMap.TranslateInverseMapCoords
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D               InCoords                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector2D USQMap::TranslateInverseMapCoords(const struct FVector2D& InCoords)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMap.TranslateInverseMapCoords");

	USQMap_TranslateInverseMapCoords_Params params;
	params.InCoords = InCoords;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQMap.SetWorldCoords
// (Native, Public, BlueprintCallable)
void USQMap::SetWorldCoords()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMap.SetWorldCoords");

	USQMap_SetWorldCoords_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMap.IsSquadLeader
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQMap::IsSquadLeader()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMap.IsSquadLeader");

	USQMap_IsSquadLeader_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQMap.IsInCameraMan
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASQPlayerController*     SQPlayerController             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQMap::IsInCameraMan(class ASQPlayerController* SQPlayerController)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMap.IsInCameraMan");

	USQMap_IsInCameraMan_Params params;
	params.SQPlayerController = SQPlayerController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQMap.IsCursorOverMapPos
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           OutbIsOverMap                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector2D USQMap::IsCursorOverMapPos(bool* OutbIsOverMap)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMap.IsCursorOverMapPos");

	USQMap_IsCursorOverMapPos_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutbIsOverMap != nullptr)
		*OutbIsOverMap = params.OutbIsOverMap;


	return params.ReturnValue;
}


// Function Squad.SQMap.GetMapDisplayName
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FText USQMap::GetMapDisplayName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMap.GetMapDisplayName");

	USQMap_GetMapDisplayName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQMap.GetMajorGridSpacingInCM
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQMap::GetMajorGridSpacingInCM()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMap.GetMajorGridSpacingInCM");

	USQMap_GetMajorGridSpacingInCM_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQMap.GetCursorPos
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector2D USQMap::GetCursorPos()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMap.GetCursorPos");

	USQMap_GetCursorPos_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQMap.GetCursorNormalizedPos
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector2D USQMap::GetCursorNormalizedPos()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMap.GetCursorNormalizedPos");

	USQMap_GetCursorNormalizedPos_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQMap.GetCurrentTeam
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int USQMap::GetCurrentTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMap.GetCurrentTeam");

	USQMap_GetCurrentTeam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQMap.CalculatePathDistanceAndAngle
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D               PointStart                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D               PointEnd                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          distance                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Angle                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQMap::CalculatePathDistanceAndAngle(const struct FVector2D& PointStart, const struct FVector2D& PointEnd, float* distance, float* Angle)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMap.CalculatePathDistanceAndAngle");

	USQMap_CalculatePathDistanceAndAngle_Params params;
	params.PointStart = PointStart;
	params.PointEnd = PointEnd;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (distance != nullptr)
		*distance = params.distance;
	if (Angle != nullptr)
		*Angle = params.Angle;

}


// Function Squad.SQMapMK2.UpdatePosition
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D               NewMapCoord                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQMapMK2::UpdatePosition(const struct FVector2D& NewMapCoord)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapMK2.UpdatePosition");

	USQMapMK2_UpdatePosition_Params params;
	params.NewMapCoord = NewMapCoord;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapMK2.UpdateDrawOffsets
// (Native, Public, BlueprintCallable)
void USQMapMK2::UpdateDrawOffsets()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapMK2.UpdateDrawOffsets");

	USQMapMK2_UpdateDrawOffsets_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapMK2.MapFollowPlayer
// (Native, Public, BlueprintCallable)
void USQMapMK2::MapFollowPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapMK2.MapFollowPlayer");

	USQMapMK2_MapFollowPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapMK2.MapCalculateOffsets
// (Native, Public, BlueprintCallable)
void USQMapMK2::MapCalculateOffsets()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapMK2.MapCalculateOffsets");

	USQMapMK2_MapCalculateOffsets_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapMarkerManagerComponent.SetRootWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USQMapWidgetBase*        NewRootWidget                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQMapMarkerManagerComponent::SetRootWidget(class USQMapWidgetBase* NewRootWidget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapMarkerManagerComponent.SetRootWidget");

	USQMapMarkerManagerComponent_SetRootWidget_Params params;
	params.NewRootWidget = NewRootWidget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapMarkerManagerComponent.SetRootHUD
// (Final, Native, Public)
// Parameters:
// class ASQHUD*                  NewRootHUD                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQMapMarkerManagerComponent::SetRootHUD(class ASQHUD* NewRootHUD)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapMarkerManagerComponent.SetRootHUD");

	USQMapMarkerManagerComponent_SetRootHUD_Params params;
	params.NewRootHUD = NewRootHUD;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapMarkerManagerComponent.SetMarkerWidgetScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          ScaleValue                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQMapMarkerManagerComponent::SetMarkerWidgetScale(float ScaleValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapMarkerManagerComponent.SetMarkerWidgetScale");

	USQMapMarkerManagerComponent_SetMarkerWidgetScale_Params params;
	params.ScaleValue = ScaleValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapMarkerManagerComponent.RemoveMapMarker
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// unsigned char                  ID                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bHasTimedOut                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQMapMarkerManagerComponent::RemoveMapMarker(unsigned char ID, bool bHasTimedOut)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapMarkerManagerComponent.RemoveMapMarker");

	USQMapMarkerManagerComponent_RemoveMapMarker_Params params;
	params.ID = ID;
	params.bHasTimedOut = bHasTimedOut;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapMarkerManagerComponent.OnSquadLeaderChangedEvent
// (Final, Native, Public)
// Parameters:
// class ASQSquad*                Squad                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQPlayerController*     Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQMapMarkerManagerComponent::OnSquadLeaderChangedEvent(class ASQSquad* Squad, class ASQPlayerController* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapMarkerManagerComponent.OnSquadLeaderChangedEvent");

	USQMapMarkerManagerComponent_OnSquadLeaderChangedEvent_Params params;
	params.Squad = Squad;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapMarkerManagerComponent.OnSquadDeletedEvent
// (Final, Native, Public)
// Parameters:
// int                            OldSquadId                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            TeamId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQMapMarkerManagerComponent::OnSquadDeletedEvent(int OldSquadId, int TeamId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapMarkerManagerComponent.OnSquadDeletedEvent");

	USQMapMarkerManagerComponent_OnSquadDeletedEvent_Params params;
	params.OldSquadId = OldSquadId;
	params.TeamId = TeamId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapMarkerManagerComponent.OnMarkerReceived
// (Final, Native, Public, HasOutParms)
// Parameters:
// TArray<int>                    MapMarkerModifiedIndices       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
void USQMapMarkerManagerComponent::OnMarkerReceived(TArray<int> MapMarkerModifiedIndices)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapMarkerManagerComponent.OnMarkerReceived");

	USQMapMarkerManagerComponent_OnMarkerReceived_Params params;
	params.MapMarkerModifiedIndices = MapMarkerModifiedIndices;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapMarkerManagerComponent.OnMarkerDeleted
// (Final, Native, Public, HasOutParms)
// Parameters:
// TArray<int>                    MapMarkerModifiedIndices       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
void USQMapMarkerManagerComponent::OnMarkerDeleted(TArray<int> MapMarkerModifiedIndices)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapMarkerManagerComponent.OnMarkerDeleted");

	USQMapMarkerManagerComponent_OnMarkerDeleted_Params params;
	params.MapMarkerModifiedIndices = MapMarkerModifiedIndices;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapMarkerManagerComponent.OnFireteamLeaderChangedEvent
// (Final, Native, Public)
// Parameters:
// class ASQSquad*                Squad                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            FireTeamId                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQMapMarkerManagerComponent::OnFireteamLeaderChangedEvent(class ASQSquad* Squad, int FireTeamId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapMarkerManagerComponent.OnFireteamLeaderChangedEvent");

	USQMapMarkerManagerComponent_OnFireteamLeaderChangedEvent_Params params;
	params.Squad = Squad;
	params.FireTeamId = FireTeamId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapMarkerManagerComponent.OnFireteamDeletedEvent
// (Final, Native, Public)
// Parameters:
// class ASQSquad*                Squad                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            FireTeamId                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQMapMarkerManagerComponent::OnFireteamDeletedEvent(class ASQSquad* Squad, int FireTeamId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapMarkerManagerComponent.OnFireteamDeletedEvent");

	USQMapMarkerManagerComponent_OnFireteamDeletedEvent_Params params;
	params.Squad = Squad;
	params.FireTeamId = FireTeamId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapMarkerManagerComponent.OnCommanderPromotedEvent
// (Final, Native, Public)
// Parameters:
// class ASQPlayerState*          NewCommander                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQMapMarkerManagerComponent::OnCommanderPromotedEvent(class ASQPlayerState* NewCommander)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapMarkerManagerComponent.OnCommanderPromotedEvent");

	USQMapMarkerManagerComponent_OnCommanderPromotedEvent_Params params;
	params.NewCommander = NewCommander;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapMarkerManagerComponent.OnCommanderDemotedEvent
// (Final, Native, Public)
// Parameters:
// class ASQPlayerState*          OldCommander                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQMapMarkerManagerComponent::OnCommanderDemotedEvent(class ASQPlayerState* OldCommander)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapMarkerManagerComponent.OnCommanderDemotedEvent");

	USQMapMarkerManagerComponent_OnCommanderDemotedEvent_Params params;
	params.OldCommander = OldCommander;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapMarkerManagerComponent.InitializeRelevantMarkers
// (Final, Native, Public, HasOutParms)
// Parameters:
// TArray<int>                    MapMarkerModifiedIndices       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
void USQMapMarkerManagerComponent::InitializeRelevantMarkers(TArray<int> MapMarkerModifiedIndices)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapMarkerManagerComponent.InitializeRelevantMarkers");

	USQMapMarkerManagerComponent_InitializeRelevantMarkers_Params params;
	params.MapMarkerModifiedIndices = MapMarkerModifiedIndices;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapMarkerManagerComponent.DeleteRelevantMarkers
// (Final, Native, Public, HasOutParms)
// Parameters:
// TArray<int>                    MapMarkerModifiedIndices       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
void USQMapMarkerManagerComponent::DeleteRelevantMarkers(TArray<int> MapMarkerModifiedIndices)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapMarkerManagerComponent.DeleteRelevantMarkers");

	USQMapMarkerManagerComponent_DeleteRelevantMarkers_Params params;
	params.MapMarkerModifiedIndices = MapMarkerModifiedIndices;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapMarkerInputComponent.ServerRequestRemoveMapMarker
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// unsigned char                  ID                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQMapMarkerInputComponent::ServerRequestRemoveMapMarker(unsigned char ID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapMarkerInputComponent.ServerRequestRemoveMapMarker");

	USQMapMarkerInputComponent_ServerRequestRemoveMapMarker_Params params;
	params.ID = ID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapMarkerInputComponent.ServerRequestMapMarker
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// struct FSQMapMarkerGameplayData MarkerGameplayData             (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
void USQMapMarkerInputComponent::ServerRequestMapMarker(const struct FSQMapMarkerGameplayData& MarkerGameplayData)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapMarkerInputComponent.ServerRequestMapMarker");

	USQMapMarkerInputComponent_ServerRequestMapMarker_Params params;
	params.MarkerGameplayData = MarkerGameplayData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapMarkerInputComponent.RefreshMarkerWidgets
// (Final, Native, Public, BlueprintCallable)
void USQMapMarkerInputComponent::RefreshMarkerWidgets()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapMarkerInputComponent.RefreshMarkerWidgets");

	USQMapMarkerInputComponent_RefreshMarkerWidgets_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapMarkerBase.SetupMapMarker
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCanvasPanelSlot*        PanelSlot                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQMapMarkerBase::SetupMapMarker(class UCanvasPanelSlot* PanelSlot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapMarkerBase.SetupMapMarker");

	USQMapMarkerBase_SetupMapMarker_Params params;
	params.PanelSlot = PanelSlot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapMarkerBase.OnScaleChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          ScaleValue                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQMapMarkerBase::OnScaleChanged(float ScaleValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapMarkerBase.OnScaleChanged");

	USQMapMarkerBase_OnScaleChanged_Params params;
	params.ScaleValue = ScaleValue;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapMarkerBase.OnHasFadedChanged
// (Event, Public, BlueprintEvent)
void USQMapMarkerBase::OnHasFadedChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapMarkerBase.OnHasFadedChanged");

	USQMapMarkerBase_OnHasFadedChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapMarkerBase.GetMapMarkerData
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FSQMapMarkerVisualData  ReturnValue                    (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
struct FSQMapMarkerVisualData USQMapMarkerBase::GetMapMarkerData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapMarkerBase.GetMapMarkerData");

	USQMapMarkerBase_GetMapMarkerData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQMapMarker.SetSquad
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int                            Squad                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQMapMarker::SetSquad(int Squad)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapMarker.SetSquad");

	ASQMapMarker_SetSquad_Params params;
	params.Squad = Squad;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapMarker.SetMarkerVisibleTo
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESQMapMarkerVisibleTo          VisibleTo                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQMapMarker::SetMarkerVisibleTo(ESQMapMarkerVisibleTo VisibleTo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapMarker.SetMarkerVisibleTo");

	ASQMapMarker_SetMarkerVisibleTo_Params params;
	params.VisibleTo = VisibleTo;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapMarker.SetMarkerType
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESQMapMarkerType               MarkerType                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQMapMarker::SetMarkerType(ESQMapMarkerType MarkerType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapMarker.SetMarkerType");

	ASQMapMarker_SetMarkerType_Params params;
	params.MarkerType = MarkerType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapMarker.SetFireteamId
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            FireTeamId                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQMapMarker::SetFireteamId(int FireTeamId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapMarker.SetFireteamId");

	ASQMapMarker_SetFireteamId_Params params;
	params.FireTeamId = FireTeamId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapMarker.OnRep_Squad
// (Native, Public)
void ASQMapMarker::OnRep_Squad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapMarker.OnRep_Squad");

	ASQMapMarker_OnRep_Squad_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapMarker.GetSquad
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int ASQMapMarker::GetSquad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapMarker.GetSquad");

	ASQMapMarker_GetSquad_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQMapMarker.GetMarkerType
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESQMapMarkerType               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
ESQMapMarkerType ASQMapMarker::GetMarkerType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapMarker.GetMarkerType");

	ASQMapMarker_GetMarkerType_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQMapMarker.GetFireteamId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int ASQMapMarker::GetFireteamId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapMarker.GetFireteamId");

	ASQMapMarker_GetFireteamId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQMapGrid.InitWidget
// (Native, Public, BlueprintCallable)
void USQMapGrid::InitWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapGrid.InitWidget");

	USQMapGrid_InitWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMapGrid.DrawWidget
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class USQMapGrid*              MapGrid                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPaintContext           Context                        (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
void USQMapGrid::STATIC_DrawWidget(class USQMapGrid* MapGrid, struct FPaintContext* Context)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapGrid.DrawWidget");

	USQMapGrid_DrawWidget_Params params;
	params.MapGrid = MapGrid;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Context != nullptr)
		*Context = params.Context;

}


// Function Squad.SQMapGrid.DrawLegendLine
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class USQMapGrid*              MapGrid                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPaintContext           Context                        (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector2D               StepSize                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor            Color                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Width                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   LegendText                     (ConstParm, Parm, NativeAccessSpecifierPublic)
// float                          YOffset                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQMapGrid::STATIC_DrawLegendLine(class USQMapGrid* MapGrid, struct FPaintContext* Context, const struct FVector2D& StepSize, const struct FLinearColor& Color, float Width, const struct FText& LegendText, float YOffset)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapGrid.DrawLegendLine");

	USQMapGrid_DrawLegendLine_Params params;
	params.MapGrid = MapGrid;
	params.StepSize = StepSize;
	params.Color = Color;
	params.Width = Width;
	params.LegendText = LegendText;
	params.YOffset = YOffset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Context != nullptr)
		*Context = params.Context;

}


// Function Squad.SQMapGrid.DrawGridMarkers
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class USQMapGrid*              MapGrid                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPaintContext           Context                        (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector2D               Offset                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D               StepSize                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D               GridLinesNeeded                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor            Color                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQMapGrid::STATIC_DrawGridMarkers(class USQMapGrid* MapGrid, struct FPaintContext* Context, const struct FVector2D& Offset, const struct FVector2D& StepSize, const struct FVector2D& GridLinesNeeded, const struct FLinearColor& Color)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapGrid.DrawGridMarkers");

	USQMapGrid_DrawGridMarkers_Params params;
	params.MapGrid = MapGrid;
	params.Offset = Offset;
	params.StepSize = StepSize;
	params.GridLinesNeeded = GridLinesNeeded;
	params.Color = Color;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Context != nullptr)
		*Context = params.Context;

}


// Function Squad.SQMapGrid.DrawGrid
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class USQMapGrid*              MapGrid                        (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPaintContext           Context                        (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector2D               Offset                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D               StepSize                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D               GridLinesNeeded                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            SkipNumber                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor            Color                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Width                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQMapGrid::STATIC_DrawGrid(class USQMapGrid* MapGrid, struct FPaintContext* Context, const struct FVector2D& Offset, const struct FVector2D& StepSize, const struct FVector2D& GridLinesNeeded, int SkipNumber, const struct FLinearColor& Color, float Width)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapGrid.DrawGrid");

	USQMapGrid_DrawGrid_Params params;
	params.MapGrid = MapGrid;
	params.Offset = Offset;
	params.StepSize = StepSize;
	params.GridLinesNeeded = GridLinesNeeded;
	params.SkipNumber = SkipNumber;
	params.Color = Color;
	params.Width = Width;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Context != nullptr)
		*Context = params.Context;

}


// Function Squad.SQMapConversions.WorldToMapVector
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector2D               OutMapVector                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 WorldVectorZeroBased           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBox2D                  WorldBoundsZeroBased           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector2D               MapBoundsScale                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQMapConversions::STATIC_WorldToMapVector(struct FVector2D* OutMapVector, const struct FVector& WorldVectorZeroBased, const struct FBox2D& WorldBoundsZeroBased, const struct FVector2D& MapBoundsScale)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapConversions.WorldToMapVector");

	USQMapConversions_WorldToMapVector_Params params;
	params.WorldVectorZeroBased = WorldVectorZeroBased;
	params.WorldBoundsZeroBased = WorldBoundsZeroBased;
	params.MapBoundsScale = MapBoundsScale;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutMapVector != nullptr)
		*OutMapVector = params.OutMapVector;


	return params.ReturnValue;
}


// Function Squad.SQMapConversions.WorldToMapLocation
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector2D               OutMapLocation                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 WorldLocationZeroBased         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBox2D                  WorldBoundsZeroBased           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector2D               MapBoundsScale                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQMapConversions::STATIC_WorldToMapLocation(struct FVector2D* OutMapLocation, const struct FVector& WorldLocationZeroBased, const struct FBox2D& WorldBoundsZeroBased, const struct FVector2D& MapBoundsScale)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapConversions.WorldToMapLocation");

	USQMapConversions_WorldToMapLocation_Params params;
	params.WorldLocationZeroBased = WorldLocationZeroBased;
	params.WorldBoundsZeroBased = WorldBoundsZeroBased;
	params.MapBoundsScale = MapBoundsScale;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutMapLocation != nullptr)
		*OutMapLocation = params.OutMapLocation;


	return params.ReturnValue;
}


// Function Squad.SQMapConversions.WorldToMapGridLocation
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector2D               OutMapGrid                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 WorldVectorZeroBased           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBox2D                  WorldBoundsZeroBased           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector2D               MapBoundsScale                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D               NumGridLines                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQMapConversions::STATIC_WorldToMapGridLocation(struct FVector2D* OutMapGrid, const struct FVector& WorldVectorZeroBased, const struct FBox2D& WorldBoundsZeroBased, const struct FVector2D& MapBoundsScale, const struct FVector2D& NumGridLines)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapConversions.WorldToMapGridLocation");

	USQMapConversions_WorldToMapGridLocation_Params params;
	params.WorldVectorZeroBased = WorldVectorZeroBased;
	params.WorldBoundsZeroBased = WorldBoundsZeroBased;
	params.MapBoundsScale = MapBoundsScale;
	params.NumGridLines = NumGridLines;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutMapGrid != nullptr)
		*OutMapGrid = params.OutMapGrid;


	return params.ReturnValue;
}


// Function Squad.SQMapConversions.ScreenLocationToMapLocation
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector2D               OutMapLocation                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D               ScreenLocation                 (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPanelWidget*            MapBody                        (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQMapConversions::STATIC_ScreenLocationToMapLocation(struct FVector2D* OutMapLocation, const struct FVector2D& ScreenLocation, class UPanelWidget* MapBody)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapConversions.ScreenLocationToMapLocation");

	USQMapConversions_ScreenLocationToMapLocation_Params params;
	params.ScreenLocation = ScreenLocation;
	params.MapBody = MapBody;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutMapLocation != nullptr)
		*OutMapLocation = params.OutMapLocation;


	return params.ReturnValue;
}


// Function Squad.SQMapConversions.MapToMapGridLocation
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector2D               OutMapGrid                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D               MapLocation                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D               NumGridLines                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQMapConversions::STATIC_MapToMapGridLocation(struct FVector2D* OutMapGrid, const struct FVector2D& MapLocation, const struct FVector2D& NumGridLines)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapConversions.MapToMapGridLocation");

	USQMapConversions_MapToMapGridLocation_Params params;
	params.MapLocation = MapLocation;
	params.NumGridLines = NumGridLines;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutMapGrid != nullptr)
		*OutMapGrid = params.OutMapGrid;


	return params.ReturnValue;
}


// Function Squad.SQMapConversions.MapLocationToScreenLocation
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector2D               OutScreenLocation              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D               MapLocation                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPanelWidget*            MapBody                        (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQMapConversions::STATIC_MapLocationToScreenLocation(struct FVector2D* OutScreenLocation, const struct FVector2D& MapLocation, class UPanelWidget* MapBody)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapConversions.MapLocationToScreenLocation");

	USQMapConversions_MapLocationToScreenLocation_Params params;
	params.MapLocation = MapLocation;
	params.MapBody = MapBody;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutScreenLocation != nullptr)
		*OutScreenLocation = params.OutScreenLocation;


	return params.ReturnValue;
}


// Function Squad.SQMapConversions.MapLocationToGridCoordinateString
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector2D               MapLocation                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D               NumGridLines                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString USQMapConversions::STATIC_MapLocationToGridCoordinateString(const struct FVector2D& MapLocation, const struct FVector2D& NumGridLines)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapConversions.MapLocationToGridCoordinateString");

	USQMapConversions_MapLocationToGridCoordinateString_Params params;
	params.MapLocation = MapLocation;
	params.NumGridLines = NumGridLines;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBoundary.UnregisterListener
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USQBoundaryListener*     Listener                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQBoundary::UnregisterListener(class USQBoundaryListener* Listener)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBoundary.UnregisterListener");

	ASQBoundary_UnregisterListener_Params params;
	params.Listener = Listener;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBoundary.RegisterListener
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USQBoundaryListener*     Listener                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bForce                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQBoundary::RegisterListener(class USQBoundaryListener* Listener, bool bForce)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBoundary.RegisterListener");

	ASQBoundary_RegisterListener_Params params;
	params.Listener = Listener;
	params.bForce = bForce;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBoundary.OnListenerExitBoundary
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class USQBoundaryListener*     Listener                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQBoundary::OnListenerExitBoundary(class USQBoundaryListener* Listener)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBoundary.OnListenerExitBoundary");

	ASQBoundary_OnListenerExitBoundary_Params params;
	params.Listener = Listener;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQBoundary.OnListenerEnterBoundary
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class USQBoundaryListener*     Listener                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQBoundary::OnListenerEnterBoundary(class USQBoundaryListener* Listener)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBoundary.OnListenerEnterBoundary");

	ASQBoundary_OnListenerEnterBoundary_Params params;
	params.Listener = Listener;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQBoundary.IsInside
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQBoundary::IsInside(const struct FVector& Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBoundary.IsInside");

	ASQBoundary_IsInside_Params params;
	params.Location = Location;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBoundary.GenerateBoundaryMask
// (Final, Native, Public)
void ASQBoundary::GenerateBoundaryMask()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBoundary.GenerateBoundaryMask");

	ASQBoundary_GenerateBoundaryMask_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQBoundary.FindListenerData
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class USQBoundaryListener*     Listener                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bOutFound                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSQBoundaryListenerData ReturnValue                    (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
struct FSQBoundaryListenerData ASQBoundary::FindListenerData(class USQBoundaryListener* Listener, bool* bOutFound)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBoundary.FindListenerData");

	ASQBoundary_FindListenerData_Params params;
	params.Listener = Listener;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (bOutFound != nullptr)
		*bOutFound = params.bOutFound;


	return params.ReturnValue;
}


// Function Squad.SQMapBoundary.FindKillTime
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UClass*                  Class                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ASQMapBoundary::FindKillTime(class UClass* Class)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapBoundary.FindKillTime");

	ASQMapBoundary_FindKillTime_Params params;
	params.Class = Class;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQMapBoundary.CalcKillTimestamp
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UClass*                  Class                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ASQMapBoundary::CalcKillTimestamp(class UClass* Class)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMapBoundary.CalcKillTimestamp");

	ASQMapBoundary_CalcKillTimestamp_Params params;
	params.Class = Class;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQMagazineWidget.InitWidget
// (Native, Public, BlueprintCallable)
void USQMagazineWidget::InitWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMagazineWidget.InitWidget");

	USQMagazineWidget_InitWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQMagazineGroupWidget.InitWidget
// (Native, Public, BlueprintCallable)
void USQMagazineGroupWidget::InitWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQMagazineGroupWidget.InitWidget");

	USQMagazineGroupWidget_InitWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQLoginCallbackProxy.Login
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 InWorldContextObject           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*       InPlayerController             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 InLoginName                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 InPassword                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USQLoginCallbackProxy*   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USQLoginCallbackProxy* USQLoginCallbackProxy::STATIC_Login(class UObject* InWorldContextObject, class APlayerController* InPlayerController, const struct FString& InLoginName, const struct FString& InPassword)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQLoginCallbackProxy.Login");

	USQLoginCallbackProxy_Login_Params params;
	params.InWorldContextObject = InWorldContextObject;
	params.InPlayerController = InPlayerController;
	params.InLoginName = InLoginName;
	params.InPassword = InPassword;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQLoginCallbackProxy.GetLoginResult
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSQBlueprintLoginResult Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString USQLoginCallbackProxy::STATIC_GetLoginResult(const struct FSQBlueprintLoginResult& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQLoginCallbackProxy.GetLoginResult");

	USQLoginCallbackProxy_GetLoginResult_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQLockButtonWidget.OnPressed
// (Final, Native, Protected, BlueprintCallable)
void USQLockButtonWidget::OnPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQLockButtonWidget.OnPressed");

	USQLockButtonWidget_OnPressed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQLicensedServerManager.IsServerPromoted
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQLicensedServerManager::IsServerPromoted(const struct FBlueprintSessionResult& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQLicensedServerManager.IsServerPromoted");

	USQLicensedServerManager_IsServerPromoted_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQLastingEffect.OnTriggerLastingEffectTimerExpired
// (Native, Event, Public, BlueprintEvent)
void ASQLastingEffect::OnTriggerLastingEffectTimerExpired()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQLastingEffect.OnTriggerLastingEffectTimerExpired");

	ASQLastingEffect_OnTriggerLastingEffectTimerExpired_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQLastingEffect.OnTriggerLastingEffectEvent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
void ASQLastingEffect::OnTriggerLastingEffectEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQLastingEffect.OnTriggerLastingEffectEvent");

	ASQLastingEffect_OnTriggerLastingEffectEvent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQLastingEffect.OnDestroyedEvent
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                  DestroyedActor                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQLastingEffect::OnDestroyedEvent(class AActor* DestroyedActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQLastingEffect.OnDestroyedEvent");

	ASQLastingEffect_OnDestroyedEvent_Params params;
	params.DestroyedActor = DestroyedActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQLastingEffect.OnBeginPlayTimerExpired
// (Native, Event, Public, BlueprintEvent)
void ASQLastingEffect::OnBeginPlayTimerExpired()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQLastingEffect.OnBeginPlayTimerExpired");

	ASQLastingEffect_OnBeginPlayTimerExpired_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQLastingEffect.OnActorHitEvent
// (Native, Event, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                  SelfActor                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 NormalImpulse                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void ASQLastingEffect::OnActorHitEvent(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQLastingEffect.OnActorHitEvent");

	ASQLastingEffect_OnActorHitEvent_Params params;
	params.SelfActor = SelfActor;
	params.OtherActor = OtherActor;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQLastingEffect.Deactivate
// (Final, Native, Public, BlueprintCallable)
void ASQLastingEffect::Deactivate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQLastingEffect.Deactivate");

	ASQLastingEffect_Deactivate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQLastingEffect.Activate
// (Final, Native, Public, BlueprintCallable)
void ASQLastingEffect::Activate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQLastingEffect.Activate");

	ASQLastingEffect_Activate_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQKickBanComponent.KickPlayer
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class ASQPlayerController*     ToKickPC                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 KickReason                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQKickBanComponent::KickPlayer(class ASQPlayerController* ToKickPC, const struct FString& KickReason)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQKickBanComponent.KickPlayer");

	USQKickBanComponent_KickPlayer_Params params;
	params.ToKickPC = ToKickPC;
	params.KickReason = KickReason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQKickBanComponent.BanPlayer
// (Final, BlueprintAuthorityOnly, Native, Public, BlueprintCallable)
// Parameters:
// class ASQPlayerController*     ToBanPC                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            BanSeconds                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 BanReason                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQKickBanComponent::BanPlayer(class ASQPlayerController* ToBanPC, int BanSeconds, const struct FString& BanReason)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQKickBanComponent.BanPlayer");

	USQKickBanComponent_BanPlayer_Params params;
	params.ToBanPC = ToBanPC;
	params.BanSeconds = BanSeconds;
	params.BanReason = BanReason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQJoinSessionCallbackProxy.JoinSession
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APlayerController*       PlayerController               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBlueprintSessionResult SearchResult                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class USQJoinSessionCallbackProxy* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USQJoinSessionCallbackProxy* USQJoinSessionCallbackProxy::STATIC_JoinSession(class UObject* WorldContextObject, class APlayerController* PlayerController, const struct FBlueprintSessionResult& SearchResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQJoinSessionCallbackProxy.JoinSession");

	USQJoinSessionCallbackProxy_JoinSession_Params params;
	params.WorldContextObject = WorldContextObject;
	params.PlayerController = PlayerController;
	params.SearchResult = SearchResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQJoinSessionCallbackProxy.IsServerModded
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult SearchResult                   (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                           bIsWhitelisted                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQJoinSessionCallbackProxy::STATIC_IsServerModded(const struct FBlueprintSessionResult& SearchResult, bool* bIsWhitelisted)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQJoinSessionCallbackProxy.IsServerModded");

	USQJoinSessionCallbackProxy_IsServerModded_Params params;
	params.SearchResult = SearchResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (bIsWhitelisted != nullptr)
		*bIsWhitelisted = params.bIsWhitelisted;


	return params.ReturnValue;
}


// Function Squad.SQJoinBeaconClient.RequestClientJoin
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)
void ASQJoinBeaconClient::RequestClientJoin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQJoinBeaconClient.RequestClientJoin");

	ASQJoinBeaconClient_RequestClientJoin_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQJoinBeaconClient.LeaveQueue
// (Final, Native, Public, BlueprintCallable)
void ASQJoinBeaconClient::LeaveQueue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQJoinBeaconClient.LeaveQueue");

	ASQJoinBeaconClient_LeaveQueue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQJoinBeaconClient.InitConnection
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 ServerURL                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQJoinBeaconClient::InitConnection(const struct FString& ServerURL)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQJoinBeaconClient.InitConnection");

	ASQJoinBeaconClient_InitConnection_Params params;
	params.ServerURL = ServerURL;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQJoinBeaconClient.HostTravelRequestReconnect
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// int                            TimeLeftInMatch                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          SecondsPerRetry                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQJoinBeaconClient::HostTravelRequestReconnect(int TimeLeftInMatch, float SecondsPerRetry)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQJoinBeaconClient.HostTravelRequestReconnect");

	ASQJoinBeaconClient_HostTravelRequestReconnect_Params params;
	params.TimeLeftInMatch = TimeLeftInMatch;
	params.SecondsPerRetry = SecondsPerRetry;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQInventoryWidget.UpdateInventoryWidgets
// (Final, Native, Protected)
void USQInventoryWidget::UpdateInventoryWidgets()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQInventoryWidget.UpdateInventoryWidgets");

	USQInventoryWidget_UpdateInventoryWidgets_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQInventoryWidget.UpdateElements
// (Final, Native, Public, BlueprintCallable)
void USQInventoryWidget::UpdateElements()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQInventoryWidget.UpdateElements");

	USQInventoryWidget_UpdateElements_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQInventoryWidget.SetupInventoryWidgets
// (Native, Protected, BlueprintCallable)
void USQInventoryWidget::SetupInventoryWidgets()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQInventoryWidget.SetupInventoryWidgets");

	USQInventoryWidget_SetupInventoryWidgets_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQInventoryWidget.InitWidget
// (Native, Public, BlueprintCallable)
void USQInventoryWidget::InitWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQInventoryWidget.InitWidget");

	USQInventoryWidget_InitWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQInventoryItemWidget.UpdateState
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
void USQInventoryItemWidget::UpdateState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQInventoryItemWidget.UpdateState");

	USQInventoryItemWidget_UpdateState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQInventoryItemWidget.InitWidget
// (Native, Public, BlueprintCallable)
void USQInventoryItemWidget::InitWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQInventoryItemWidget.InitWidget");

	USQInventoryItemWidget_InitWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQInventoryGroupWidget.UpdateState
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
void USQInventoryGroupWidget::UpdateState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQInventoryGroupWidget.UpdateState");

	USQInventoryGroupWidget_UpdateState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQInventoryGroupWidget.InitWidget
// (Native, Public, BlueprintCallable)
void USQInventoryGroupWidget::InitWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQInventoryGroupWidget.InitWidget");

	USQInventoryGroupWidget_InitWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameModeRuleset.SetWinningTeamFromEnum
// (Native, Public, BlueprintCallable, Const)
// Parameters:
// ESQTeam                        Team                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameModeRuleset::SetWinningTeamFromEnum(ESQTeam Team)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameModeRuleset.SetWinningTeamFromEnum");

	ASQGameModeRuleset_SetWinningTeamFromEnum_Params params;
	params.Team = Team;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameModeRuleset.SetWinningTeam
// (Native, Public, BlueprintCallable, Const)
// Parameters:
// class ASQTeam*                 Team                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameModeRuleset::SetWinningTeam(class ASQTeam* Team)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameModeRuleset.SetWinningTeam");

	ASQGameModeRuleset_SetWinningTeam_Params params;
	params.Team = Team;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameModeRuleset.SendMessageToPlayer
// (Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class ASQPlayerController*     Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 Message                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor            Color                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          MessageLifetime                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameModeRuleset::SendMessageToPlayer(class ASQPlayerController* Player, const struct FString& Message, const struct FLinearColor& Color, float MessageLifetime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameModeRuleset.SendMessageToPlayer");

	ASQGameModeRuleset_SendMessageToPlayer_Params params;
	params.Player = Player;
	params.Message = Message;
	params.Color = Color;
	params.MessageLifetime = MessageLifetime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQObjectiveRuleset.ShowNewObjectivesFromTimer
// (Native, Protected)
void ASQObjectiveRuleset::ShowNewObjectivesFromTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQObjectiveRuleset.ShowNewObjectivesFromTimer");

	ASQObjectiveRuleset_ShowNewObjectivesFromTimer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQObjectiveRuleset.ShowNewObjectives
// (Native, Protected, BlueprintCallable)
// Parameters:
// TArray<class ASQObjective*>    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
TArray<class ASQObjective*> ASQObjectiveRuleset::ShowNewObjectives()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQObjectiveRuleset.ShowNewObjectives");

	ASQObjectiveRuleset_ShowNewObjectives_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQObjectiveRuleset.RandomlySelectUnusedObjectiveLocation
// (Native, Protected, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform              OutTransform                   (Parm, OutParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQObjectiveRuleset::RandomlySelectUnusedObjectiveLocation(struct FTransform* OutTransform)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQObjectiveRuleset.RandomlySelectUnusedObjectiveLocation");

	ASQObjectiveRuleset_RandomlySelectUnusedObjectiveLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutTransform != nullptr)
		*OutTransform = params.OutTransform;


	return params.ReturnValue;
}


// Function Squad.SQObjectiveRuleset.RandomlySelectDistantUnusedObjectiveLocation
// (Native, Protected, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FTransform              OutTransform                   (Parm, OutParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQObjectiveRuleset::RandomlySelectDistantUnusedObjectiveLocation(struct FTransform* OutTransform)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQObjectiveRuleset.RandomlySelectDistantUnusedObjectiveLocation");

	ASQObjectiveRuleset_RandomlySelectDistantUnusedObjectiveLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutTransform != nullptr)
		*OutTransform = params.OutTransform;


	return params.ReturnValue;
}


// Function Squad.SQObjectiveRuleset.OnObjectiveShown
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASQObjective*            ObjectiveShown                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQObjectiveRuleset::OnObjectiveShown(class ASQObjective* ObjectiveShown)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQObjectiveRuleset.OnObjectiveShown");

	ASQObjectiveRuleset_OnObjectiveShown_Params params;
	params.ObjectiveShown = ObjectiveShown;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQObjectiveRuleset.OnObjectiveMet
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASQObjective*            ObjectiveMet                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQObjectiveRuleset::OnObjectiveMet(class ASQObjective* ObjectiveMet)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQObjectiveRuleset.OnObjectiveMet");

	ASQObjectiveRuleset_OnObjectiveMet_Params params;
	params.ObjectiveMet = ObjectiveMet;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQObjectiveRuleset.GenerateMarkersForTeam
// (Native, Protected, BlueprintCallable)
// Parameters:
// ESQTeam                        Team                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQObjectiveRuleset::GenerateMarkersForTeam(ESQTeam Team)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQObjectiveRuleset.GenerateMarkersForTeam");

	ASQObjectiveRuleset_GenerateMarkersForTeam_Params params;
	params.Team = Team;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQObjectiveRuleset.DelayShowNewObjectives
// (Native, Protected, BlueprintCallable)
// Parameters:
// float                          InDelay                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQObjectiveRuleset::DelayShowNewObjectives(float InDelay)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQObjectiveRuleset.DelayShowNewObjectives");

	ASQObjectiveRuleset_DelayShowNewObjectives_Params params;
	params.InDelay = InDelay;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQObjectiveRuleset.ClearAndGenerateMarkersForTeamTwo
// (Native, Protected, BlueprintCallable)
void ASQObjectiveRuleset::ClearAndGenerateMarkersForTeamTwo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQObjectiveRuleset.ClearAndGenerateMarkersForTeamTwo");

	ASQObjectiveRuleset_ClearAndGenerateMarkersForTeamTwo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQObjectiveRuleset.ClearAndGenerateMarkersForTeamOne
// (Native, Protected, BlueprintCallable)
void ASQObjectiveRuleset::ClearAndGenerateMarkersForTeamOne()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQObjectiveRuleset.ClearAndGenerateMarkersForTeamOne");

	ASQObjectiveRuleset_ClearAndGenerateMarkersForTeamOne_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQObjectiveRuleset.ClearAndGenerateMarkersForTeam
// (Native, Protected, BlueprintCallable)
// Parameters:
// ESQTeam                        Team                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQObjectiveRuleset::ClearAndGenerateMarkersForTeam(ESQTeam Team)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQObjectiveRuleset.ClearAndGenerateMarkersForTeam");

	ASQObjectiveRuleset_ClearAndGenerateMarkersForTeam_Params params;
	params.Team = Team;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQInsurgencyRuleset.NotifyCoalitionOfSingleCache
// (Native, Protected)
void ASQInsurgencyRuleset::NotifyCoalitionOfSingleCache()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQInsurgencyRuleset.NotifyCoalitionOfSingleCache");

	ASQInsurgencyRuleset_NotifyCoalitionOfSingleCache_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQInsurgencyRuleset.NotifyCoalitionOfCaches
// (Native, Protected)
// Parameters:
// TArray<class ASQObjective*>    NewCaches                      (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
void ASQInsurgencyRuleset::NotifyCoalitionOfCaches(TArray<class ASQObjective*> NewCaches)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQInsurgencyRuleset.NotifyCoalitionOfCaches");

	ASQInsurgencyRuleset_NotifyCoalitionOfCaches_Params params;
	params.NewCaches = NewCaches;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQInsurgencyRuleset.GetNumberOfPlayersOnServer
// (Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int ASQInsurgencyRuleset::GetNumberOfPlayersOnServer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQInsurgencyRuleset.GetNumberOfPlayersOnServer");

	ASQInsurgencyRuleset_GetNumberOfPlayersOnServer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQInsurgencyRuleset.CheckIntelligencePoints
// (Native, Protected, BlueprintCallable)
void ASQInsurgencyRuleset::CheckIntelligencePoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQInsurgencyRuleset.CheckIntelligencePoints");

	ASQInsurgencyRuleset_CheckIntelligencePoints_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQInfantryWeapon.GetOwnerSoldier
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASQSoldier*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASQSoldier* ASQInfantryWeapon::GetOwnerSoldier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQInfantryWeapon.GetOwnerSoldier");

	ASQInfantryWeapon_GetOwnerSoldier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQInfantryWeapon.BlueprintIsAnimationSystemValid
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQInfantryWeapon::BlueprintIsAnimationSystemValid()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQInfantryWeapon.BlueprintIsAnimationSystemValid");

	ASQInfantryWeapon_BlueprintIsAnimationSystemValid_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQHUDWidget.Init
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASQHUD*                  InHUD                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQHUDWidget::Init(class ASQHUD* InHUD)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUDWidget.Init");

	USQHUDWidget_Init_Params params;
	params.InHUD = InHUD;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQHUDWidget.Draw
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQHUDWidget::Draw(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUDWidget.Draw");

	USQHUDWidget_Draw_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQHUDWidget.CanDraw
// (Native, Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQHUDWidget::CanDraw()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUDWidget.CanDraw");

	USQHUDWidget_CanDraw_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQHUDWidget.BPDrawTexture
// (Native, Protected, HasDefaults, BlueprintCallable, Const)
// Parameters:
// class UTexture*                Texture                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          X                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Y                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Width                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Height                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          U                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          V                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          UL                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          VL                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          DrawingAlpha                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor            Color                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D               DrawingOffset                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Rotation                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D               RotationPivotPoint             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIsMask                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQHUDWidget::BPDrawTexture(class UTexture* Texture, float X, float Y, float Width, float Height, float U, float V, float UL, float VL, float DrawingAlpha, const struct FLinearColor& Color, const struct FVector2D& DrawingOffset, float Rotation, const struct FVector2D& RotationPivotPoint, bool bIsMask)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUDWidget.BPDrawTexture");

	USQHUDWidget_BPDrawTexture_Params params;
	params.Texture = Texture;
	params.X = X;
	params.Y = Y;
	params.Width = Width;
	params.Height = Height;
	params.U = U;
	params.V = V;
	params.UL = UL;
	params.VL = VL;
	params.DrawingAlpha = DrawingAlpha;
	params.Color = Color;
	params.DrawingOffset = DrawingOffset;
	params.Rotation = Rotation;
	params.RotationPivotPoint = RotationPivotPoint;
	params.bIsMask = bIsMask;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQHUDWidget.BPDrawText
// (Native, Protected, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FText                   Text                           (Parm, NativeAccessSpecifierPublic)
// float                          X                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Y                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UFont*                   Font                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FFontRenderInfo         FontRenderInfo                 (Parm, NoDestructor, NativeAccessSpecifierPublic)
// struct FLinearColor            Color                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          TextScale                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          DrawingAlpha                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESQTextHorizontalAlignment     HorizontalAlignment            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESQTextVerticalAlignment       VerticalAlignment              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bDrawShadow                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D               ShadowDirection                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor            ShadowColor                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bDrawOutline                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor            OutlineColor                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector2D USQHUDWidget::BPDrawText(const struct FText& Text, float X, float Y, class UFont* Font, const struct FFontRenderInfo& FontRenderInfo, const struct FLinearColor& Color, float TextScale, float DrawingAlpha, ESQTextHorizontalAlignment HorizontalAlignment, ESQTextVerticalAlignment VerticalAlignment, bool bDrawShadow, const struct FVector2D& ShadowDirection, const struct FLinearColor& ShadowColor, bool bDrawOutline, const struct FLinearColor& OutlineColor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUDWidget.BPDrawText");

	USQHUDWidget_BPDrawText_Params params;
	params.Text = Text;
	params.X = X;
	params.Y = Y;
	params.Font = Font;
	params.FontRenderInfo = FontRenderInfo;
	params.Color = Color;
	params.TextScale = TextScale;
	params.DrawingAlpha = DrawingAlpha;
	params.HorizontalAlignment = HorizontalAlignment;
	params.VerticalAlignment = VerticalAlignment;
	params.bDrawShadow = bDrawShadow;
	params.ShadowDirection = ShadowDirection;
	params.ShadowColor = ShadowColor;
	params.bDrawOutline = bDrawOutline;
	params.OutlineColor = OutlineColor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQHUDWidget.BPDrawSpriteTexture
// (Native, Protected, HasDefaults, BlueprintCallable, Const)
// Parameters:
// class UTexture*                Texture                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          X                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Y                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Width                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Height                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          TextureX                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          TextureY                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          TextureXL                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          TextureYL                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          DrawingAlpha                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor            Color                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D               DrawingOffset                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Rotation                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D               RotationPivotPoint             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIsMask                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQHUDWidget::BPDrawSpriteTexture(class UTexture* Texture, float X, float Y, float Width, float Height, float TextureX, float TextureY, float TextureXL, float TextureYL, float DrawingAlpha, const struct FLinearColor& Color, const struct FVector2D& DrawingOffset, float Rotation, const struct FVector2D& RotationPivotPoint, bool bIsMask)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUDWidget.BPDrawSpriteTexture");

	USQHUDWidget_BPDrawSpriteTexture_Params params;
	params.Texture = Texture;
	params.X = X;
	params.Y = Y;
	params.Width = Width;
	params.Height = Height;
	params.TextureX = TextureX;
	params.TextureY = TextureY;
	params.TextureXL = TextureXL;
	params.TextureYL = TextureYL;
	params.DrawingAlpha = DrawingAlpha;
	params.Color = Color;
	params.DrawingOffset = DrawingOffset;
	params.Rotation = Rotation;
	params.RotationPivotPoint = RotationPivotPoint;
	params.bIsMask = bIsMask;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQHUDWidget.BPDrawMaterial
// (Native, Protected, HasDefaults, BlueprintCallable, Const)
// Parameters:
// class UMaterialInterface*      Material                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          X                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Y                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Width                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Height                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          U                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          V                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          UL                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          VL                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          DrawingAlpha                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor            Color                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D               DrawingOffset                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Rotation                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D               RotationPivotPoint             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQHUDWidget::BPDrawMaterial(class UMaterialInterface* Material, float X, float Y, float Width, float Height, float U, float V, float UL, float VL, float DrawingAlpha, const struct FLinearColor& Color, const struct FVector2D& DrawingOffset, float Rotation, const struct FVector2D& RotationPivotPoint)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUDWidget.BPDrawMaterial");

	USQHUDWidget_BPDrawMaterial_Params params;
	params.Material = Material;
	params.X = X;
	params.Y = Y;
	params.Width = Width;
	params.Height = Height;
	params.U = U;
	params.V = V;
	params.UL = UL;
	params.VL = VL;
	params.DrawingAlpha = DrawingAlpha;
	params.Color = Color;
	params.DrawingOffset = DrawingOffset;
	params.Rotation = Rotation;
	params.RotationPivotPoint = RotationPivotPoint;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQHUD.VehicleResetZoom
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
void ASQHUD::VehicleResetZoom()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.VehicleResetZoom");

	ASQHUD_VehicleResetZoom_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQHUD.VehicleRemoveOverlay
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                  WidgetClass                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQHUD::VehicleRemoveOverlay(class UClass* WidgetClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.VehicleRemoveOverlay");

	ASQHUD_VehicleRemoveOverlay_Params params;
	params.WidgetClass = WidgetClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQHUD.VehicleIncreaseZoomOverlay
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
void ASQHUD::VehicleIncreaseZoomOverlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.VehicleIncreaseZoomOverlay");

	ASQHUD_VehicleIncreaseZoomOverlay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQHUD.VehicleDecreaseZoomOverlay
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
void ASQHUD::VehicleDecreaseZoomOverlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.VehicleDecreaseZoomOverlay");

	ASQHUD_VehicleDecreaseZoomOverlay_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQHUD.VehicleCreateOverlay
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                  WidgetClass                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQHUD::VehicleCreateOverlay(class UClass* WidgetClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.VehicleCreateOverlay");

	ASQHUD_VehicleCreateOverlay_Params params;
	params.WidgetClass = WidgetClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQHUD.TraceViewToggle
// (Exec, Native, Public)
void ASQHUD::TraceViewToggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.TraceViewToggle");

	ASQHUD_TraceViewToggle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQHUD.ToggleScoreboard
// (Final, Native, Public, BlueprintCallable)
void ASQHUD::ToggleScoreboard()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.ToggleScoreboard");

	ASQHUD_ToggleScoreboard_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQHUD.ShowScoreboard
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQHUD::ShowScoreboard(bool bEnable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.ShowScoreboard");

	ASQHUD_ShowScoreboard_Params params;
	params.bEnable = bEnable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQHUD.ShowMarkerOnHUD
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FSQMapMarkerVisualData  MapMarkerVisualData            (Parm, NoDestructor, NativeAccessSpecifierPublic)
void ASQHUD::ShowMarkerOnHUD(const struct FSQMapMarkerVisualData& MapMarkerVisualData)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.ShowMarkerOnHUD");

	ASQHUD_ShowMarkerOnHUD_Params params;
	params.MapMarkerVisualData = MapMarkerVisualData;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQHUD.ShouldOffsetSpawnText
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQHUD::ShouldOffsetSpawnText()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.ShouldOffsetSpawnText");

	ASQHUD_ShouldOffsetSpawnText_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQHUD.SettingsChangedHandler
// (Final, Native, Protected)
// Parameters:
// class USQGameUserSettings*     Settings                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQHUD::SettingsChangedHandler(class USQGameUserSettings* Settings)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.SettingsChangedHandler");

	ASQHUD_SettingsChangedHandler_Params params;
	params.Settings = Settings;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQHUD.SetHudWidgetsEnabled
// (Exec, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bValue                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQHUD::SetHudWidgetsEnabled(bool bValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.SetHudWidgetsEnabled");

	ASQHUD_SetHudWidgetsEnabled_Params params;
	params.bValue = bValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQHUD.RemoveLineOfSightActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQHUD::RemoveLineOfSightActor(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.RemoveLineOfSightActor");

	ASQHUD_RemoveLineOfSightActor_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQHUD.RemoveInputStackState
// (Native, Protected, BlueprintCallable)
// Parameters:
// struct FSQInputState           OldState                       (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FSQInputState           ReturnValue                    (Parm, OutParm, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
struct FSQInputState ASQHUD::RemoveInputStackState(const struct FSQInputState& OldState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.RemoveInputStackState");

	ASQHUD_RemoveInputStackState_Params params;
	params.OldState = OldState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// DelegateFunction Squad.SQHUD.OnReceiveChatEvent__DelegateSignature
// (MulticastDelegate, Public, Delegate, HasDefaults)
// Parameters:
// struct FString                 PlayerName                     (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 Message                        (ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESQChat                        Channel                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor            Color                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESQNotificationTypes           NotificationType               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQHUD::OnReceiveChatEvent__DelegateSignature(const struct FString& PlayerName, const struct FString& Message, ESQChat Channel, const struct FLinearColor& Color, ESQNotificationTypes NotificationType)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Squad.SQHUD.OnReceiveChatEvent__DelegateSignature");

	ASQHUD_OnReceiveChatEvent__DelegateSignature_Params params;
	params.PlayerName = PlayerName;
	params.Message = Message;
	params.Channel = Channel;
	params.Color = Color;
	params.NotificationType = NotificationType;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQHUD.IsScoreboardVisible
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQHUD::IsScoreboardVisible()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.IsScoreboardVisible");

	ASQHUD_IsScoreboardVisible_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQHUD.IncrementMapZoomLevel
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          CurrentMapZoom                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Amount                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bLoop                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ASQHUD::IncrementMapZoomLevel(float CurrentMapZoom, int Amount, bool bLoop)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.IncrementMapZoomLevel");

	ASQHUD_IncrementMapZoomLevel_Params params;
	params.CurrentMapZoom = CurrentMapZoom;
	params.Amount = Amount;
	params.bLoop = bLoop;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQHUD.HudWidgetsEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQHUD::HudWidgetsEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.HudWidgetsEnabled");

	ASQHUD_HudWidgetsEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQHUD.HideDeployableInteractableOverlay
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASQDeployableInteractable* ammobag                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQHUD::HideDeployableInteractableOverlay(class ASQDeployableInteractable* ammobag)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.HideDeployableInteractableOverlay");

	ASQHUD_HideDeployableInteractableOverlay_Params params;
	params.ammobag = ammobag;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQHUD.HideAmmoBagOverlay
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASQDeployableAmmoBag*    ammobag                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQHUD::HideAmmoBagOverlay(class ASQDeployableAmmoBag* ammobag)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.HideAmmoBagOverlay");

	ASQHUD_HideAmmoBagOverlay_Params params;
	params.ammobag = ammobag;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQHUD.GetTeamColor
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FLinearColor ASQHUD::GetTeamColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.GetTeamColor");

	ASQHUD_GetTeamColor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQHUD.GetTeamBasedColor
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESQTeam                        InTeam                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FLinearColor ASQHUD::GetTeamBasedColor(ESQTeam InTeam)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.GetTeamBasedColor");

	ASQHUD_GetTeamBasedColor_Params params;
	params.InTeam = InTeam;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQHUD.GetSystemMessagesColor
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FLinearColor ASQHUD::GetSystemMessagesColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.GetSystemMessagesColor");

	ASQHUD_GetSystemMessagesColor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQHUD.GetStartingMapZoom
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ASQHUD::GetStartingMapZoom()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.GetStartingMapZoom");

	ASQHUD_GetStartingMapZoom_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQHUD.GetSquadColor
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FLinearColor ASQHUD::GetSquadColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.GetSquadColor");

	ASQHUD_GetSquadColor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQHUD.GetScaleUI
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ASQHUD::GetScaleUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.GetScaleUI");

	ASQHUD_GetScaleUI_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQHUD.GetRemoteTalkers
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FSQRemoteTalkerDisplayInfo> ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
TArray<struct FSQRemoteTalkerDisplayInfo> ASQHUD::GetRemoteTalkers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.GetRemoteTalkers");

	ASQHUD_GetRemoteTalkers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQHUD.GetOwnerSpeakerState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESQVoiceChannel                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
ESQVoiceChannel ASQHUD::GetOwnerSpeakerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.GetOwnerSpeakerState");

	ASQHUD_GetOwnerSpeakerState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQHUD.GetOtherPlayerColor
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASQPlayerState*          OtherPlayer                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FLinearColor ASQHUD::GetOtherPlayerColor(class ASQPlayerState* OtherPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.GetOtherPlayerColor");

	ASQHUD_GetOtherPlayerColor_Params params;
	params.OtherPlayer = OtherPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQHUD.GetMouseScreenSpacePosition
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FIntPoint               OutPosition                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQHUD::GetMouseScreenSpacePosition(struct FIntPoint* OutPosition)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.GetMouseScreenSpacePosition");

	ASQHUD_GetMouseScreenSpacePosition_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutPosition != nullptr)
		*OutPosition = params.OutPosition;


	return params.ReturnValue;
}


// Function Squad.SQHUD.GetFireTeamColor
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FLinearColor ASQHUD::GetFireTeamColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.GetFireTeamColor");

	ASQHUD_GetFireTeamColor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQHUD.GetEnemyColor
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FLinearColor ASQHUD::GetEnemyColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.GetEnemyColor");

	ASQHUD_GetEnemyColor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQHUD.GetCanvas
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UCanvas*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UCanvas* ASQHUD::GetCanvas()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.GetCanvas");

	ASQHUD_GetCanvas_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQHUD.DrawSystemMessages
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                          PosX                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          PosY                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQHUD::DrawSystemMessages(float PosX, float PosY)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.DrawSystemMessages");

	ASQHUD_DrawSystemMessages_Params params;
	params.PosX = PosX;
	params.PosY = PosY;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQHUD.DrawString
// (Final, Native, Protected, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 Text                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          PosX                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          PosY                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor            Color                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSQMessageBoxInfo       Info                           (Parm, NativeAccessSpecifierPublic)
// ESQTextHorizontalAlignment     HorizontalAlignment            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESQTextVerticalAlignment       VerticalAlignment              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ASQHUD::DrawString(int Index, const struct FString& Text, float PosX, float PosY, const struct FLinearColor& Color, const struct FSQMessageBoxInfo& Info, ESQTextHorizontalAlignment HorizontalAlignment, ESQTextVerticalAlignment VerticalAlignment)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.DrawString");

	ASQHUD_DrawString_Params params;
	params.Index = Index;
	params.Text = Text;
	params.PosX = PosX;
	params.PosY = PosY;
	params.Color = Color;
	params.Info = Info;
	params.HorizontalAlignment = HorizontalAlignment;
	params.VerticalAlignment = VerticalAlignment;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQHUD.DrawChatMessages
// (Final, Native, Protected, HasOutParms, BlueprintCallable)
// Parameters:
// struct FSQMessageBoxInfo       ChatBox                        (Parm, OutParm, NativeAccessSpecifierPublic)
// float                          PosX                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          PosY                           (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQHUD::DrawChatMessages(struct FSQMessageBoxInfo* ChatBox, float PosX, float PosY)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.DrawChatMessages");

	ASQHUD_DrawChatMessages_Params params;
	params.PosX = PosX;
	params.PosY = PosY;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (ChatBox != nullptr)
		*ChatBox = params.ChatBox;

}


// Function Squad.SQHUD.DisplayDeployableInteractableOverlay
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASQDeployableInteractable* ammobag                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bCanPickup                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQHUD::DisplayDeployableInteractableOverlay(class ASQDeployableInteractable* ammobag, bool bCanPickup)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.DisplayDeployableInteractableOverlay");

	ASQHUD_DisplayDeployableInteractableOverlay_Params params;
	params.ammobag = ammobag;
	params.bCanPickup = bCanPickup;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQHUD.DisplayAmmoBagOverlay
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASQDeployableAmmoBag*    ammobag                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bCanPickup                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQHUD::DisplayAmmoBagOverlay(class ASQDeployableAmmoBag* ammobag, bool bCanPickup)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.DisplayAmmoBagOverlay");

	ASQHUD_DisplayAmmoBagOverlay_Params params;
	params.ammobag = ammobag;
	params.bCanPickup = bCanPickup;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQHUD.DeleteMarkerOnHUD
// (Event, Public, BlueprintCallable, BlueprintEvent)
void ASQHUD::DeleteMarkerOnHUD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.DeleteMarkerOnHUD");

	ASQHUD_DeleteMarkerOnHUD_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQHUD.ConditionalCloseScoreboard
// (Final, Native, Public, BlueprintCallable)
void ASQHUD::ConditionalCloseScoreboard()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.ConditionalCloseScoreboard");

	ASQHUD_ConditionalCloseScoreboard_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQHUD.BPOnUsableVisible
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIsVisible                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQHUD::BPOnUsableVisible(class AActor* Actor, bool bIsVisible)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.BPOnUsableVisible");

	ASQHUD_BPOnUsableVisible_Params params;
	params.Actor = Actor;
	params.bIsVisible = bIsVisible;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQHUD.BPOnSetHudWidgetsEnabled
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQHUD::BPOnSetHudWidgetsEnabled(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.BPOnSetHudWidgetsEnabled");

	ASQHUD_BPOnSetHudWidgetsEnabled_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQHUD.BlueprintNotifyHit
// (BlueprintCosmetic, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// float                          DamageTaken                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class APawn*                   PawnInstigator                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQHUD::BlueprintNotifyHit(float DamageTaken, const struct FDamageEvent& DamageEvent, class APawn* PawnInstigator)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.BlueprintNotifyHit");

	ASQHUD_BlueprintNotifyHit_Params params;
	params.DamageTaken = DamageTaken;
	params.DamageEvent = DamageEvent;
	params.PawnInstigator = PawnInstigator;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQHUD.AddSystemMessage
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FString                 Message                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor            Color                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          MessageLifetimeOverride        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESQNotificationTypes           NotificationType               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQHUD::AddSystemMessage(const struct FString& Message, const struct FLinearColor& Color, float MessageLifetimeOverride, ESQNotificationTypes NotificationType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.AddSystemMessage");

	ASQHUD_AddSystemMessage_Params params;
	params.Message = Message;
	params.Color = Color;
	params.MessageLifetimeOverride = MessageLifetimeOverride;
	params.NotificationType = NotificationType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQHUD.AddLineOfSightActor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQHUD::AddLineOfSightActor(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.AddLineOfSightActor");

	ASQHUD_AddLineOfSightActor_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQHUD.AddInputStackState
// (Native, Protected, BlueprintCallable)
// Parameters:
// struct FSQInputState           NewState                       (Parm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FSQInputState           ReturnValue                    (Parm, OutParm, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
struct FSQInputState ASQHUD::AddInputStackState(const struct FSQInputState& NewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.AddInputStackState");

	ASQHUD_AddInputStackState_Params params;
	params.NewState = NewState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQHUD.AddChatMessageDefaultColor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASQPlayerState*          Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 Message                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESQChat                        Channel                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          MessageLifetimeOverride        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESQNotificationTypes           NotificationType               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQHUD::AddChatMessageDefaultColor(class ASQPlayerState* Player, const struct FString& Message, ESQChat Channel, float MessageLifetimeOverride, ESQNotificationTypes NotificationType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.AddChatMessageDefaultColor");

	ASQHUD_AddChatMessageDefaultColor_Params params;
	params.Player = Player;
	params.Message = Message;
	params.Channel = Channel;
	params.MessageLifetimeOverride = MessageLifetimeOverride;
	params.NotificationType = NotificationType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQHUD.AddChatMessage
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class ASQPlayerState*          Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 Message                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESQChat                        Channel                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor            Color                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          MessageLifetimeOverride        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESQNotificationTypes           NotificationType               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQHUD::AddChatMessage(class ASQPlayerState* Player, const struct FString& Message, ESQChat Channel, const struct FLinearColor& Color, float MessageLifetimeOverride, ESQNotificationTypes NotificationType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHUD.AddChatMessage");

	ASQHUD_AddChatMessage_Params params;
	params.Player = Player;
	params.Message = Message;
	params.Channel = Channel;
	params.Color = Color;
	params.MessageLifetimeOverride = MessageLifetimeOverride;
	params.NotificationType = NotificationType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQHelicopterMovementComponent.ResetMovementState
// (Final, Native, Public, BlueprintCallable)
void USQHelicopterMovementComponent::ResetMovementState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHelicopterMovementComponent.ResetMovementState");

	USQHelicopterMovementComponent_ResetMovementState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQHelicopterMovementComponent.OnRep_IsSimulatingPhysics
// (Final, Native, Protected)
void USQHelicopterMovementComponent::OnRep_IsSimulatingPhysics()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHelicopterMovementComponent.OnRep_IsSimulatingPhysics");

	USQHelicopterMovementComponent_OnRep_IsSimulatingPhysics_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQHelicopterMovementComponent.IsSimulatingPhysics
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQHelicopterMovementComponent::IsSimulatingPhysics()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHelicopterMovementComponent.IsSimulatingPhysics");

	USQHelicopterMovementComponent_IsSimulatingPhysics_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQHelicopterMovementComponent.GetRotationInput
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
struct FRotator USQHelicopterMovementComponent::GetRotationInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHelicopterMovementComponent.GetRotationInput");

	USQHelicopterMovementComponent_GetRotationInput_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQHelicopterMovementComponent.GetMaxBrakingDeceleration
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQHelicopterMovementComponent::GetMaxBrakingDeceleration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHelicopterMovementComponent.GetMaxBrakingDeceleration");

	USQHelicopterMovementComponent_GetMaxBrakingDeceleration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQHelicopterMovementComponent.GetMaxAcceleration
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQHelicopterMovementComponent::GetMaxAcceleration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHelicopterMovementComponent.GetMaxAcceleration");

	USQHelicopterMovementComponent_GetMaxAcceleration_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQHelicopterMovementComponent.CapsuleTouched
// (Native, Protected, HasOutParms)
// Parameters:
// class UPrimitiveComponent*     OverlappedComp                 (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  Other                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void USQHelicopterMovementComponent::CapsuleTouched(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHelicopterMovementComponent.CapsuleTouched");

	USQHelicopterMovementComponent_CapsuleTouched_Params params;
	params.OverlappedComp = OverlappedComp;
	params.Other = Other;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQHelicopterMovementComponent.AddRotationInput
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                InRotationInput                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
void USQHelicopterMovementComponent::AddRotationInput(const struct FRotator& InRotationInput)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHelicopterMovementComponent.AddRotationInput");

	USQHelicopterMovementComponent_AddRotationInput_Params params;
	params.InRotationInput = InRotationInput;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQHelicopterMovementComponent.AddImpulse
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Impulse                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bVelocityChange                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQHelicopterMovementComponent::AddImpulse(const struct FVector& Impulse, bool bVelocityChange)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHelicopterMovementComponent.AddImpulse");

	USQHelicopterMovementComponent_AddImpulse_Params params;
	params.Impulse = Impulse;
	params.bVelocityChange = bVelocityChange;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQHelicopterMovementComponent.AddForce
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Force                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQHelicopterMovementComponent::AddForce(const struct FVector& Force)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHelicopterMovementComponent.AddForce");

	USQHelicopterMovementComponent_AddForce_Params params;
	params.Force = Force;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQHelicopterInstruments.SetActivationProgress
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          Progress                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQHelicopterInstruments::SetActivationProgress(float Progress)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHelicopterInstruments.SetActivationProgress");

	USQHelicopterInstruments_SetActivationProgress_Params params;
	params.Progress = Progress;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQHelicopterInstruments.IsEngineActive
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQHelicopterInstruments::IsEngineActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHelicopterInstruments.IsEngineActive");

	USQHelicopterInstruments_IsEngineActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQHelicopterInstruments.GetYawInput
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQHelicopterInstruments::GetYawInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHelicopterInstruments.GetYawInput");

	USQHelicopterInstruments_GetYawInput_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQHelicopterInstruments.GetRollInput
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQHelicopterInstruments::GetRollInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHelicopterInstruments.GetRollInput");

	USQHelicopterInstruments_GetRollInput_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQHelicopterInstruments.GetPitchInput
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQHelicopterInstruments::GetPitchInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHelicopterInstruments.GetPitchInput");

	USQHelicopterInstruments_GetPitchInput_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQHelicopterInstruments.GetMaxLift
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQHelicopterInstruments::GetMaxLift()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHelicopterInstruments.GetMaxLift");

	USQHelicopterInstruments_GetMaxLift_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQHelicopterInstruments.GetLiftInput
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQHelicopterInstruments::GetLiftInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHelicopterInstruments.GetLiftInput");

	USQHelicopterInstruments_GetLiftInput_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQHelicopterInstruments.GetForwardSpeed
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQHelicopterInstruments::GetForwardSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHelicopterInstruments.GetForwardSpeed");

	USQHelicopterInstruments_GetForwardSpeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQHelicopterInstruments.GetActivationProgress
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQHelicopterInstruments::GetActivationProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHelicopterInstruments.GetActivationProgress");

	USQHelicopterInstruments_GetActivationProgress_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQCollisionDamage.OnActorHit
// (Final, Native, Private, HasOutParms, HasDefaults)
// Parameters:
// class AActor*                  SelfActor                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 NormalImpulse                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void USQCollisionDamage::OnActorHit(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCollisionDamage.OnActorHit");

	USQCollisionDamage_OnActorHit_Params params;
	params.SelfActor = SelfActor;
	params.OtherActor = OtherActor;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCollisionDamage.CalculateDamage
// (Native, Event, Protected, HasOutParms, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class AActor*                  SelfActor                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 NormalImpulse                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQCollisionDamage::CalculateDamage(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCollisionDamage.CalculateDamage");

	USQCollisionDamage_CalculateDamage_Params params;
	params.SelfActor = SelfActor;
	params.OtherActor = OtherActor;
	params.NormalImpulse = NormalImpulse;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQCollisionDamage.ApplyDamage
// (Native, Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                          damage                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQCollisionDamage::ApplyDamage(float damage)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCollisionDamage.ApplyDamage");

	USQCollisionDamage_ApplyDamage_Params params;
	params.damage = damage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQHelicopterCollisionDamage.HandleImpact
// (Final, Native, Protected, HasOutParms, HasDefaults)
// Parameters:
// struct FHitResult              Impact                         (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// float                          TimeSlice                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 MoveDelta                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQHelicopterCollisionDamage::HandleImpact(const struct FHitResult& Impact, float TimeSlice, const struct FVector& MoveDelta)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHelicopterCollisionDamage.HandleImpact");

	USQHelicopterCollisionDamage_HandleImpact_Params params;
	params.Impact = Impact;
	params.TimeSlice = TimeSlice;
	params.MoveDelta = MoveDelta;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQHelicopter2.SlerpToUpSideDown
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          AngleRad                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
struct FRotator ASQHelicopter2::SlerpToUpSideDown(float AngleRad)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHelicopter2.SlerpToUpSideDown");

	ASQHelicopter2_SlerpToUpSideDown_Params params;
	params.AngleRad = AngleRad;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQHelicopter2.MainRotorDestroyedHandler
// (Final, Native, Protected)
// Parameters:
// class USQVehicleComponent*     VehicleComponent               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQHelicopter2::MainRotorDestroyedHandler(class USQVehicleComponent* VehicleComponent)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHelicopter2.MainRotorDestroyedHandler");

	ASQHelicopter2_MainRotorDestroyedHandler_Params params;
	params.VehicleComponent = VehicleComponent;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQHelicopter2.IsTailRotorColliding
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQHelicopter2::IsTailRotorColliding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHelicopter2.IsTailRotorColliding");

	ASQHelicopter2_IsTailRotorColliding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQHelicopter2.IsPhysicsEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQHelicopter2::IsPhysicsEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHelicopter2.IsPhysicsEnabled");

	ASQHelicopter2_IsPhysicsEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQHelicopter2.IsMainRotorColliding
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQHelicopter2::IsMainRotorColliding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHelicopter2.IsMainRotorColliding");

	ASQHelicopter2_IsMainRotorColliding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQHelicopter2.IsLanded
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQHelicopter2::IsLanded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHelicopter2.IsLanded");

	ASQHelicopter2_IsLanded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQHelicopter2.GetThrottle
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ASQHelicopter2::GetThrottle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHelicopter2.GetThrottle");

	ASQHelicopter2_GetThrottle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQHelicopter2.GetTailRotorThrust
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ASQHelicopter2::GetTailRotorThrust()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHelicopter2.GetTailRotorThrust");

	ASQHelicopter2_GetTailRotorThrust_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQHelicopter2.GetMaxRPM
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int ASQHelicopter2::GetMaxRPM()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHelicopter2.GetMaxRPM");

	ASQHelicopter2_GetMaxRPM_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQHelicopter2.GetMainRotorThrust
// (Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ASQHelicopter2::GetMainRotorThrust()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHelicopter2.GetMainRotorThrust");

	ASQHelicopter2_GetMainRotorThrust_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQHelicopter2.EnablePhysicsSimulation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bSimulate                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQHelicopter2::EnablePhysicsSimulation(bool bSimulate)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQHelicopter2.EnablePhysicsSimulation");

	ASQHelicopter2_EnablePhysicsSimulation_Params params;
	params.bSimulate = bSimulate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGridMarkerUnit.SetBoxSize
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          NewSize                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQGridMarkerUnit::SetBoxSize(float NewSize)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGridMarkerUnit.SetBoxSize");

	USQGridMarkerUnit_SetBoxSize_Params params;
	params.NewSize = NewSize;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGridMarkerBase.InitWidget
// (Final, Native, Public, BlueprintCallable)
void USQGridMarkerBase::InitWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGridMarkerBase.InitWidget");

	USQGridMarkerBase_InitWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGridMarkerBase.DrawWidget
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class USQGridMarkerBase*       MapGridMarker                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPaintContext           Context                        (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
void USQGridMarkerBase::STATIC_DrawWidget(class USQGridMarkerBase* MapGridMarker, struct FPaintContext* Context)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGridMarkerBase.DrawWidget");

	USQGridMarkerBase_DrawWidget_Params params;
	params.MapGridMarker = MapGridMarker;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Context != nullptr)
		*Context = params.Context;

}


// Function Squad.SQGrenadeProjectile.PlayThrowableImpactEffect
// (Native, Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult              ImpactHit                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQGrenadeProjectile::PlayThrowableImpactEffect(const struct FHitResult& ImpactHit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGrenadeProjectile.PlayThrowableImpactEffect");

	ASQGrenadeProjectile_PlayThrowableImpactEffect_Params params;
	params.ImpactHit = ImpactHit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGrenade.UpdateUnderhandThrow
// (Final, Native, Protected, BlueprintCallable)
void ASQGrenade::UpdateUnderhandThrow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGrenade.UpdateUnderhandThrow");

	ASQGrenade_UpdateUnderhandThrow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGrenade.UpdateUnderhandPinpull
// (Final, Native, Protected, BlueprintCallable)
void ASQGrenade::UpdateUnderhandPinpull()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGrenade.UpdateUnderhandPinpull");

	ASQGrenade_UpdateUnderhandPinpull_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGrenade.UpdateReloading
// (Final, Native, Protected, BlueprintCallable)
void ASQGrenade::UpdateReloading()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGrenade.UpdateReloading");

	ASQGrenade_UpdateReloading_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGrenade.UpdateOverhandThrow
// (Final, Native, Protected, BlueprintCallable)
void ASQGrenade::UpdateOverhandThrow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGrenade.UpdateOverhandThrow");

	ASQGrenade_UpdateOverhandThrow_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGrenade.UpdateOverhandPinpull
// (Final, Native, Protected, BlueprintCallable)
void ASQGrenade::UpdateOverhandPinpull()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGrenade.UpdateOverhandPinpull");

	ASQGrenade_UpdateOverhandPinpull_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGrenade.ServerSpawnGrenade
// (Net, NetReliable, Native, Event, Protected, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                 SpawnLocationZeroBased         (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGrenade::ServerSpawnGrenade(const struct FVector& SpawnLocationZeroBased)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGrenade.ServerSpawnGrenade");

	ASQGrenade_ServerSpawnGrenade_Params params;
	params.SpawnLocationZeroBased = SpawnLocationZeroBased;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGrenade.ServerReleaseThrow
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                           bOverhand                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGrenade::ServerReleaseThrow(bool bOverhand)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGrenade.ServerReleaseThrow");

	ASQGrenade_ServerReleaseThrow_Params params;
	params.bOverhand = bOverhand;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGrenade.ServerPrepareThrow
// (Net, NetReliable, Native, Event, Protected, NetServer, NetValidate)
// Parameters:
// bool                           bOverhand                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGrenade::ServerPrepareThrow(bool bOverhand)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGrenade.ServerPrepareThrow");

	ASQGrenade_ServerPrepareThrow_Params params;
	params.bOverhand = bOverhand;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGrenade.OnRep_GrenadeState
// (Final, Native, Protected)
void ASQGrenade::OnRep_GrenadeState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGrenade.OnRep_GrenadeState");

	ASQGrenade_OnRep_GrenadeState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGrenade.GetOwnerSoldier
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASQSoldier*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASQSoldier* ASQGrenade::GetOwnerSoldier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGrenade.GetOwnerSoldier");

	ASQGrenade_GetOwnerSoldier_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGrenade.GetGrenadeStaticInfo
// (Native, Protected, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USQGrenadeStaticInfo*    ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USQGrenadeStaticInfo* ASQGrenade::GetGrenadeStaticInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGrenade.GetGrenadeStaticInfo");

	ASQGrenade_GetGrenadeStaticInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGrenade.GetAimLocation
// (Native, Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector ASQGrenade::GetAimLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGrenade.GetAimLocation");

	ASQGrenade_GetAimLocation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGrenade.GetAimDirection
// (Native, Event, Protected, HasDefaults, BlueprintEvent)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
struct FRotator ASQGrenade::GetAimDirection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGrenade.GetAimDirection");

	ASQGrenade_GetAimDirection_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGrenade.BlueprintOnGrenadeStateChanged
// (Event, Protected, BlueprintEvent)
void ASQGrenade::BlueprintOnGrenadeStateChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGrenade.BlueprintOnGrenadeStateChanged");

	ASQGrenade_BlueprintOnGrenadeStateChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGraphVisualizerComponent.UpdateDesignLinks
// (Final, Native, Public)
void USQGraphVisualizerComponent::UpdateDesignLinks()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGraphVisualizerComponent.UpdateDesignLinks");

	USQGraphVisualizerComponent_UpdateDesignLinks_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGraphVisualizerComponent.DrawNode
// (Native, Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class USQGraphNodeComponent*   Node                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FColor                  Color                          (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQGraphVisualizerComponent::DrawNode(class USQGraphNodeComponent* Node, const struct FColor& Color)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGraphVisualizerComponent.DrawNode");

	USQGraphVisualizerComponent_DrawNode_Params params;
	params.Node = Node;
	params.Color = Color;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGraphVisualizerComponent.DrawLink
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class USQGraphNodeComponent*   NodeA                          (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USQGraphNodeComponent*   NodeB                          (ConstParm, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQGraphVisualizerComponent::DrawLink(class USQGraphNodeComponent* NodeA, class USQGraphNodeComponent* NodeB)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGraphVisualizerComponent.DrawLink");

	USQGraphVisualizerComponent_DrawLink_Params params;
	params.NodeA = NodeA;
	params.NodeB = NodeB;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGraphVisualizerComponent.Draw
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, Const)
void USQGraphVisualizerComponent::Draw()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGraphVisualizerComponent.Draw");

	USQGraphVisualizerComponent_Draw_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGraphRAASVisualizerComponent.UpdateCachedRoutes
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
void USQGraphRAASVisualizerComponent::UpdateCachedRoutes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGraphRAASVisualizerComponent.UpdateCachedRoutes");

	USQGraphRAASVisualizerComponent_UpdateCachedRoutes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGraphInitializerComponent.UpdateDesignLinks
// (Final, Native, Public, BlueprintCallable)
void USQGraphInitializerComponent::UpdateDesignLinks()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGraphInitializerComponent.UpdateDesignLinks");

	USQGraphInitializerComponent_UpdateDesignLinks_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGraphInitializerComponent.PopulateGraph
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
void USQGraphInitializerComponent::PopulateGraph()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGraphInitializerComponent.PopulateGraph");

	USQGraphInitializerComponent_PopulateGraph_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.RouteCombinerPredicate.Execute
// (Native, Event, Public, HasOutParms, BlueprintEvent, Const)
// Parameters:
// TArray<struct FSQRoute2>       NewRoutes                      (Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// TArray<struct FSQRoute2>       Routes                         (Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
void URouteCombinerPredicate::Execute(TArray<struct FSQRoute2>* NewRoutes, TArray<struct FSQRoute2>* Routes)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.RouteCombinerPredicate.Execute");

	URouteCombinerPredicate_Execute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (NewRoutes != nullptr)
		*NewRoutes = params.NewRoutes;
	if (Routes != nullptr)
		*Routes = params.Routes;

}


// Function Squad.RouteSelectorPredicate.Execute
// (Native, Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// TArray<class USQGraphNodeComponent*> LinksLeft                      (Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// TArray<class USQGraphNodeComponent*> ChosenLinks                    (Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FRandomStream           RandStream                     (Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool URouteSelectorPredicate::Execute(TArray<class USQGraphNodeComponent*>* LinksLeft, TArray<class USQGraphNodeComponent*>* ChosenLinks, struct FRandomStream* RandStream)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.RouteSelectorPredicate.Execute");

	URouteSelectorPredicate_Execute_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (LinksLeft != nullptr)
		*LinksLeft = params.LinksLeft;
	if (ChosenLinks != nullptr)
		*ChosenLinks = params.ChosenLinks;
	if (RandStream != nullptr)
		*RandStream = params.RandStream;


	return params.ReturnValue;
}


// Function Squad.SQGameUserSettings.UpdateQualityLevels
// (Native, Public, BlueprintCallable)
void USQGameUserSettings::UpdateQualityLevels()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameUserSettings.UpdateQualityLevels");

	USQGameUserSettings_UpdateQualityLevels_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameUserSettings.UpdateQualityBasedOnGraphicsQuality
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            InBaseQuality                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            InGraphicsQuality              (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int USQGameUserSettings::UpdateQualityBasedOnGraphicsQuality(int InBaseQuality, int InGraphicsQuality)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameUserSettings.UpdateQualityBasedOnGraphicsQuality");

	USQGameUserSettings_UpdateQualityBasedOnGraphicsQuality_Params params;
	params.InBaseQuality = InBaseQuality;
	params.InGraphicsQuality = InGraphicsQuality;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameUserSettings.SetSteamItemEnabled
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            ItemId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQGameUserSettings::SetSteamItemEnabled(int ItemId, bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameUserSettings.SetSteamItemEnabled");

	USQGameUserSettings_SetSteamItemEnabled_Params params;
	params.ItemId = ItemId;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameUserSettings.SetResolutionQuality
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            ResolutionQuality              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQGameUserSettings::SetResolutionQuality(int ResolutionQuality)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameUserSettings.SetResolutionQuality");

	USQGameUserSettings_SetResolutionQuality_Params params;
	params.ResolutionQuality = ResolutionQuality;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameUserSettings.SetPostProcessQuality
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            PostProcessQuality             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQGameUserSettings::SetPostProcessQuality(int PostProcessQuality)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameUserSettings.SetPostProcessQuality");

	USQGameUserSettings_SetPostProcessQuality_Params params;
	params.PostProcessQuality = PostProcessQuality;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameUserSettings.SetGraphicsQuality
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            InGraphicsQuality              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQGameUserSettings::SetGraphicsQuality(int InGraphicsQuality)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameUserSettings.SetGraphicsQuality");

	USQGameUserSettings_SetGraphicsQuality_Params params;
	params.InGraphicsQuality = InGraphicsQuality;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameUserSettings.SetEffectsQuality
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            EffectsQuality                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQGameUserSettings::SetEffectsQuality(int EffectsQuality)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameUserSettings.SetEffectsQuality");

	USQGameUserSettings_SetEffectsQuality_Params params;
	params.EffectsQuality = EffectsQuality;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameUserSettings.SetActiveAudioOutputDevice
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// struct FString                 InDevice                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQGameUserSettings::SetActiveAudioOutputDevice(const struct FString& InDevice)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameUserSettings.SetActiveAudioOutputDevice");

	USQGameUserSettings_SetActiveAudioOutputDevice_Params params;
	params.InDevice = InDevice;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameUserSettings.SetActiveAudioInputDevice
// (Final, Native, Private, BlueprintCallable)
// Parameters:
// struct FString                 InDevice                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQGameUserSettings::SetActiveAudioInputDevice(const struct FString& InDevice)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameUserSettings.SetActiveAudioInputDevice");

	USQGameUserSettings_SetActiveAudioInputDevice_Params params;
	params.InDevice = InDevice;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameUserSettings.IsSteamItemEnabled
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            ItemId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQGameUserSettings::IsSteamItemEnabled(int ItemId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameUserSettings.IsSteamItemEnabled");

	USQGameUserSettings_IsSteamItemEnabled_Params params;
	params.ItemId = ItemId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameUserSettings.GetAvailableAudioOutputDevice
// (Final, Native, Private, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<struct FString>         OutAvailableDevice             (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// struct FString                 OutCurrentDevice               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQGameUserSettings::GetAvailableAudioOutputDevice(TArray<struct FString>* OutAvailableDevice, struct FString* OutCurrentDevice)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameUserSettings.GetAvailableAudioOutputDevice");

	USQGameUserSettings_GetAvailableAudioOutputDevice_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutAvailableDevice != nullptr)
		*OutAvailableDevice = params.OutAvailableDevice;
	if (OutCurrentDevice != nullptr)
		*OutCurrentDevice = params.OutCurrentDevice;

}


// Function Squad.SQGameUserSettings.GetActiveAudioInputDevice
// (Final, Native, Private, HasOutParms, BlueprintCallable)
// Parameters:
// struct FString                 OutCurrentDevice               (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQGameUserSettings::GetActiveAudioInputDevice(struct FString* OutCurrentDevice)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameUserSettings.GetActiveAudioInputDevice");

	USQGameUserSettings_GetActiveAudioInputDevice_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutCurrentDevice != nullptr)
		*OutCurrentDevice = params.OutCurrentDevice;

}


// Function Squad.SQGameUserSettings.BPSetMSAACompositingSampleCount
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            InMSAACompositingSampleCount   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQGameUserSettings::BPSetMSAACompositingSampleCount(int InMSAACompositingSampleCount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameUserSettings.BPSetMSAACompositingSampleCount");

	USQGameUserSettings_BPSetMSAACompositingSampleCount_Params params;
	params.InMSAACompositingSampleCount = InMSAACompositingSampleCount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameUserSettings.BPGetMSAACompositingSampleCount
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int USQGameUserSettings::BPGetMSAACompositingSampleCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameUserSettings.BPGetMSAACompositingSampleCount");

	USQGameUserSettings_BPGetMSAACompositingSampleCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameUserSettings.BlueprintSetVSync
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           bEnable                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQGameUserSettings::BlueprintSetVSync(bool bEnable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameUserSettings.BlueprintSetVSync");

	USQGameUserSettings_BlueprintSetVSync_Params params;
	params.bEnable = bEnable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameUserSettings.BlueprintSetToDefaults
// (Native, Public, BlueprintCallable)
void USQGameUserSettings::BlueprintSetToDefaults()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameUserSettings.BlueprintSetToDefaults");

	USQGameUserSettings_BlueprintSetToDefaults_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameUserSettings.BlueprintSetSoundsToDefaults
// (Native, Public, BlueprintCallable)
void USQGameUserSettings::BlueprintSetSoundsToDefaults()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameUserSettings.BlueprintSetSoundsToDefaults");

	USQGameUserSettings_BlueprintSetSoundsToDefaults_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameUserSettings.BlueprintSetScreenResolution
// (Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FIntPoint               Resolution                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQGameUserSettings::BlueprintSetScreenResolution(const struct FIntPoint& Resolution)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameUserSettings.BlueprintSetScreenResolution");

	USQGameUserSettings_BlueprintSetScreenResolution_Params params;
	params.Resolution = Resolution;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameUserSettings.BlueprintSetKeysToDefaults
// (Native, Public, BlueprintCallable)
void USQGameUserSettings::BlueprintSetKeysToDefaults()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameUserSettings.BlueprintSetKeysToDefaults");

	USQGameUserSettings_BlueprintSetKeysToDefaults_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameUserSettings.BlueprintSetGraphicsToDefaults
// (Native, Public, BlueprintCallable)
void USQGameUserSettings::BlueprintSetGraphicsToDefaults()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameUserSettings.BlueprintSetGraphicsToDefaults");

	USQGameUserSettings_BlueprintSetGraphicsToDefaults_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameUserSettings.BlueprintSetGameToDefaults
// (Native, Public, BlueprintCallable)
void USQGameUserSettings::BlueprintSetGameToDefaults()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameUserSettings.BlueprintSetGameToDefaults");

	USQGameUserSettings_BlueprintSetGameToDefaults_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameUserSettings.BlueprintSetFullscreenMode
// (Native, Public, BlueprintCallable)
// Parameters:
// int                            InFullscreenMode               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQGameUserSettings::BlueprintSetFullscreenMode(int InFullscreenMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameUserSettings.BlueprintSetFullscreenMode");

	USQGameUserSettings_BlueprintSetFullscreenMode_Params params;
	params.InFullscreenMode = InFullscreenMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameUserSettings.BlueprintResetToCurrentSettings
// (Native, Public, BlueprintCallable)
void USQGameUserSettings::BlueprintResetToCurrentSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameUserSettings.BlueprintResetToCurrentSettings");

	USQGameUserSettings_BlueprintResetToCurrentSettings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameUserSettings.BlueprintResetLocalAppdata
// (Native, Public, BlueprintCallable)
void USQGameUserSettings::BlueprintResetLocalAppdata()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameUserSettings.BlueprintResetLocalAppdata");

	USQGameUserSettings_BlueprintResetLocalAppdata_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameUserSettings.BlueprintGetVSync
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQGameUserSettings::BlueprintGetVSync()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameUserSettings.BlueprintGetVSync");

	USQGameUserSettings_BlueprintGetVSync_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameUserSettings.BlueprintGetScreenResolution
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FIntPoint               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FIntPoint USQGameUserSettings::BlueprintGetScreenResolution()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameUserSettings.BlueprintGetScreenResolution");

	USQGameUserSettings_BlueprintGetScreenResolution_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameUserSettings.BlueprintGetQualityLevels
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// int                            ResolutionQuality              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ViewDistanceQuality            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            AntiAliasingQuality            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OutShadowQuality               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            PostProcessQuality             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            TextureQuality                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            EffectsQuality                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            FoliageQuality                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ScreenEffects                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQGameUserSettings::BlueprintGetQualityLevels(int* ResolutionQuality, int* ViewDistanceQuality, int* AntiAliasingQuality, int* OutShadowQuality, int* PostProcessQuality, int* TextureQuality, int* EffectsQuality, int* FoliageQuality, int* ScreenEffects)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameUserSettings.BlueprintGetQualityLevels");

	USQGameUserSettings_BlueprintGetQualityLevels_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (ResolutionQuality != nullptr)
		*ResolutionQuality = params.ResolutionQuality;
	if (ViewDistanceQuality != nullptr)
		*ViewDistanceQuality = params.ViewDistanceQuality;
	if (AntiAliasingQuality != nullptr)
		*AntiAliasingQuality = params.AntiAliasingQuality;
	if (OutShadowQuality != nullptr)
		*OutShadowQuality = params.OutShadowQuality;
	if (PostProcessQuality != nullptr)
		*PostProcessQuality = params.PostProcessQuality;
	if (TextureQuality != nullptr)
		*TextureQuality = params.TextureQuality;
	if (EffectsQuality != nullptr)
		*EffectsQuality = params.EffectsQuality;
	if (FoliageQuality != nullptr)
		*FoliageQuality = params.FoliageQuality;
	if (ScreenEffects != nullptr)
		*ScreenEffects = params.ScreenEffects;

}


// Function Squad.SQGameUserSettings.BlueprintGetFullscreenMode
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int USQGameUserSettings::BlueprintGetFullscreenMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameUserSettings.BlueprintGetFullscreenMode");

	USQGameUserSettings_BlueprintGetFullscreenMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameUserSettings.BlueprintApplySettings
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           bCheckForCommandLineOverrides  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQGameUserSettings::BlueprintApplySettings(bool bCheckForCommandLineOverrides)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameUserSettings.BlueprintApplySettings");

	USQGameUserSettings_BlueprintApplySettings_Params params;
	params.bCheckForCommandLineOverrides = bCheckForCommandLineOverrides;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameUserSettings.BenchmarkGraphicsSettings
// (Native, Public, BlueprintCallable)
void USQGameUserSettings::BenchmarkGraphicsSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameUserSettings.BenchmarkGraphicsSettings");

	USQGameUserSettings_BenchmarkGraphicsSettings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameSubsystemInterface.InitializeSubsystem
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class USQGameInstance*         SquadGameInstance              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQGameSubsystemInterface::InitializeSubsystem(class USQGameInstance* SquadGameInstance)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameSubsystemInterface.InitializeSubsystem");

	USQGameSubsystemInterface_InitializeSubsystem_Params params;
	params.SquadGameInstance = SquadGameInstance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameSession.SetServerPassword
// (Native, Public)
// Parameters:
// struct FString                 ServerPassword                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameSession::SetServerPassword(const struct FString& ServerPassword)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameSession.SetServerPassword");

	ASQGameSession_SetServerPassword_Params params;
	params.ServerPassword = ServerPassword;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameSession.SetPublicQueueLimit
// (Native, Public)
// Parameters:
// int                            PublicQueueLimit               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameSession::SetPublicQueueLimit(int PublicQueueLimit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameSession.SetPublicQueueLimit");

	ASQGameSession_SetPublicQueueLimit_Params params;
	params.PublicQueueLimit = PublicQueueLimit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameSession.SetNumReservedSlots
// (Native, Public)
// Parameters:
// int                            NumReserved                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameSession::SetNumReservedSlots(int NumReserved)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameSession.SetNumReservedSlots");

	ASQGameSession_SetNumReservedSlots_Params params;
	params.NumReserved = NumReserved;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameSession.SetMaxNumPlayers
// (Native, Public)
// Parameters:
// int                            NumPlayers                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIgnoreRestrictions            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameSession::SetMaxNumPlayers(int NumPlayers, bool bIgnoreRestrictions)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameSession.SetMaxNumPlayers");

	ASQGameSession_SetMaxNumPlayers_Params params;
	params.NumPlayers = NumPlayers;
	params.bIgnoreRestrictions = bIgnoreRestrictions;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameSession.Logout
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQGameSession::Logout()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameSession.Logout");

	ASQGameSession_Logout_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameSession.Login
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 LoginName                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 InPassword                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQGameSession::Login(const struct FString& LoginName, const struct FString& InPassword)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameSession.Login");

	ASQGameSession_Login_Params params;
	params.LoginName = LoginName;
	params.InPassword = InPassword;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameSession.IsLoginBusy
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQGameSession::IsLoginBusy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameSession.IsLoginBusy");

	ASQGameSession_IsLoginBusy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameSession.IsLoggedIn
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQGameSession::IsLoggedIn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameSession.IsLoggedIn");

	ASQGameSession_IsLoggedIn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameSession.GetSquadConfig
// (Native, Public)
// Parameters:
// class USQConfig*               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USQConfig* ASQGameSession::GetSquadConfig()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameSession.GetSquadConfig");

	ASQGameSession_GetSquadConfig_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameSession.GetLastLoginError
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString ASQGameSession::GetLastLoginError()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameSession.GetLastLoginError");

	ASQGameSession_GetLastLoginError_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameMode.VehicleDestroyed
// (Native, Public, BlueprintCallable)
// Parameters:
// class AController*             Killer                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*             KilledPlayer                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                   KilledPawn                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDamageType*             DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameMode::VehicleDestroyed(class AController* Killer, class AController* KilledPlayer, class APawn* KilledPawn, class UDamageType* DamageType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameMode.VehicleDestroyed");

	ASQGameMode_VehicleDestroyed_Params params;
	params.Killer = Killer;
	params.KilledPlayer = KilledPlayer;
	params.KilledPawn = KilledPawn;
	params.DamageType = DamageType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameMode.UnregisterImportantActor
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameMode::UnregisterImportantActor(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameMode.UnregisterImportantActor");

	ASQGameMode_UnregisterImportantActor_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameMode.TryToChangePlayersTeam
// (Native, Public, BlueprintCallable)
// Parameters:
// class ASQPlayerController*     PlayerToChange                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            TeamToChangeTo                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bForceChange                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQGameMode::TryToChangePlayersTeam(class ASQPlayerController* PlayerToChange, int TeamToChangeTo, bool bForceChange)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameMode.TryToChangePlayersTeam");

	ASQGameMode_TryToChangePlayersTeam_Params params;
	params.PlayerToChange = PlayerToChange;
	params.TeamToChangeTo = TeamToChangeTo;
	params.bForceChange = bForceChange;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameMode.SetNextMapInRotation
// (Exec, Native, Public)
void ASQGameMode::SetNextMapInRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameMode.SetNextMapInRotation");

	ASQGameMode_SetNextMapInRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameMode.RequestPlaceDeployable
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FTransform              SpawnLocation                  (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// class ASQPlayerController*     PlayerController               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameMode::RequestPlaceDeployable(const struct FTransform& SpawnLocation, class ASQPlayerController* PlayerController)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameMode.RequestPlaceDeployable");

	ASQGameMode_RequestPlaceDeployable_Params params;
	params.SpawnLocation = SpawnLocation;
	params.PlayerController = PlayerController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameMode.RegisterRuleSet
// (Final, Native, Private)
// Parameters:
// class ASQGameRuleSet*          RuleSet                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameMode::RegisterRuleSet(class ASQGameRuleSet* RuleSet)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameMode.RegisterRuleSet");

	ASQGameMode_RegisterRuleSet_Params params;
	params.RuleSet = RuleSet;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameMode.RegisterImportantActor
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameMode::RegisterImportantActor(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameMode.RegisterImportantActor");

	ASQGameMode_RegisterImportantActor_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameMode.PlayerWounded
// (Native, Public, BlueprintCallable)
// Parameters:
// class AController*             Killer                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*             KilledPlayer                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                   KilledPawn                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDamageType*             DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameMode::PlayerWounded(class AController* Killer, class AController* KilledPlayer, class APawn* KilledPawn, class UDamageType* DamageType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameMode.PlayerWounded");

	ASQGameMode_PlayerWounded_Params params;
	params.Killer = Killer;
	params.KilledPlayer = KilledPlayer;
	params.KilledPawn = KilledPawn;
	params.DamageType = DamageType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameMode.PlayerRevived
// (Native, Public, BlueprintCallable)
// Parameters:
// class AController*             Reviver                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*             RevivedPlayer                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameMode::PlayerRevived(class AController* Reviver, class AController* RevivedPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameMode.PlayerRevived");

	ASQGameMode_PlayerRevived_Params params;
	params.Reviver = Reviver;
	params.RevivedPlayer = RevivedPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameMode.PlayerHealed
// (Native, Public, BlueprintCallable)
// Parameters:
// class AController*             Healer                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*             HealedPlayer                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameMode::PlayerHealed(class AController* Healer, class AController* HealedPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameMode.PlayerHealed");

	ASQGameMode_PlayerHealed_Params params;
	params.Healer = Healer;
	params.HealedPlayer = HealedPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameMode.PlayerDied
// (Native, Public, BlueprintCallable)
// Parameters:
// class AController*             Killer                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*             KilledPlayer                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class APawn*                   KilledPawn                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UDamageType*             DamageType                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameMode::PlayerDied(class AController* Killer, class AController* KilledPlayer, class APawn* KilledPawn, class UDamageType* DamageType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameMode.PlayerDied");

	ASQGameMode_PlayerDied_Params params;
	params.Killer = Killer;
	params.KilledPlayer = KilledPlayer;
	params.KilledPawn = KilledPawn;
	params.DamageType = DamageType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameMode.PlayerBandaged
// (Native, Public, BlueprintCallable)
// Parameters:
// class AController*             Bandager                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*             BandagedPlayer                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameMode::PlayerBandaged(class AController* Bandager, class AController* BandagedPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameMode.PlayerBandaged");

	ASQGameMode_PlayerBandaged_Params params;
	params.Bandager = Bandager;
	params.BandagedPlayer = BandagedPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameMode.OnPlayerChangedTeams
// (Final, Native, Public)
// Parameters:
// class ASQPlayerController*     PlayerWhoSwitched              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameMode::OnPlayerChangedTeams(class ASQPlayerController* PlayerWhoSwitched)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameMode.OnPlayerChangedTeams");

	ASQGameMode_OnPlayerChangedTeams_Params params;
	params.PlayerWhoSwitched = PlayerWhoSwitched;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameMode.LogisticsDropOff
// (Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  VehicleActor                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          AmmoDroppedOff                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ConstructionDroppedOff         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameMode::LogisticsDropOff(class AActor* VehicleActor, float AmmoDroppedOff, float ConstructionDroppedOff)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameMode.LogisticsDropOff");

	ASQGameMode_LogisticsDropOff_Params params;
	params.VehicleActor = VehicleActor;
	params.AmmoDroppedOff = AmmoDroppedOff;
	params.ConstructionDroppedOff = ConstructionDroppedOff;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameMode.IsDeployNow
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class APlayerController*       PC                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQGameMode::IsDeployNow(class APlayerController* PC)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameMode.IsDeployNow");

	ASQGameMode_IsDeployNow_Params params;
	params.PC = PC;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameMode.GetTeam
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESQTeam                        Team                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQTeam*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASQTeam* ASQGameMode::GetTeam(ESQTeam Team)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameMode.GetTeam");

	ASQGameMode_GetTeam_Params params;
	params.Team = Team;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameMode.GetNextMapDisplayName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString ASQGameMode::GetNextMapDisplayName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameMode.GetNextMapDisplayName");

	ASQGameMode_GetNextMapDisplayName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameMode.GetDisplayNameArray
// (Final, Native, Public, HasOutParms, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TArray<struct FString>         OutArray                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
void ASQGameMode::GetDisplayNameArray(TArray<struct FString>* OutArray)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameMode.GetDisplayNameArray");

	ASQGameMode_GetDisplayNameArray_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutArray != nullptr)
		*OutArray = params.OutArray;

}


// Function Squad.SQGameMode.GetDisplayName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString ASQGameMode::GetDisplayName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameMode.GetDisplayName");

	ASQGameMode_GetDisplayName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameMode.GetCurrentMapDisplayName
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString ASQGameMode::GetCurrentMapDisplayName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameMode.GetCurrentMapDisplayName");

	ASQGameMode_GetCurrentMapDisplayName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameMode.GetConcretePawnClassForController
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class AController*             InController                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UClass* ASQGameMode::GetConcretePawnClassForController(class AController* InController)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameMode.GetConcretePawnClassForController");

	ASQGameMode_GetConcretePawnClassForController_Params params;
	params.InController = InController;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameMode.BP_InvalidatePlacement
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ASQPlayerController*     PlayerController               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQDeployable*           Deployable                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESQInvalidPlacementReason      FailureReason                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameMode::BP_InvalidatePlacement(class ASQPlayerController* PlayerController, class ASQDeployable* Deployable, ESQInvalidPlacementReason FailureReason)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameMode.BP_InvalidatePlacement");

	ASQGameMode_BP_InvalidatePlacement_Params params;
	params.PlayerController = PlayerController;
	params.Deployable = Deployable;
	params.FailureReason = FailureReason;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameMode.BP_InitializeDeployableFromEquippable
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ASQDeployableItem*       DeployableItem                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQEquipableItem*        Equippable                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameMode::BP_InitializeDeployableFromEquippable(class ASQDeployableItem* DeployableItem, class ASQEquipableItem* Equippable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameMode.BP_InitializeDeployableFromEquippable");

	ASQGameMode_BP_InitializeDeployableFromEquippable_Params params;
	params.DeployableItem = DeployableItem;
	params.Equippable = Equippable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameMode.BP_FailPlaceDeployableFromEquippable
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ASQEquipableItem*        Equippable                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameMode::BP_FailPlaceDeployableFromEquippable(class ASQEquipableItem* Equippable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameMode.BP_FailPlaceDeployableFromEquippable");

	ASQGameMode_BP_FailPlaceDeployableFromEquippable_Params params;
	params.Equippable = Equippable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameMode.AllowTeamChange
// (Final, Native, Public)
// Parameters:
// class ASQPlayerController*     RequestingPlayer               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            NewTeam                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQGameMode::AllowTeamChange(class ASQPlayerController* RequestingPlayer, int NewTeam)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameMode.AllowTeamChange");

	ASQGameMode_AllowTeamChange_Params params;
	params.RequestingPlayer = RequestingPlayer;
	params.NewTeam = NewTeam;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameInstance.VerifyPassword
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FBlueprintSessionResult BlueprintSessionResult         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FString                 UserPassword                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQGameInstance::VerifyPassword(const struct FBlueprintSessionResult& BlueprintSessionResult, const struct FString& UserPassword)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameInstance.VerifyPassword");

	USQGameInstance_VerifyPassword_Params params;
	params.BlueprintSessionResult = BlueprintSessionResult;
	params.UserPassword = UserPassword;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameInstance.StopMusic
// (Final, Native, Public, BlueprintCallable)
void USQGameInstance::StopMusic()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameInstance.StopMusic");

	USQGameInstance_StopMusic_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameInstance.SendTicketToEAC
// (Final, Native, Private)
// Parameters:
// bool                           bEncryptedDataAvailable        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ResultCode                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQGameInstance::SendTicketToEAC(bool bEncryptedDataAvailable, int ResultCode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameInstance.SendTicketToEAC");

	USQGameInstance_SendTicketToEAC_Params params;
	params.bEncryptedDataAvailable = bEncryptedDataAvailable;
	params.ResultCode = ResultCode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameInstance.QueueForServer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USQServerListItemWidget* SessionWidget                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQGameInstance::QueueForServer(class UObject* WorldContextObject, class USQServerListItemWidget* SessionWidget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameInstance.QueueForServer");

	USQGameInstance_QueueForServer_Params params;
	params.WorldContextObject = WorldContextObject;
	params.SessionWidget = SessionWidget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameInstance.PlayMusic
// (Final, Native, Public, BlueprintCallable)
void USQGameInstance::PlayMusic()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameInstance.PlayMusic");

	USQGameInstance_PlayMusic_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameInstance.IsSteamConnected
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQGameInstance::IsSteamConnected()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameInstance.IsSteamConnected");

	USQGameInstance_IsSteamConnected_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameInstance.HostGame
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ULocalPlayer*            LocalPlayer                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 GameType                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 InTravelURL                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQGameInstance::HostGame(class ULocalPlayer* LocalPlayer, const struct FString& GameType, const struct FString& InTravelURL)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameInstance.HostGame");

	USQGameInstance_HostGame_Params params;
	params.LocalPlayer = LocalPlayer;
	params.GameType = GameType;
	params.InTravelURL = InTravelURL;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameInstance.GotoMainMenu
// (Final, Native, Public, BlueprintCallable)
void USQGameInstance::GotoMainMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameInstance.GotoMainMenu");

	USQGameInstance_GotoMainMenu_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameInstance.GetSquadUISettings
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class USQUISettings*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USQUISettings* USQGameInstance::GetSquadUISettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameInstance.GetSquadUISettings");

	USQGameInstance_GetSquadUISettings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameInstance.GetServerURL
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBlueprintSessionResult BlueprintSessionResult         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString USQGameInstance::STATIC_GetServerURL(class UObject* WorldContextObject, const struct FBlueprintSessionResult& BlueprintSessionResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameInstance.GetServerURL");

	USQGameInstance_GetServerURL_Params params;
	params.WorldContextObject = WorldContextObject;
	params.BlueprintSessionResult = BlueprintSessionResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameInstance.GetRandomMapPath
// (Exec, Native, Public)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString USQGameInstance::GetRandomMapPath()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameInstance.GetRandomMapPath");

	USQGameInstance_GetRandomMapPath_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameInstance.GetGameInstanceEvents
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USQGameInstanceEvents*   ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USQGameInstanceEvents* USQGameInstance::GetGameInstanceEvents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameInstance.GetGameInstanceEvents");

	USQGameInstance_GetGameInstanceEvents_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameInstance.GetCurrentMapPath
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString USQGameInstance::GetCurrentMapPath()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameInstance.GetCurrentMapPath");

	USQGameInstance_GetCurrentMapPath_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameInstance.DisconnectToMenu
// (Exec, Native, Public)
void USQGameInstance::DisconnectToMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameInstance.DisconnectToMenu");

	USQGameInstance_DisconnectToMenu_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameInstance.CheckConnectionToServer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USQServerListItemWidget* SessionWidget                  (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQGameInstance::CheckConnectionToServer(class UObject* WorldContextObject, class USQServerListItemWidget* SessionWidget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameInstance.CheckConnectionToServer");

	USQGameInstance_CheckConnectionToServer_Params params;
	params.WorldContextObject = WorldContextObject;
	params.SessionWidget = SessionWidget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameState.SetRemainingTime
// (Native, Public)
// Parameters:
// int                            Seconds                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQGameState::SetRemainingTime(int Seconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameState.SetRemainingTime");

	ASQGameState_SetRemainingTime_Params params;
	params.Seconds = Seconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameState.RequestFinishAndExitToMainMenu
// (Final, Native, Public)
void ASQGameState::RequestFinishAndExitToMainMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameState.RequestFinishAndExitToMainMenu");

	ASQGameState_RequestFinishAndExitToMainMenu_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameState.RefreshTeamStates
// (Final, Native, Public)
void ASQGameState::RefreshTeamStates()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameState.RefreshTeamStates");

	ASQGameState_RefreshTeamStates_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameState.OnRep_ServerStartTimeStamp
// (Final, Native, Public)
void ASQGameState::OnRep_ServerStartTimeStamp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameState.OnRep_ServerStartTimeStamp");

	ASQGameState_OnRep_ServerStartTimeStamp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameState.OnRep_ServerName
// (Final, Native, Public)
void ASQGameState::OnRep_ServerName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameState.OnRep_ServerName");

	ASQGameState_OnRep_ServerName_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameState.OnRep_NeutralTeamInfoClass
// (Final, Native, Public)
void ASQGameState::OnRep_NeutralTeamInfoClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameState.OnRep_NeutralTeamInfoClass");

	ASQGameState_OnRep_NeutralTeamInfoClass_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameState.OnRep_MaxPlayers
// (Final, Native, Public)
void ASQGameState::OnRep_MaxPlayers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameState.OnRep_MaxPlayers");

	ASQGameState_OnRep_MaxPlayers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameState.OnRep_IndexedTeamStates
// (Final, Native, Public)
void ASQGameState::OnRep_IndexedTeamStates()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameState.OnRep_IndexedTeamStates");

	ASQGameState_OnRep_IndexedTeamStates_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameState.OnRep_GameModeRules
// (Final, Native, Public)
void ASQGameState::OnRep_GameModeRules()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameState.OnRep_GameModeRules");

	ASQGameState_OnRep_GameModeRules_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGameState.GetRemainingTime
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int ASQGameState::GetRemainingTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameState.GetRemainingTime");

	ASQGameState_GetRemainingTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameState.GetMarkerManager
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USQMapMarkerManagerComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USQMapMarkerManagerComponent* ASQGameState::GetMarkerManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameState.GetMarkerManager");

	ASQGameState_GetMarkerManager_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQGameState.AddGameModeRules
// (Native, Public)
// Parameters:
// TArray<struct FSQGameModeRules> InGameModeRules                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
void ASQGameState::AddGameModeRules(TArray<struct FSQGameModeRules> InGameModeRules)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGameState.AddGameModeRules");

	ASQGameState_AddGameModeRules_Params params;
	params.InGameModeRules = InGameModeRules;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQFriendsBrowserWidget.StartFindFriends
// (Final, Native, Private, BlueprintCallable)
void USQFriendsBrowserWidget::StartFindFriends()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFriendsBrowserWidget.StartFindFriends");

	USQFriendsBrowserWidget_StartFindFriends_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQFriendsBrowserWidget.OnSuccess
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// TArray<struct FSQBlueprintFriend> Results                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
void USQFriendsBrowserWidget::OnSuccess(TArray<struct FSQBlueprintFriend> Results)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFriendsBrowserWidget.OnSuccess");

	USQFriendsBrowserWidget_OnSuccess_Params params;
	params.Results = Results;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQFriendsBrowserWidget.OnFindFriendsCompleted
// (Final, Native, Private, HasOutParms)
// Parameters:
// TArray<struct FSQBlueprintFriend> Results                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                           bSuccess                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQFriendsBrowserWidget::OnFindFriendsCompleted(TArray<struct FSQBlueprintFriend> Results, bool bSuccess)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFriendsBrowserWidget.OnFindFriendsCompleted");

	USQFriendsBrowserWidget_OnFindFriendsCompleted_Params params;
	params.Results = Results;
	params.bSuccess = bSuccess;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQFriendsBrowserWidget.OnFailure
// (Event, Public, BlueprintEvent)
void USQFriendsBrowserWidget::OnFailure()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFriendsBrowserWidget.OnFailure");

	USQFriendsBrowserWidget_OnFailure_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQFreeLookInterface.SetIsToggleActive
// (Native, Public, BlueprintCallable)
// Parameters:
// bool                           bNewState                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQFreeLookInterface::SetIsToggleActive(bool bNewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFreeLookInterface.SetIsToggleActive");

	USQFreeLookInterface_SetIsToggleActive_Params params;
	params.bNewState = bNewState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQFreeLookInterface.GetIsUsingFreeLook
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQFreeLookInterface::GetIsUsingFreeLook()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFreeLookInterface.GetIsUsingFreeLook");

	USQFreeLookInterface_GetIsUsingFreeLook_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQFreeLookInterface.GetFreeLookComponent
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USQFreeLookComponent*    ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USQFreeLookComponent* USQFreeLookInterface::GetFreeLookComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFreeLookInterface.GetFreeLookComponent");

	USQFreeLookInterface_GetFreeLookComponent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQFreeLookInterface.CalculateFreeLookRotation
// (Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
struct FRotator USQFreeLookInterface::CalculateFreeLookRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFreeLookInterface.CalculateFreeLookRotation");

	USQFreeLookInterface_CalculateFreeLookRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQFreeLookComponent.SetYawLimits
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D               NewYawLimits                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQFreeLookComponent::SetYawLimits(const struct FVector2D& NewYawLimits)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFreeLookComponent.SetYawLimits");

	USQFreeLookComponent_SetYawLimits_Params params;
	params.NewYawLimits = NewYawLimits;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQFreeLookComponent.SetRotationSpeed
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D               NewRotationSpeed               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQFreeLookComponent::SetRotationSpeed(const struct FVector2D& NewRotationSpeed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFreeLookComponent.SetRotationSpeed");

	USQFreeLookComponent_SetRotationSpeed_Params params;
	params.NewRotationSpeed = NewRotationSpeed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQFreeLookComponent.SetReplicateFreeLookRotation
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bNewBool                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQFreeLookComponent::SetReplicateFreeLookRotation(bool bNewBool)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFreeLookComponent.SetReplicateFreeLookRotation");

	USQFreeLookComponent_SetReplicateFreeLookRotation_Params params;
	params.bNewBool = bNewBool;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQFreeLookComponent.SetPitchLimits
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector2D               NewPitchLimits                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQFreeLookComponent::SetPitchLimits(const struct FVector2D& NewPitchLimits)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFreeLookComponent.SetPitchLimits");

	USQFreeLookComponent_SetPitchLimits_Params params;
	params.NewPitchLimits = NewPitchLimits;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQFreeLookComponent.SetIsToggleActive
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bNewState                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQFreeLookComponent::SetIsToggleActive(bool bNewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFreeLookComponent.SetIsToggleActive");

	USQFreeLookComponent_SetIsToggleActive_Params params;
	params.bNewState = bNewState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQFreeLookComponent.SetFreeLookRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FRotator                NewFreeLookRotator             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
void USQFreeLookComponent::SetFreeLookRotation(const struct FRotator& NewFreeLookRotator)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFreeLookComponent.SetFreeLookRotation");

	USQFreeLookComponent_SetFreeLookRotation_Params params;
	params.NewFreeLookRotator = NewFreeLookRotator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQFreeLookComponent.SetFreeLookMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EFreeLookMode                  NewFreeLookMode                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQFreeLookComponent::SetFreeLookMode(EFreeLookMode NewFreeLookMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFreeLookComponent.SetFreeLookMode");

	USQFreeLookComponent_SetFreeLookMode_Params params;
	params.NewFreeLookMode = NewFreeLookMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQFreeLookComponent.SetFreelookCanRecenterWeapons
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bNewBool                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQFreeLookComponent::SetFreelookCanRecenterWeapons(bool bNewBool)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFreeLookComponent.SetFreelookCanRecenterWeapons");

	USQFreeLookComponent_SetFreelookCanRecenterWeapons_Params params;
	params.bNewBool = bNewBool;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQFreeLookComponent.SetFreeLookCamera
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UCameraComponent*        NewCamera                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQFreeLookComponent::SetFreeLookCamera(class UCameraComponent* NewCamera)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFreeLookComponent.SetFreeLookCamera");

	USQFreeLookComponent_SetFreeLookCamera_Params params;
	params.NewCamera = NewCamera;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQFreeLookComponent.SetCanFreelookWhileADS
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bNewBool                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQFreeLookComponent::SetCanFreelookWhileADS(bool bNewBool)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFreeLookComponent.SetCanFreelookWhileADS");

	USQFreeLookComponent_SetCanFreelookWhileADS_Params params;
	params.bNewBool = bNewBool;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQFreeLookComponent.ServerSetFreeLookRotation
// (Final, Net, Native, Event, Private, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FRotator                NewFreeLookRotation            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
void USQFreeLookComponent::ServerSetFreeLookRotation(const struct FRotator& NewFreeLookRotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFreeLookComponent.ServerSetFreeLookRotation");

	USQFreeLookComponent_ServerSetFreeLookRotation_Params params;
	params.NewFreeLookRotation = NewFreeLookRotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQFreeLookComponent.ResetFreeLook
// (Final, Native, Public, BlueprintCallable)
void USQFreeLookComponent::ResetFreeLook()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFreeLookComponent.ResetFreeLook");

	USQFreeLookComponent_ResetFreeLook_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQFreeLookComponent.OnRep_ReplicatedFreeLookRot
// (Final, Native, Private)
void USQFreeLookComponent::OnRep_ReplicatedFreeLookRot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFreeLookComponent.OnRep_ReplicatedFreeLookRot");

	USQFreeLookComponent_OnRep_ReplicatedFreeLookRot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQFreeLookComponent.GetYawLimits
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector2D USQFreeLookComponent::GetYawLimits()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFreeLookComponent.GetYawLimits");

	USQFreeLookComponent_GetYawLimits_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQFreeLookComponent.GetRotationSpeed
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector2D USQFreeLookComponent::GetRotationSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFreeLookComponent.GetRotationSpeed");

	USQFreeLookComponent_GetRotationSpeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQFreeLookComponent.GetPitchLimits
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector2D USQFreeLookComponent::GetPitchLimits()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFreeLookComponent.GetPitchLimits");

	USQFreeLookComponent_GetPitchLimits_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQFreeLookComponent.GetIsUsingFreeLook
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQFreeLookComponent::GetIsUsingFreeLook()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFreeLookComponent.GetIsUsingFreeLook");

	USQFreeLookComponent_GetIsUsingFreeLook_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQFreeLookComponent.GetIsFreeLookComponentActive
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQFreeLookComponent::GetIsFreeLookComponentActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFreeLookComponent.GetIsFreeLookComponentActive");

	USQFreeLookComponent_GetIsFreeLookComponentActive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQFreeLookComponent.GetFreelookCanRecenterWeapons
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQFreeLookComponent::GetFreelookCanRecenterWeapons()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFreeLookComponent.GetFreelookCanRecenterWeapons");

	USQFreeLookComponent_GetFreelookCanRecenterWeapons_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQFreeLookComponent.GetFreeLookCamera
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UCameraComponent*        ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UCameraComponent* USQFreeLookComponent::GetFreeLookCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFreeLookComponent.GetFreeLookCamera");

	USQFreeLookComponent_GetFreeLookCamera_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQFreeLookComponent.GetCanFreelookWhileADS
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQFreeLookComponent::GetCanFreelookWhileADS()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFreeLookComponent.GetCanFreelookWhileADS");

	USQFreeLookComponent_GetCanFreelookWhileADS_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQFreeLookComponent.CalculateFreeLookRotation
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FRotator                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
struct FRotator USQFreeLookComponent::CalculateFreeLookRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFreeLookComponent.CalculateFreeLookRotation");

	USQFreeLookComponent_CalculateFreeLookRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQDeployable.UpdateState
// (Final, Native, Public, BlueprintCallable)
void ASQDeployable::UpdateState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployable.UpdateState");

	ASQDeployable_UpdateState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQDeployable.SetTeam
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int                            Team                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQDeployable::SetTeam(int Team)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployable.SetTeam");

	ASQDeployable_SetTeam_Params params;
	params.Team = Team;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQDeployable.SetStateUnbuilt
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
void ASQDeployable::SetStateUnbuilt()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployable.SetStateUnbuilt");

	ASQDeployable_SetStateUnbuilt_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQDeployable.SetStateHalfBuilt
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
void ASQDeployable::SetStateHalfBuilt()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployable.SetStateHalfBuilt");

	ASQDeployable_SetStateHalfBuilt_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQDeployable.SetStateCompleted
// (Final, BlueprintCosmetic, Native, Public, BlueprintCallable)
void ASQDeployable::SetStateCompleted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployable.SetStateCompleted");

	ASQDeployable_SetStateCompleted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQDeployable.RemovedFromPlayersPlacedList
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
void ASQDeployable::RemovedFromPlayersPlacedList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployable.RemovedFromPlayersPlacedList");

	ASQDeployable_RemovedFromPlayersPlacedList_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQDeployable.PushSoldiersOutOfBounds
// (Final, Native, Public, BlueprintCallable)
void ASQDeployable::PushSoldiersOutOfBounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployable.PushSoldiersOutOfBounds");

	ASQDeployable_PushSoldiersOutOfBounds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQDeployable.PreModifyHealth
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                          DeltaHealth                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*             inst                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bCausedByDamage                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ASQDeployable::PreModifyHealth(float DeltaHealth, class AController* inst, bool bCausedByDamage)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployable.PreModifyHealth");

	ASQDeployable_PreModifyHealth_Params params;
	params.DeltaHealth = DeltaHealth;
	params.inst = inst;
	params.bCausedByDamage = bCausedByDamage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQDeployable.PostModifyHealth
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// float                          DeltaHealth                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*             inst                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bCausedByDamage                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQDeployable::PostModifyHealth(float DeltaHealth, class AController* inst, bool bCausedByDamage)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployable.PostModifyHealth");

	ASQDeployable_PostModifyHealth_Params params;
	params.DeltaHealth = DeltaHealth;
	params.inst = inst;
	params.bCausedByDamage = bCausedByDamage;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQDeployable.PlayStateChangeEffects
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESQBuildState                  OldBuildState                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQDeployable::PlayStateChangeEffects(ESQBuildState OldBuildState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployable.PlayStateChangeEffects");

	ASQDeployable_PlayStateChangeEffects_Params params;
	params.OldBuildState = OldBuildState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQDeployable.Placed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
void ASQDeployable::Placed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployable.Placed");

	ASQDeployable_Placed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQDeployable.OnStateChangeClient
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESQBuildState                  OldBuildState                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQDeployable::OnStateChangeClient(ESQBuildState OldBuildState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployable.OnStateChangeClient");

	ASQDeployable_OnStateChangeClient_Params params;
	params.OldBuildState = OldBuildState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQDeployable.OnRep_Team
// (Final, Native, Protected)
void ASQDeployable::OnRep_Team()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployable.OnRep_Team");

	ASQDeployable_OnRep_Team_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQDeployable.OnRep_BuildState
// (Final, Native, Public)
// Parameters:
// ESQBuildState                  OldBuildState                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQDeployable::OnRep_BuildState(ESQBuildState OldBuildState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployable.OnRep_BuildState");

	ASQDeployable_OnRep_BuildState_Params params;
	params.OldBuildState = OldBuildState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQDeployable.OnAttachedActorDestroyed
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                  DestroyedActor                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQDeployable::OnAttachedActorDestroyed(class AActor* DestroyedActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployable.OnAttachedActorDestroyed");

	ASQDeployable_OnAttachedActorDestroyed_Params params;
	params.DestroyedActor = DestroyedActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQDeployable.MulticastPlayDamageEffects
// (Net, Native, Event, NetMulticast, Public, HasDefaults)
// Parameters:
// class UClass*                  DamageTypeClass                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 ImpactLocationZeroBased        (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESQBuildState                  OldBuildState                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESQBuildState                  NewBuildState                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQDeployable::MulticastPlayDamageEffects(class UClass* DamageTypeClass, const struct FVector& ImpactLocationZeroBased, ESQBuildState OldBuildState, ESQBuildState NewBuildState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployable.MulticastPlayDamageEffects");

	ASQDeployable_MulticastPlayDamageEffects_Params params;
	params.DamageTypeClass = DamageTypeClass;
	params.ImpactLocationZeroBased = ImpactLocationZeroBased;
	params.OldBuildState = OldBuildState;
	params.NewBuildState = NewBuildState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQDeployable.MakeGhost
// (Final, Native, Public, BlueprintCallable)
void ASQDeployable::MakeGhost()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployable.MakeGhost");

	ASQDeployable_MakeGhost_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQDeployable.IsValidPlacement
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// ESQInvalidPlacementReason      Reason                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQDeployable::IsValidPlacement(ESQInvalidPlacementReason* Reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployable.IsValidPlacement");

	ASQDeployable_IsValidPlacement_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Reason != nullptr)
		*Reason = params.Reason;


	return params.ReturnValue;
}


// Function Squad.SQDeployable.IsGhost
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQDeployable::IsGhost()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployable.IsGhost");

	ASQDeployable_IsGhost_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQDeployable.IsDeployableEmpty
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQDeployable::IsDeployableEmpty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployable.IsDeployableEmpty");

	ASQDeployable_IsDeployableEmpty_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQDeployable.InvalidatePlacement
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
void ASQDeployable::InvalidatePlacement()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployable.InvalidatePlacement");

	ASQDeployable_InvalidatePlacement_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQDeployable.GoToBuildState
// (Final, BlueprintAuthorityOnly, BlueprintCosmetic, Native, Public, BlueprintCallable)
// Parameters:
// ESQBuildState                  InBuildState                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQDeployable::GoToBuildState(ESQBuildState InBuildState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployable.GoToBuildState");

	ASQDeployable_GoToBuildState_Params params;
	params.InBuildState = InBuildState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQDeployable.GetTrackDeployableResult
// (Native, Public, BlueprintCallable)
// Parameters:
// class ASQPlayerState*          PlayerState                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIncludeSelf                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESQTrackDeployableResult       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
ESQTrackDeployableResult ASQDeployable::GetTrackDeployableResult(class ASQPlayerState* PlayerState, bool bIncludeSelf)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployable.GetTrackDeployableResult");

	ASQDeployable_GetTrackDeployableResult_Params params;
	params.PlayerState = PlayerState;
	params.bIncludeSelf = bIncludeSelf;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQDeployable.GetNearestFOB
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           bIsFriendly                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQForwardBase*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASQForwardBase* ASQDeployable::GetNearestFOB(bool bIsFriendly)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployable.GetNearestFOB");

	ASQDeployable_GetNearestFOB_Params params;
	params.bIsFriendly = bIsFriendly;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQDeployable.GetFailedSpawnReasonText
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESQInvalidPlacementReason      Reason                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FText ASQDeployable::GetFailedSpawnReasonText(ESQInvalidPlacementReason Reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployable.GetFailedSpawnReasonText");

	ASQDeployable_GetFailedSpawnReasonText_Params params;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQDeployable.GetBuildState
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESQBuildState                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
ESQBuildState ASQDeployable::GetBuildState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployable.GetBuildState");

	ASQDeployable_GetBuildState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQDeployable.ExtraPlacementRules
// (Native, Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// ESQInvalidPlacementReason      Reason                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQDeployable::ExtraPlacementRules(ESQInvalidPlacementReason* Reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployable.ExtraPlacementRules");

	ASQDeployable_ExtraPlacementRules_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Reason != nullptr)
		*Reason = params.Reason;


	return params.ReturnValue;
}


// Function Squad.SQDeployable.Die
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// float                          KillingDamage                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class AController*             Killer                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQDeployable::Die(float KillingDamage, const struct FDamageEvent& DamageEvent, class AController* Killer, class AActor* DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployable.Die");

	ASQDeployable_Die_Params params;
	params.KillingDamage = KillingDamage;
	params.DamageEvent = DamageEvent;
	params.Killer = Killer;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQDeployable.ConstructionHit
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASQSoldier*              Activator                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*             inst                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Amount                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQDeployable::ConstructionHit(class ASQSoldier* Activator, class AController* inst, float Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployable.ConstructionHit");

	ASQDeployable_ConstructionHit_Params params;
	params.Activator = Activator;
	params.inst = inst;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQDeployable.CompletedConstruction
// (Native, Event, Public, BlueprintEvent)
void ASQDeployable::CompletedConstruction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployable.CompletedConstruction");

	ASQDeployable_CompletedConstruction_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQDeployable.BPOnGhostMade
// (Event, Public, BlueprintEvent)
void ASQDeployable::BPOnGhostMade()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployable.BPOnGhostMade");

	ASQDeployable_BPOnGhostMade_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQDeployable.BPOnDie
// (Event, Public, HasOutParms, BlueprintEvent)
// Parameters:
// float                          KillingDamage                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDamageEvent            DamageEvent                    (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// class AController*             Killer                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQDeployable::BPOnDie(float KillingDamage, const struct FDamageEvent& DamageEvent, class AController* Killer, class AActor* DamageCauser)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployable.BPOnDie");

	ASQDeployable_BPOnDie_Params params;
	params.KillingDamage = KillingDamage;
	params.DamageEvent = DamageEvent;
	params.Killer = Killer;
	params.DamageCauser = DamageCauser;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQDeployable.BP_OnStateChangeClient
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// ESQBuildState                  OldBuildState                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQDeployable::BP_OnStateChangeClient(ESQBuildState OldBuildState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployable.BP_OnStateChangeClient");

	ASQDeployable_BP_OnStateChangeClient_Params params;
	params.OldBuildState = OldBuildState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQDeployable.BP_OnStateChange
// (Event, Public, BlueprintEvent)
// Parameters:
// ESQBuildState                  OldBuildState                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQDeployable::BP_OnStateChange(ESQBuildState OldBuildState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployable.BP_OnStateChange");

	ASQDeployable_BP_OnStateChange_Params params;
	params.OldBuildState = OldBuildState;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQDeployable.BP_ExtraTrackDeployableRules
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASQPlayerState*          PlayerState                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIncludeSelf                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESQTrackDeployableResult       ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
ESQTrackDeployableResult ASQDeployable::BP_ExtraTrackDeployableRules(class ASQPlayerState* PlayerState, bool bIncludeSelf)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployable.BP_ExtraTrackDeployableRules");

	ASQDeployable_BP_ExtraTrackDeployableRules_Params params;
	params.PlayerState = PlayerState;
	params.bIncludeSelf = bIncludeSelf;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQDeployable.AttachToUnderlyingActor
// (Native, Public, BlueprintCallable)
void ASQDeployable::AttachToUnderlyingActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployable.AttachToUnderlyingActor");

	ASQDeployable_AttachToUnderlyingActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQForwardBase.TryAcceptPlacement
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASQDeployable*           Deployable                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQForwardBase::TryAcceptPlacement(class ASQDeployable* Deployable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQForwardBase.TryAcceptPlacement");

	ASQForwardBase_TryAcceptPlacement_Params params;
	params.Deployable = Deployable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQForwardBase.TrackDeployable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASQDeployable*           Deployable                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQForwardBase::TrackDeployable(class ASQDeployable* Deployable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQForwardBase.TrackDeployable");

	ASQForwardBase_TrackDeployable_Params params;
	params.Deployable = Deployable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQForwardBase.SetSpawnPointsEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQForwardBase::SetSpawnPointsEnabled(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQForwardBase.SetSpawnPointsEnabled");

	ASQForwardBase_SetSpawnPointsEnabled_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQForwardBase.SetSieged
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bValue                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQForwardBase::SetSieged(bool bValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQForwardBase.SetSieged");

	ASQForwardBase_SetSieged_Params params;
	params.bValue = bValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQForwardBase.SetBleedState
// (Final, BlueprintAuthorityOnly, Native, Private, BlueprintCallable)
// Parameters:
// bool                           bNewIsBleeding                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQForwardBase::SetBleedState(bool bNewIsBleeding)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQForwardBase.SetBleedState");

	ASQForwardBase_SetBleedState_Params params;
	params.bNewIsBleeding = bNewIsBleeding;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQForwardBase.Overrun
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bFriendly                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQForwardBase::Overrun(bool bFriendly)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQForwardBase.Overrun");

	ASQForwardBase_Overrun_Params params;
	params.bFriendly = bFriendly;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQForwardBase.OnTrackedDeployableDestroyed
// (Native, Public)
// Parameters:
// class ASQDeployable*           Deployable                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQForwardBase::OnTrackedDeployableDestroyed(class ASQDeployable* Deployable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQForwardBase.OnTrackedDeployableDestroyed");

	ASQForwardBase_OnTrackedDeployableDestroyed_Params params;
	params.Deployable = Deployable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQForwardBase.OnSpawnSiegedStateChanged
// (Final, Native, Private)
// Parameters:
// bool                           bNewState                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQForwardBase::OnSpawnSiegedStateChanged(bool bNewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQForwardBase.OnSpawnSiegedStateChanged");

	ASQForwardBase_OnSpawnSiegedStateChanged_Params params;
	params.bNewState = bNewState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQForwardBase.OnSpawnPointDestroyed
// (Final, Native, Private)
// Parameters:
// class AActor*                  DestroyedActor                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQForwardBase::OnSpawnPointDestroyed(class AActor* DestroyedActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQForwardBase.OnSpawnPointDestroyed");

	ASQForwardBase_OnSpawnPointDestroyed_Params params;
	params.DestroyedActor = DestroyedActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQForwardBase.OnSpawningEnabledChanged
// (Final, Native, Private)
// Parameters:
// bool                           bNewState                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQForwardBase::OnSpawningEnabledChanged(bool bNewState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQForwardBase.OnSpawningEnabledChanged");

	ASQForwardBase_OnSpawningEnabledChanged_Params params;
	params.bNewState = bNewState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQForwardBase.OnRep_TrackedDeployables
// (Native, Public)
void ASQForwardBase::OnRep_TrackedDeployables()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQForwardBase.OnRep_TrackedDeployables");

	ASQForwardBase_OnRep_TrackedDeployables_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQForwardBase.OnRep_SpawnPointsChanged
// (Native, Protected)
void ASQForwardBase::OnRep_SpawnPointsChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQForwardBase.OnRep_SpawnPointsChanged");

	ASQForwardBase_OnRep_SpawnPointsChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQForwardBase.OnRep_SpawningEnabledChanged
// (Native, Protected)
void ASQForwardBase::OnRep_SpawningEnabledChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQForwardBase.OnRep_SpawningEnabledChanged");

	ASQForwardBase_OnRep_SpawningEnabledChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQForwardBase.OnRep_SiegedChanged
// (Native, Protected)
void ASQForwardBase::OnRep_SiegedChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQForwardBase.OnRep_SiegedChanged");

	ASQForwardBase_OnRep_SiegedChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQForwardBase.OnRep_IsBleedingChanged
// (Final, Native, Private)
// Parameters:
// bool                           bPrevIsBleeding                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQForwardBase::OnRep_IsBleedingChanged(bool bPrevIsBleeding)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQForwardBase.OnRep_IsBleedingChanged");

	ASQForwardBase_OnRep_IsBleedingChanged_Params params;
	params.bPrevIsBleeding = bPrevIsBleeding;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQForwardBase.OnRep_ConstructionPointsChanged
// (Native, Protected)
void ASQForwardBase::OnRep_ConstructionPointsChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQForwardBase.OnRep_ConstructionPointsChanged");

	ASQForwardBase_OnRep_ConstructionPointsChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQForwardBase.OnRep_AmmoChanged
// (Native, Protected)
void ASQForwardBase::OnRep_AmmoChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQForwardBase.OnRep_AmmoChanged");

	ASQForwardBase_OnRep_AmmoChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQForwardBase.OnBleedOut
// (Native, Event, Public, BlueprintEvent)
void ASQForwardBase::OnBleedOut()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQForwardBase.OnBleedOut");

	ASQForwardBase_OnBleedOut_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQForwardBase.HasConstructionPointsFor
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          Amount                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQForwardBase::HasConstructionPointsFor(float Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQForwardBase.HasConstructionPointsFor");

	ASQForwardBase_HasConstructionPointsFor_Params params;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQForwardBase.HasAmmoFor
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          Amount                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQForwardBase::HasAmmoFor(float Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQForwardBase.HasAmmoFor");

	ASQForwardBase_HasAmmoFor_Params params;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQForwardBase.GetSpawnPointsEnabled
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQForwardBase::GetSpawnPointsEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQForwardBase.GetSpawnPointsEnabled");

	ASQForwardBase_GetSpawnPointsEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQForwardBase.CreateSpawnPointSeperately
// (Final, Native, Public, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Location                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQGameSpawn*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASQGameSpawn* ASQForwardBase::CreateSpawnPointSeperately(const struct FVector& Location)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQForwardBase.CreateSpawnPointSeperately");

	ASQForwardBase_CreateSpawnPointSeperately_Params params;
	params.Location = Location;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQForwardBase.CreateSpawnPointOnFob
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASQGameSpawn*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASQGameSpawn* ASQForwardBase::CreateSpawnPointOnFob()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQForwardBase.CreateSpawnPointOnFob");

	ASQForwardBase_CreateSpawnPointOnFob_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQForwardBase.ConsumeFOBAmmo
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Amount                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQForwardBase::ConsumeFOBAmmo(float Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQForwardBase.ConsumeFOBAmmo");

	ASQForwardBase_ConsumeFOBAmmo_Params params;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQForwardBase.ConsumeConstructionPoints
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Amount                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQForwardBase::ConsumeConstructionPoints(float Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQForwardBase.ConsumeConstructionPoints");

	ASQForwardBase_ConsumeConstructionPoints_Params params;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQForwardBase.CheckDeploymentRules
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQForwardBase::CheckDeploymentRules()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQForwardBase.CheckDeploymentRules");

	ASQForwardBase_CheckDeploymentRules_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQForwardBase.BPPostTicketTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          Difference                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQForwardBase::BPPostTicketTick(float Difference)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQForwardBase.BPPostTicketTick");

	ASQForwardBase_BPPostTicketTick_Params params;
	params.Difference = Difference;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQForwardBase.BPOverrun
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                           bFriendly                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQForwardBase::BPOverrun(bool bFriendly)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQForwardBase.BPOverrun");

	ASQForwardBase_BPOverrun_Params params;
	params.bFriendly = bFriendly;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQForwardBase.BPOnIsBleedingChanged
// (Event, Public, BlueprintEvent)
void ASQForwardBase::BPOnIsBleedingChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQForwardBase.BPOnIsBleedingChanged");

	ASQForwardBase_BPOnIsBleedingChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQFoliageBender.GetSoldierLocationAndSpread
// (Final, Native, Protected, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class ASQSoldier*              Soldier                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          X                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Y                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Z                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          SpreadMultiplier               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQFoliageBender::GetSoldierLocationAndSpread(class ASQSoldier* Soldier, float* X, float* Y, float* Z, float* SpreadMultiplier)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFoliageBender.GetSoldierLocationAndSpread");

	ASQFoliageBender_GetSoldierLocationAndSpread_Params params;
	params.Soldier = Soldier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (X != nullptr)
		*X = params.X;
	if (Y != nullptr)
		*Y = params.Y;
	if (Z != nullptr)
		*Z = params.Z;
	if (SpreadMultiplier != nullptr)
		*SpreadMultiplier = params.SpreadMultiplier;

}


// Function Squad.SQFlagScoringRuleset.OnFlagTick
// (Native, Public)
void ASQFlagScoringRuleset::OnFlagTick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFlagScoringRuleset.OnFlagTick");

	ASQFlagScoringRuleset_OnFlagTick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQFlagScoringRuleset.OnFlagStateChange
// (Native, Public)
// Parameters:
// class USQCaptureZoneComponent* CaptureZone                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  Team                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQFlagScoringRuleset::OnFlagStateChange(class USQCaptureZoneComponent* CaptureZone, unsigned char Team)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFlagScoringRuleset.OnFlagStateChange");

	ASQFlagScoringRuleset_OnFlagStateChange_Params params;
	params.CaptureZone = CaptureZone;
	params.Team = Team;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQFindSessionsCallbackProxy.IsSameServer
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult ResultA                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FBlueprintSessionResult ResultB                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQFindSessionsCallbackProxy::STATIC_IsSameServer(const struct FBlueprintSessionResult& ResultA, const struct FBlueprintSessionResult& ResultB)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFindSessionsCallbackProxy.IsSameServer");

	USQFindSessionsCallbackProxy_IsSameServer_Params params;
	params.ResultA = ResultA;
	params.ResultB = ResultB;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQFindSessionsCallbackProxy.GetSessionFlagStruct
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FSQSessionFlagStruct    ReturnValue                    (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
struct FSQSessionFlagStruct USQFindSessionsCallbackProxy::STATIC_GetSessionFlagStruct(const struct FBlueprintSessionResult& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFindSessionsCallbackProxy.GetSessionFlagStruct");

	USQFindSessionsCallbackProxy_GetSessionFlagStruct_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQFindSessionsCallbackProxy.GetServerName
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString USQFindSessionsCallbackProxy::STATIC_GetServerName(const struct FBlueprintSessionResult& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFindSessionsCallbackProxy.GetServerName");

	USQFindSessionsCallbackProxy_GetServerName_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQFindSessionsCallbackProxy.GetSearchKeywords
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString USQFindSessionsCallbackProxy::STATIC_GetSearchKeywords(const struct FBlueprintSessionResult& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFindSessionsCallbackProxy.GetSearchKeywords");

	USQFindSessionsCallbackProxy_GetSearchKeywords_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQFindSessionsCallbackProxy.GetPingInMs
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int USQFindSessionsCallbackProxy::STATIC_GetPingInMs(const struct FBlueprintSessionResult& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFindSessionsCallbackProxy.GetPingInMs");

	USQFindSessionsCallbackProxy_GetPingInMs_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQFindSessionsCallbackProxy.GetPasswordProtected
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQFindSessionsCallbackProxy::STATIC_GetPasswordProtected(const struct FBlueprintSessionResult& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFindSessionsCallbackProxy.GetPasswordProtected");

	USQFindSessionsCallbackProxy_GetPasswordProtected_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQFindSessionsCallbackProxy.GetMaxPlayers
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int USQFindSessionsCallbackProxy::STATIC_GetMaxPlayers(const struct FBlueprintSessionResult& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFindSessionsCallbackProxy.GetMaxPlayers");

	USQFindSessionsCallbackProxy_GetMaxPlayers_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQFindSessionsCallbackProxy.GetMatchTimeout
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int USQFindSessionsCallbackProxy::STATIC_GetMatchTimeout(const struct FBlueprintSessionResult& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFindSessionsCallbackProxy.GetMatchTimeout");

	USQFindSessionsCallbackProxy_GetMatchTimeout_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQFindSessionsCallbackProxy.GetMapName
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString USQFindSessionsCallbackProxy::STATIC_GetMapName(const struct FBlueprintSessionResult& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFindSessionsCallbackProxy.GetMapName");

	USQFindSessionsCallbackProxy_GetMapName_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQFindSessionsCallbackProxy.GetLicensedServer
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FBlueprintSessionResult Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQFindSessionsCallbackProxy::STATIC_GetLicensedServer(class UObject* WorldContextObject, const struct FBlueprintSessionResult& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFindSessionsCallbackProxy.GetLicensedServer");

	USQFindSessionsCallbackProxy_GetLicensedServer_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQFindSessionsCallbackProxy.GetGameVersion
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString USQFindSessionsCallbackProxy::STATIC_GetGameVersion(const struct FBlueprintSessionResult& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFindSessionsCallbackProxy.GetGameVersion");

	USQFindSessionsCallbackProxy_GetGameVersion_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQFindSessionsCallbackProxy.GetGameMode
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString USQFindSessionsCallbackProxy::STATIC_GetGameMode(const struct FBlueprintSessionResult& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFindSessionsCallbackProxy.GetGameMode");

	USQFindSessionsCallbackProxy_GetGameMode_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQFindSessionsCallbackProxy.GetCurrentPlayers
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int USQFindSessionsCallbackProxy::STATIC_GetCurrentPlayers(const struct FBlueprintSessionResult& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFindSessionsCallbackProxy.GetCurrentPlayers");

	USQFindSessionsCallbackProxy_GetCurrentPlayers_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQFindSessionsCallbackProxy.GetAnticheatProtected
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintSessionResult Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQFindSessionsCallbackProxy::STATIC_GetAnticheatProtected(const struct FBlueprintSessionResult& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFindSessionsCallbackProxy.GetAnticheatProtected");

	USQFindSessionsCallbackProxy_GetAnticheatProtected_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQFieldDressing.StopBleeding
// (Final, Native, Private)
void ASQFieldDressing::StopBleeding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFieldDressing.StopBleeding");

	ASQFieldDressing_StopBleeding_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQFieldDressing.Revive
// (Final, Native, Private)
void ASQFieldDressing::Revive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQFieldDressing.Revive");

	ASQFieldDressing_Revive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQDrawChatWidget.InitWidget
// (Native, Public, BlueprintCallable)
void USQDrawChatWidget::InitWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDrawChatWidget.InitWidget");

	USQDrawChatWidget_InitWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQDrawChatWidget.DrawWidget
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class USQDrawChatWidget*       ChatWidget                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FPaintContext           Context                        (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
void USQDrawChatWidget::STATIC_DrawWidget(class USQDrawChatWidget* ChatWidget, struct FPaintContext* Context)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDrawChatWidget.DrawWidget");

	USQDrawChatWidget_DrawWidget_Params params;
	params.ChatWidget = ChatWidget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Context != nullptr)
		*Context = params.Context;

}


// Function Squad.SQRotorsAnimInstance.GetRotationByBoneName
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FName                   BoneName                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
struct FRotator USQRotorsAnimInstance::GetRotationByBoneName(const struct FName& BoneName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQRotorsAnimInstance.GetRotationByBoneName");

	USQRotorsAnimInstance_GetRotationByBoneName_Params params;
	params.BoneName = BoneName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQDestroyedVehicle.TransferBurningLastingEffect
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASQLastingEffect*        LastingEffect                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQDestroyedVehicle::TransferBurningLastingEffect(class ASQLastingEffect* LastingEffect)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDestroyedVehicle.TransferBurningLastingEffect");

	ASQDestroyedVehicle_TransferBurningLastingEffect_Params params;
	params.LastingEffect = LastingEffect;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQDestroyedVehicle.StopReplication
// (Native, Event, Public, BlueprintEvent)
void ASQDestroyedVehicle::StopReplication()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDestroyedVehicle.StopReplication");

	ASQDestroyedVehicle_StopReplication_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQDestroyedVehicle.SetInitialMovement
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 InInitialVelocity              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 InInitialAngularVelocity       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQDestroyedVehicle::SetInitialMovement(const struct FVector& InInitialVelocity, const struct FVector& InInitialAngularVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDestroyedVehicle.SetInitialMovement");

	ASQDestroyedVehicle_SetInitialMovement_Params params;
	params.InInitialVelocity = InInitialVelocity;
	params.InInitialAngularVelocity = InInitialAngularVelocity;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQDestroyedVehicle.OnBeginDestroyedVehicle
// (Native, Event, Public, BlueprintEvent)
void ASQDestroyedVehicle::OnBeginDestroyedVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDestroyedVehicle.OnBeginDestroyedVehicle");

	ASQDestroyedVehicle_OnBeginDestroyedVehicle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQDeployableVehicle.TurnAtRate
// (Final, Native, Protected)
// Parameters:
// float                          Rate                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQDeployableVehicle::TurnAtRate(float Rate)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployableVehicle.TurnAtRate");

	ASQDeployableVehicle_TurnAtRate_Params params;
	params.Rate = Rate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQDeployableVehicle.Turn
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// float                          Rate                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQDeployableVehicle::Turn(float Rate)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployableVehicle.Turn");

	ASQDeployableVehicle_Turn_Params params;
	params.Rate = Rate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQDeployableVehicle.ToggleView
// (Native, Event, Protected, BlueprintEvent)
void ASQDeployableVehicle::ToggleView()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployableVehicle.ToggleView");

	ASQDeployableVehicle_ToggleView_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQDeployableVehicle.MouseWheelScroll
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// float                          Rate                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQDeployableVehicle::MouseWheelScroll(float Rate)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployableVehicle.MouseWheelScroll");

	ASQDeployableVehicle_MouseWheelScroll_Params params;
	params.Rate = Rate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQDeployableVehicle.LookUpAtRate
// (Final, Native, Protected)
// Parameters:
// float                          Rate                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQDeployableVehicle::LookUpAtRate(float Rate)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployableVehicle.LookUpAtRate");

	ASQDeployableVehicle_LookUpAtRate_Params params;
	params.Rate = Rate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQDeployableVehicle.LookUp
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// float                          Rate                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQDeployableVehicle::LookUp(float Rate)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployableVehicle.LookUp");

	ASQDeployableVehicle_LookUp_Params params;
	params.Rate = Rate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQDeployableVehicle.IsCurrentWeaponInputEnabled
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQDeployableVehicle::IsCurrentWeaponInputEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployableVehicle.IsCurrentWeaponInputEnabled");

	ASQDeployableVehicle_IsCurrentWeaponInputEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQDeployableVehicle.GetOwnerDeployable
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASQDeployable*           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASQDeployable* ASQDeployableVehicle::GetOwnerDeployable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployableVehicle.GetOwnerDeployable");

	ASQDeployableVehicle_GetOwnerDeployable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQDeployableInteractable.BP_PickedUp
// (Event, Public, BlueprintEvent)
// Parameters:
// class ASQEquipableItem*        EquippableDeployableInteractable (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQDeployableInteractable::BP_PickedUp(class ASQEquipableItem* EquippableDeployableInteractable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployableInteractable.BP_PickedUp");

	ASQDeployableInteractable_BP_PickedUp_Params params;
	params.EquippableDeployableInteractable = EquippableDeployableInteractable;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQDeployableChildActorComponent.OnDeployableStateChange
// (Native, Public)
// Parameters:
// ESQBuildState                  BuildState                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQDeployableChildActorComponent::OnDeployableStateChange(ESQBuildState BuildState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployableChildActorComponent.OnDeployableStateChange");

	USQDeployableChildActorComponent_OnDeployableStateChange_Params params;
	params.BuildState = BuildState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQDeployableAmmoBag.OnRep_AmmoCount
// (Final, Native, Public)
void ASQDeployableAmmoBag::OnRep_AmmoCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployableAmmoBag.OnRep_AmmoCount");

	ASQDeployableAmmoBag_OnRep_AmmoCount_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQDeployableAmmoBag.BP_PickedUp
// (Event, Public, BlueprintEvent)
// Parameters:
// class ASQEquipableItem*        EquippableAmmoBag              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQDeployableAmmoBag::BP_PickedUp(class ASQEquipableItem* EquippableAmmoBag)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDeployableAmmoBag.BP_PickedUp");

	ASQDeployableAmmoBag_BP_PickedUp_Params params;
	params.EquippableAmmoBag = EquippableAmmoBag;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQDataGatheringComponent.RecordHeatMap
// (Final, Exec, Native, Public)
// Parameters:
// float                          XStepSize                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          YStepSize                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          HeightOffset                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bRecordRawValues               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          PositionWaitTime               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 Filename                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQDataGatheringComponent::RecordHeatMap(float XStepSize, float YStepSize, float HeightOffset, bool bRecordRawValues, float PositionWaitTime, const struct FString& Filename)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQDataGatheringComponent.RecordHeatMap");

	USQDataGatheringComponent_RecordHeatMap_Params params;
	params.XStepSize = XStepSize;
	params.YStepSize = YStepSize;
	params.HeightOffset = HeightOffset;
	params.bRecordRawValues = bRecordRawValues;
	params.PositionWaitTime = PositionWaitTime;
	params.Filename = Filename;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCreateSquadButton.SquadNameTextCommit
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FText                   Text                           (Parm, NativeAccessSpecifierPublic)
// TEnumAsByte<ETextCommit>       CommitMethodEnum               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQCreateSquadButton::SquadNameTextCommit(const struct FText& Text, TEnumAsByte<ETextCommit> CommitMethodEnum)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCreateSquadButton.SquadNameTextCommit");

	USQCreateSquadButton_SquadNameTextCommit_Params params;
	params.Text = Text;
	params.CommitMethodEnum = CommitMethodEnum;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCreateSquadButton.SquadNameTextChanged
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FText                   Text                           (Parm, NativeAccessSpecifierPublic)
void USQCreateSquadButton::SquadNameTextChanged(const struct FText& Text)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCreateSquadButton.SquadNameTextChanged");

	USQCreateSquadButton_SquadNameTextChanged_Params params;
	params.Text = Text;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateSquadListWidget.OnListLayoutChanged
// (Event, Protected, BlueprintEvent)
void USQCoreStateSquadListWidget::OnListLayoutChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateSquadListWidget.OnListLayoutChanged");

	USQCoreStateSquadListWidget_OnListLayoutChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateSquadMemberWidget.OnVoipChannelChanged
// (Event, Protected, BlueprintEvent)
void USQCoreStateSquadMemberWidget::OnVoipChannelChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateSquadMemberWidget.OnVoipChannelChanged");

	USQCoreStateSquadMemberWidget_OnVoipChannelChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateSquadMemberWidget.OnSquadIdChanged
// (Event, Protected, BlueprintEvent)
void USQCoreStateSquadMemberWidget::OnSquadIdChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateSquadMemberWidget.OnSquadIdChanged");

	USQCoreStateSquadMemberWidget_OnSquadIdChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateSquadMemberWidget.OnPlayerNameChanged
// (Event, Protected, BlueprintEvent)
void USQCoreStateSquadMemberWidget::OnPlayerNameChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateSquadMemberWidget.OnPlayerNameChanged");

	USQCoreStateSquadMemberWidget_OnPlayerNameChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateSquadMemberWidget.OnIsWoundedChanged
// (Event, Protected, BlueprintEvent)
void USQCoreStateSquadMemberWidget::OnIsWoundedChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateSquadMemberWidget.OnIsWoundedChanged");

	USQCoreStateSquadMemberWidget_OnIsWoundedChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateSquadMemberWidget.OnIsSquadLeaderChanged
// (Event, Protected, BlueprintEvent)
void USQCoreStateSquadMemberWidget::OnIsSquadLeaderChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateSquadMemberWidget.OnIsSquadLeaderChanged");

	USQCoreStateSquadMemberWidget_OnIsSquadLeaderChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateSquadMemberWidget.OnIsPossessingPawnChanged
// (Event, Protected, BlueprintEvent)
void USQCoreStateSquadMemberWidget::OnIsPossessingPawnChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateSquadMemberWidget.OnIsPossessingPawnChanged");

	USQCoreStateSquadMemberWidget_OnIsPossessingPawnChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateSquadMemberWidget.OnIsMutedChanged
// (Event, Protected, BlueprintEvent)
void USQCoreStateSquadMemberWidget::OnIsMutedChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateSquadMemberWidget.OnIsMutedChanged");

	USQCoreStateSquadMemberWidget_OnIsMutedChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateSquadMemberWidget.OnIsFireTeamLeaderChanged
// (Event, Protected, BlueprintEvent)
void USQCoreStateSquadMemberWidget::OnIsFireTeamLeaderChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateSquadMemberWidget.OnIsFireTeamLeaderChanged");

	USQCoreStateSquadMemberWidget_OnIsFireTeamLeaderChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateSquadMemberWidget.OnIsBleedingChanged
// (Event, Protected, BlueprintEvent)
void USQCoreStateSquadMemberWidget::OnIsBleedingChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateSquadMemberWidget.OnIsBleedingChanged");

	USQCoreStateSquadMemberWidget_OnIsBleedingChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateSquadMemberWidget.OnIsAliveChanged
// (Event, Protected, BlueprintEvent)
void USQCoreStateSquadMemberWidget::OnIsAliveChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateSquadMemberWidget.OnIsAliveChanged");

	USQCoreStateSquadMemberWidget_OnIsAliveChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateSquadMemberWidget.OnFireTeamPositionChanged
// (Event, Protected, BlueprintEvent)
void USQCoreStateSquadMemberWidget::OnFireTeamPositionChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateSquadMemberWidget.OnFireTeamPositionChanged");

	USQCoreStateSquadMemberWidget_OnFireTeamPositionChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateSquadMemberWidget.OnFireTeamIndexChanged
// (Event, Protected, BlueprintEvent)
void USQCoreStateSquadMemberWidget::OnFireTeamIndexChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateSquadMemberWidget.OnFireTeamIndexChanged");

	USQCoreStateSquadMemberWidget_OnFireTeamIndexChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateSquadMemberWidget.OnDeployRoleChanged
// (Event, Protected, BlueprintEvent)
void USQCoreStateSquadMemberWidget::OnDeployRoleChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateSquadMemberWidget.OnDeployRoleChanged");

	USQCoreStateSquadMemberWidget_OnDeployRoleChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateSquadMemberWidget.OnCurrentVehicleDataChanged
// (Event, Protected, BlueprintEvent)
void USQCoreStateSquadMemberWidget::OnCurrentVehicleDataChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateSquadMemberWidget.OnCurrentVehicleDataChanged");

	USQCoreStateSquadMemberWidget_OnCurrentVehicleDataChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateSquadItemWidget.OnSquadNameChanged
// (Event, Protected, BlueprintEvent)
void USQCoreStateSquadItemWidget::OnSquadNameChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateSquadItemWidget.OnSquadNameChanged");

	USQCoreStateSquadItemWidget_OnSquadNameChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateSquadItemWidget.OnSquadIdChanged
// (Event, Protected, BlueprintEvent)
void USQCoreStateSquadItemWidget::OnSquadIdChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateSquadItemWidget.OnSquadIdChanged");

	USQCoreStateSquadItemWidget_OnSquadIdChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateSquadItemWidget.OnMemberNumChanged
// (Event, Protected, BlueprintEvent)
void USQCoreStateSquadItemWidget::OnMemberNumChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateSquadItemWidget.OnMemberNumChanged");

	USQCoreStateSquadItemWidget_OnMemberNumChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateSquadItemWidget.OnMaxMembersChanged
// (Event, Protected, BlueprintEvent)
void USQCoreStateSquadItemWidget::OnMaxMembersChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateSquadItemWidget.OnMaxMembersChanged");

	USQCoreStateSquadItemWidget_OnMaxMembersChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateSquadItemWidget.OnLeaderNameChanged
// (Event, Protected, BlueprintEvent)
void USQCoreStateSquadItemWidget::OnLeaderNameChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateSquadItemWidget.OnLeaderNameChanged");

	USQCoreStateSquadItemWidget_OnLeaderNameChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateSquadItemWidget.OnJoinButtonStateChanged
// (Event, Protected, BlueprintEvent)
void USQCoreStateSquadItemWidget::OnJoinButtonStateChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateSquadItemWidget.OnJoinButtonStateChanged");

	USQCoreStateSquadItemWidget_OnJoinButtonStateChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateSquadItemWidget.OnIsSelfInSquadChanged
// (Event, Protected, BlueprintEvent)
void USQCoreStateSquadItemWidget::OnIsSelfInSquadChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateSquadItemWidget.OnIsSelfInSquadChanged");

	USQCoreStateSquadItemWidget_OnIsSelfInSquadChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateSquadItemWidget.OnIsCommandSquadChanged
// (Event, Protected, BlueprintEvent)
void USQCoreStateSquadItemWidget::OnIsCommandSquadChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateSquadItemWidget.OnIsCommandSquadChanged");

	USQCoreStateSquadItemWidget_OnIsCommandSquadChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateSquadItemWidget.OnBanned
// (Event, Protected, BlueprintEvent)
// Parameters:
// int                            SquadId                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          BanDuration                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQCoreStateSquadItemWidget::OnBanned(int SquadId, float BanDuration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateSquadItemWidget.OnBanned");

	USQCoreStateSquadItemWidget_OnBanned_Params params;
	params.SquadId = SquadId;
	params.BanDuration = BanDuration;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateSquadItemWidget.JoinSquad
// (Final, Native, Protected, BlueprintCallable)
void USQCoreStateSquadItemWidget::JoinSquad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateSquadItemWidget.JoinSquad");

	USQCoreStateSquadItemWidget_JoinSquad_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateSquadItemWidget.GetMemberRoot
// (Event, Public, BlueprintEvent, Const)
// Parameters:
// int                            FireTeamIndex                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPanelWidget*            ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UPanelWidget* USQCoreStateSquadItemWidget::GetMemberRoot(int FireTeamIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateSquadItemWidget.GetMemberRoot");

	USQCoreStateSquadItemWidget_GetMemberRoot_Params params;
	params.FireTeamIndex = FireTeamIndex;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQCoreStateSquadItemWidget.GetCachedSQPlayerController
// (Final, Native, Protected, BlueprintCallable, BlueprintPure)
// Parameters:
// class ASQPlayerController*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASQPlayerController* USQCoreStateSquadItemWidget::GetCachedSQPlayerController()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateSquadItemWidget.GetCachedSQPlayerController");

	USQCoreStateSquadItemWidget_GetCachedSQPlayerController_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQCoreStateSpawnPointsListWidget.SelectSpawnPoint
// (Final, Native, Public, BlueprintCallable)
void USQCoreStateSpawnPointsListWidget::SelectSpawnPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateSpawnPointsListWidget.SelectSpawnPoint");

	USQCoreStateSpawnPointsListWidget_SelectSpawnPoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateSpawnPointsListWidget.OnSpawnPointTypeChanged
// (Event, Protected, BlueprintEvent)
void USQCoreStateSpawnPointsListWidget::OnSpawnPointTypeChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateSpawnPointsListWidget.OnSpawnPointTypeChanged");

	USQCoreStateSpawnPointsListWidget_OnSpawnPointTypeChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateSpawnPointsListWidget.OnSpawnPointLocationChanged
// (Event, Protected, BlueprintEvent)
void USQCoreStateSpawnPointsListWidget::OnSpawnPointLocationChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateSpawnPointsListWidget.OnSpawnPointLocationChanged");

	USQCoreStateSpawnPointsListWidget_OnSpawnPointLocationChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateSpawnPointsListWidget.OnIsSelectedChanged
// (Event, Protected, BlueprintEvent)
void USQCoreStateSpawnPointsListWidget::OnIsSelectedChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateSpawnPointsListWidget.OnIsSelectedChanged");

	USQCoreStateSpawnPointsListWidget_OnIsSelectedChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateSpawnPointsListWidget.GetSpawnIcon
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UTexture2D*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UTexture2D* USQCoreStateSpawnPointsListWidget::GetSpawnIcon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateSpawnPointsListWidget.GetSpawnIcon");

	USQCoreStateSpawnPointsListWidget_GetSpawnIcon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQCoreStateListener.RefreshVisbility
// (Final, Native, Private)
// Parameters:
// class APlayerController*       PC                             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQCoreStateListener::RefreshVisbility(class APlayerController* PC)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateListener.RefreshVisbility");

	USQCoreStateListener_RefreshVisbility_Params params;
	params.PC = PC;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateListener.OnDataCreate
// (Final, Native, Private)
// Parameters:
// class USQCoreStateData*        Data                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQCoreStateListener::OnDataCreate(class USQCoreStateData* Data)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateListener.OnDataCreate");

	USQCoreStateListener_OnDataCreate_Params params;
	params.Data = Data;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateWidgetFactory.UnselectAll
// (Native, Protected, Const)
// Parameters:
// class UObject*                 SelectionInstigator            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQCoreStateWidgetFactory::UnselectAll(class UObject* SelectionInstigator)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateWidgetFactory.UnselectAll");

	USQCoreStateWidgetFactory_UnselectAll_Params params;
	params.SelectionInstigator = SelectionInstigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateWidgetFactory.ReceiveSelection
// (Native, Protected, HasOutParms, Const)
// Parameters:
// struct FSQCoreStateId          ComponentId                    (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESQSelectionState              SelectionState                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                 SelectionInstigator            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQCoreStateWidgetFactory::ReceiveSelection(const struct FSQCoreStateId& ComponentId, ESQSelectionState SelectionState, class UObject* SelectionInstigator)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateWidgetFactory.ReceiveSelection");

	USQCoreStateWidgetFactory_ReceiveSelection_Params params;
	params.ComponentId = ComponentId;
	params.SelectionState = SelectionState;
	params.SelectionInstigator = SelectionInstigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateSpawnPointsListComponent.SetRootWidgets
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UGridPanel*              InBaseRoot                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGridPanel*              InHABRoot                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UGridPanel*              InRallyRoot                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQCoreStateSpawnPointsListComponent::SetRootWidgets(class UGridPanel* InBaseRoot, class UGridPanel* InHABRoot, class UGridPanel* InRallyRoot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateSpawnPointsListComponent.SetRootWidgets");

	USQCoreStateSpawnPointsListComponent_SetRootWidgets_Params params;
	params.InBaseRoot = InBaseRoot;
	params.InHABRoot = InHABRoot;
	params.InRallyRoot = InRallyRoot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateSelectionHUB.UnselectAll
// (Final, Native, Public, BlueprintCallable, Const)
// Parameters:
// class UObject*                 SelectionInstigator            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQCoreStateSelectionHUB::UnselectAll(class UObject* SelectionInstigator)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateSelectionHUB.UnselectAll");

	USQCoreStateSelectionHUB_UnselectAll_Params params;
	params.SelectionInstigator = SelectionInstigator;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateSquadListComponent.SetRootWidgets
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPanelWidget*            InSquadRoot                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPanelWidget*            InUnassignedRoot               (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPanelWidget*            InCommanderRoot                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQCoreStateSquadListComponent::SetRootWidgets(class UPanelWidget* InSquadRoot, class UPanelWidget* InUnassignedRoot, class UPanelWidget* InCommanderRoot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateSquadListComponent.SetRootWidgets");

	USQCoreStateSquadListComponent_SetRootWidgets_Params params;
	params.InSquadRoot = InSquadRoot;
	params.InUnassignedRoot = InUnassignedRoot;
	params.InCommanderRoot = InCommanderRoot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateMapComponent.SetWidgetScale
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          UniformScale                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQCoreStateMapComponent::SetWidgetScale(float UniformScale)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateMapComponent.SetWidgetScale");

	USQCoreStateMapComponent_SetWidgetScale_Params params;
	params.UniformScale = UniformScale;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateMapComponent.SetRootWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UPanelWidget*            Value                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQCoreStateMapComponent::SetRootWidget(class UPanelWidget* Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateMapComponent.SetRootWidget");

	USQCoreStateMapComponent_SetRootWidget_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateMapComponent.GetWidgetWorldLocation
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector                 OutWorldLocation               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSQCoreStateId          ID                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQCoreStateMapComponent::GetWidgetWorldLocation(struct FVector* OutWorldLocation, const struct FSQCoreStateId& ID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateMapComponent.GetWidgetWorldLocation");

	USQCoreStateMapComponent_GetWidgetWorldLocation_Params params;
	params.ID = ID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutWorldLocation != nullptr)
		*OutWorldLocation = params.OutWorldLocation;


	return params.ReturnValue;
}


// Function Squad.SQCoreStateMapComponent.GetWidgetScreenPosition
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FVector2D               OutPosition                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSQCoreStateId          ID                             (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQCoreStateMapComponent::GetWidgetScreenPosition(struct FVector2D* OutPosition, const struct FSQCoreStateId& ID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateMapComponent.GetWidgetScreenPosition");

	USQCoreStateMapComponent_GetWidgetScreenPosition_Params params;
	params.ID = ID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutPosition != nullptr)
		*OutPosition = params.OutPosition;


	return params.ReturnValue;
}


// Function Squad.SQCoreStateMapComponent.GetWaypointWidgets
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TMap<int, struct FSQCoreStateId> ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
TMap<int, struct FSQCoreStateId> USQCoreStateMapComponent::GetWaypointWidgets()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateMapComponent.GetWaypointWidgets");

	USQCoreStateMapComponent_GetWaypointWidgets_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQCoreStateMapComponent.GetWaypointFTWidgets
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TMap<int, struct FSQCoreStateId> ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
TMap<int, struct FSQCoreStateId> USQCoreStateMapComponent::GetWaypointFTWidgets()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateMapComponent.GetWaypointFTWidgets");

	USQCoreStateMapComponent_GetWaypointFTWidgets_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQCoreStateMapComponent.GetOrderTargetWidgets
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TMap<int, struct FSQCoreStateId> ReturnValue                    (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, NativeAccessSpecifierPublic)
TMap<int, struct FSQCoreStateId> USQCoreStateMapComponent::GetOrderTargetWidgets()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateMapComponent.GetOrderTargetWidgets");

	USQCoreStateMapComponent_GetOrderTargetWidgets_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQCoreStateConnection.OnComponentObtainedId
// (Final, Native, Private)
// Parameters:
// class USQCoreStateComponent*   Component                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQCoreStateConnection::OnComponentObtainedId(class USQCoreStateComponent* Component)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateConnection.OnComponentObtainedId");

	USQCoreStateConnection_OnComponentObtainedId_Params params;
	params.Component = Component;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateComponent.ServerSetIsVisible
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// bool                           bValue                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQCoreStateComponent::ServerSetIsVisible(bool bValue)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateComponent.ServerSetIsVisible");

	USQCoreStateComponent_ServerSetIsVisible_Params params;
	params.bValue = bValue;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateComponent.ServerConfigure
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
void USQCoreStateComponent::ServerConfigure()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateComponent.ServerConfigure");

	USQCoreStateComponent_ServerConfigure_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateComponent.OnRep_DataObject
// (Final, Native, Private)
// Parameters:
// class USQCoreStateData*        PrevDataObject                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQCoreStateComponent::OnRep_DataObject(class USQCoreStateData* PrevDataObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateComponent.OnRep_DataObject");

	USQCoreStateComponent_OnRep_DataObject_Params params;
	params.PrevDataObject = PrevDataObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateComponent.OnConnectionCreate
// (Final, Native, Private)
// Parameters:
// class USQCoreStateConnection*  Connection                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQCoreStateComponent::OnConnectionCreate(class USQCoreStateConnection* Connection)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateComponent.OnConnectionCreate");

	USQCoreStateComponent_OnConnectionCreate_Params params;
	params.Connection = Connection;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCoreStateComponent.GetId
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// struct FSQCoreStateId          ReturnValue                    (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FSQCoreStateId USQCoreStateComponent::GetId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCoreStateComponent.GetId");

	USQCoreStateComponent_GetId_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQVehicleResource.UseResource
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                          ModifyAmount                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQVehicleResource::UseResource(float ModifyAmount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleResource.UseResource");

	ASQVehicleResource_UseResource_Params params;
	params.ModifyAmount = ModifyAmount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleResource.ServerEndResourceDropOff
// (Net, NetReliable, Native, Event, Protected, NetServer, BlueprintCallable, NetValidate)
void ASQVehicleResource::ServerEndResourceDropOff()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleResource.ServerEndResourceDropOff");

	ASQVehicleResource_ServerEndResourceDropOff_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleResource.ServerBeginResourceDropOff
// (Net, NetReliable, Native, Event, Protected, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// class ASQForwardBase*          fob                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  Zone                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          DropRate                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQVehicleResource::ServerBeginResourceDropOff(class ASQForwardBase* fob, class AActor* Zone, float DropRate)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleResource.ServerBeginResourceDropOff");

	ASQVehicleResource_ServerBeginResourceDropOff_Params params;
	params.fob = fob;
	params.Zone = Zone;
	params.DropRate = DropRate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleResource.FindValidDropOffs
// (Final, Native, Protected, HasOutParms)
// Parameters:
// class ASQForwardBase*          fob                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  Zone                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQVehicleResource::FindValidDropOffs(class ASQForwardBase** fob, class AActor** Zone)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleResource.FindValidDropOffs");

	ASQVehicleResource_FindValidDropOffs_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (fob != nullptr)
		*fob = params.fob;
	if (Zone != nullptr)
		*Zone = params.Zone;


	return params.ReturnValue;
}


// Function Squad.SQVehicleResource.BeginResourceDropOff
// (Final, Native, Protected, BlueprintCallable)
void ASQVehicleResource::BeginResourceDropOff()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleResource.BeginResourceDropOff");

	ASQVehicleResource_BeginResourceDropOff_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQVehicleResource.AtValidResourcePoint
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQVehicleResource::AtValidResourcePoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQVehicleResource.AtValidResourcePoint");

	ASQVehicleResource_AtValidResourcePoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQConnectionCheckBeaconClient.ServerPong
// (Net, NetReliable, Native, Event, NetMulticast, Public, NetValidate)
// Parameters:
// struct FSQConnectionCheckResponse response                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
void ASQConnectionCheckBeaconClient::ServerPong(const struct FSQConnectionCheckResponse& response)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQConnectionCheckBeaconClient.ServerPong");

	ASQConnectionCheckBeaconClient_ServerPong_Params params;
	params.response = response;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQConnectionCheckBeaconClient.InitConnection
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 ServerURL                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQConnectionCheckBeaconClient::InitConnection(const struct FString& ServerURL)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQConnectionCheckBeaconClient.InitConnection");

	ASQConnectionCheckBeaconClient_InitConnection_Params params;
	params.ServerURL = ServerURL;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCompassPlayer.UpdateState
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          InScale                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bShowIcon                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            HealthStateIndex               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIsMedic                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIsSL                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIsOwnderMedic                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQCompassPlayer::UpdateState(float InScale, bool bShowIcon, int HealthStateIndex, bool bIsMedic, bool bIsSL, bool bIsOwnderMedic)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCompassPlayer.UpdateState");

	USQCompassPlayer_UpdateState_Params params;
	params.InScale = InScale;
	params.bShowIcon = bShowIcon;
	params.HealthStateIndex = HealthStateIndex;
	params.bIsMedic = bIsMedic;
	params.bIsSL = bIsSL;
	params.bIsOwnderMedic = bIsOwnderMedic;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCompassPlayer.InitWidget
// (Native, Public, BlueprintCallable)
void USQCompassPlayer::InitWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCompassPlayer.InitWidget");

	USQCompassPlayer_InitWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCompassMK2.UpdateVisibility
// (Native, Public, BlueprintCallable)
void USQCompassMK2::UpdateVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCompassMK2.UpdateVisibility");

	USQCompassMK2_UpdateVisibility_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCompassMK2.UpdateSquadMembers
// (Native, Public, BlueprintCallable)
void USQCompassMK2::UpdateSquadMembers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCompassMK2.UpdateSquadMembers");

	USQCompassMK2_UpdateSquadMembers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCompassMK2.UpdateSquadMarkers
// (Native, Public, BlueprintCallable)
void USQCompassMK2::UpdateSquadMarkers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCompassMK2.UpdateSquadMarkers");

	USQCompassMK2_UpdateSquadMarkers_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCompassMK2.UpdatePlayerWidgetTransform
// (Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// bool                           bShowIcon                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQSoldier*              SoldierRef                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USQCompassPlayer*        WidgetRef                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQCompassMK2::UpdatePlayerWidgetTransform(bool* bShowIcon, class ASQSoldier* SoldierRef, class USQCompassPlayer* WidgetRef)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCompassMK2.UpdatePlayerWidgetTransform");

	USQCompassMK2_UpdatePlayerWidgetTransform_Params params;
	params.SoldierRef = SoldierRef;
	params.WidgetRef = WidgetRef;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (bShowIcon != nullptr)
		*bShowIcon = params.bShowIcon;


	return params.ReturnValue;
}


// Function Squad.SQCompassMK2.UpdateMarkerArrows
// (Native, Public, BlueprintCallable)
void USQCompassMK2::UpdateMarkerArrows()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCompassMK2.UpdateMarkerArrows");

	USQCompassMK2_UpdateMarkerArrows_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCompassMK2.UpdateCompassBearing
// (Native, Public, BlueprintCallable)
void USQCompassMK2::UpdateCompassBearing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCompassMK2.UpdateCompassBearing");

	USQCompassMK2_UpdateCompassBearing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCompassMK2.SquadChangedHandler
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASQSquadState*           NewSquad                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQSquadState*           OldSquad                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQPlayerState*          Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQCompassMK2::SquadChangedHandler(class ASQSquadState* NewSquad, class ASQSquadState* OldSquad, class ASQPlayerState* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCompassMK2.SquadChangedHandler");

	USQCompassMK2_SquadChangedHandler_Params params;
	params.NewSquad = NewSquad;
	params.OldSquad = OldSquad;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCompassMK2.RemoveMarker
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class AActor*                  DestroyedActor                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQCompassMK2::RemoveMarker(class AActor* DestroyedActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCompassMK2.RemoveMarker");

	USQCompassMK2_RemoveMarker_Params params;
	params.DestroyedActor = DestroyedActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCompassMK2.RemoveCompassMarker
// (Final, Native, Public)
// Parameters:
// unsigned char                  ID                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQCompassMK2::RemoveCompassMarker(unsigned char ID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCompassMK2.RemoveCompassMarker");

	USQCompassMK2_RemoveCompassMarker_Params params;
	params.ID = ID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCompassMK2.PlayerLeftSquad
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASQSquadState*           Squad                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQPlayerState*          PlayerState                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQCompassMK2::PlayerLeftSquad(class ASQSquadState* Squad, class ASQPlayerState* PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCompassMK2.PlayerLeftSquad");

	USQCompassMK2_PlayerLeftSquad_Params params;
	params.Squad = Squad;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCompassMK2.PlayerJoinedSquad
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASQSquadState*           Squad                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQPlayerState*          PlayerState                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQCompassMK2::PlayerJoinedSquad(class ASQSquadState* Squad, class ASQPlayerState* PlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCompassMK2.PlayerJoinedSquad");

	USQCompassMK2_PlayerJoinedSquad_Params params;
	params.Squad = Squad;
	params.PlayerState = PlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCompassMK2.InitWidget
// (Native, Public, BlueprintCallable)
void USQCompassMK2::InitWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCompassMK2.InitWidget");

	USQCompassMK2_InitWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCompassMK2.CreateSquadMateWidget
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASQPlayerState*          SquadMate                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQCompassMK2::CreateSquadMateWidget(class ASQPlayerState* SquadMate)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCompassMK2.CreateSquadMateWidget");

	USQCompassMK2_CreateSquadMateWidget_Params params;
	params.SquadMate = SquadMate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCompassMK2.CreateNewMarker
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            SquadId                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQMapMarker*            Marker                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQCompassMK2::CreateNewMarker(int SquadId, class ASQMapMarker* Marker)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCompassMK2.CreateNewMarker");

	USQCompassMK2_CreateNewMarker_Params params;
	params.SquadId = SquadId;
	params.Marker = Marker;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCompassMK2.CreateNewCompassMarker
// (Final, Native, Public)
// Parameters:
// struct FSQMapMarkerVisualData  MapMarkerVisualData            (Parm, NoDestructor, NativeAccessSpecifierPublic)
void USQCompassMK2::CreateNewCompassMarker(const struct FSQMapMarkerVisualData& MapMarkerVisualData)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCompassMK2.CreateNewCompassMarker");

	USQCompassMK2_CreateNewCompassMarker_Params params;
	params.MapMarkerVisualData = MapMarkerVisualData;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCompassMarker.UpdateState
// (Native, Public, BlueprintCallable)
// Parameters:
// float                          InScale                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bShowIcon                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQCompassMarker::UpdateState(float InScale, bool bShowIcon)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCompassMarker.UpdateState");

	USQCompassMarker_UpdateState_Params params;
	params.InScale = InScale;
	params.bShowIcon = bShowIcon;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCompassMarker.InitWidget
// (Native, Public, BlueprintCallable)
void USQCompassMarker::InitWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCompassMarker.InitWidget");

	USQCompassMarker_InitWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCommanderVotingWidget.UpdateFromData
// (Final, Native, Public, BlueprintCallable)
void USQCommanderVotingWidget::UpdateFromData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCommanderVotingWidget.UpdateFromData");

	USQCommanderVotingWidget_UpdateFromData_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCommanderVotingWidget.OnVotingTimeChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          Seconds                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQCommanderVotingWidget::OnVotingTimeChanged(float Seconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCommanderVotingWidget.OnVotingTimeChanged");

	USQCommanderVotingWidget_OnVotingTimeChanged_Params params;
	params.Seconds = Seconds;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCommanderVotingWidget.OnIsVotingAvailableChanged
// (Event, Public, BlueprintEvent)
void USQCommanderVotingWidget::OnIsVotingAvailableChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCommanderVotingWidget.OnIsVotingAvailableChanged");

	USQCommanderVotingWidget_OnIsVotingAvailableChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCommanderVotingWidget.OnIsVoteInProgressChanged
// (Event, Public, BlueprintEvent)
void USQCommanderVotingWidget::OnIsVoteInProgressChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCommanderVotingWidget.OnIsVoteInProgressChanged");

	USQCommanderVotingWidget_OnIsVoteInProgressChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCommanderVotingWidget.Init
// (Final, Native, Public, BlueprintCallable)
void USQCommanderVotingWidget::Init()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCommanderVotingWidget.Init");

	USQCommanderVotingWidget_Init_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCommanderVotingPlayerItem.OnVoteCountChanged
// (Event, Public, BlueprintEvent)
void USQCommanderVotingPlayerItem::OnVoteCountChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCommanderVotingPlayerItem.OnVoteCountChanged");

	USQCommanderVotingPlayerItem_OnVoteCountChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCommanderVotingPlayerItem.OnNomineeNameChanged
// (Event, Public, BlueprintEvent)
void USQCommanderVotingPlayerItem::OnNomineeNameChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCommanderVotingPlayerItem.OnNomineeNameChanged");

	USQCommanderVotingPlayerItem_OnNomineeNameChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCommanderVotingPlayerItem.OnIsVotedByPlayerChanged
// (Event, Public, BlueprintEvent)
void USQCommanderVotingPlayerItem::OnIsVotedByPlayerChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCommanderVotingPlayerItem.OnIsVotedByPlayerChanged");

	USQCommanderVotingPlayerItem_OnIsVotedByPlayerChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCommanderState.OnRep_VoteInProgressChanged
// (Final, Native, Public)
void ASQCommanderState::OnRep_VoteInProgressChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCommanderState.OnRep_VoteInProgressChanged");

	ASQCommanderState_OnRep_VoteInProgressChanged_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCommanderState.OnRep_CurrentCommander
// (Final, Native, Private)
// Parameters:
// class ASQPlayerState*          OldCommander                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQCommanderState::OnRep_CurrentCommander(class ASQPlayerState* OldCommander)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCommanderState.OnRep_CurrentCommander");

	ASQCommanderState_OnRep_CurrentCommander_Params params;
	params.OldCommander = OldCommander;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCommanderState.IsCommanderActionAllowed
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class UClass*                  CommandOption                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQCommanderState::IsCommanderActionAllowed(class UClass* CommandOption)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCommanderState.IsCommanderActionAllowed");

	ASQCommanderState_IsCommanderActionAllowed_Params params;
	params.CommandOption = CommandOption;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQCommanderState.GetCurrentCommander
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASQPlayerState*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASQPlayerState* ASQCommanderState::GetCurrentCommander()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCommanderState.GetCurrentCommander");

	ASQCommanderState_GetCurrentCommander_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQCommanderState.GetCommandActionsById
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// unsigned char                  ID                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper, NativeAccessSpecifierPublic)
TArray<class UClass*> ASQCommanderState::GetCommandActionsById(unsigned char ID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCommanderState.GetCommandActionsById");

	ASQCommanderState_GetCommandActionsById_Params params;
	params.ID = ID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQCommanderState.GetCommandActions
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// TArray<class UClass*>          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, UObjectWrapper, NativeAccessSpecifierPublic)
TArray<class UClass*> ASQCommanderState::GetCommandActions()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCommanderState.GetCommandActions");

	ASQCommanderState_GetCommandActions_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQCommanderState.GetActionsEnabled
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQCommanderState::GetActionsEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCommanderState.GetActionsEnabled");

	ASQCommanderState_GetActionsEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQCommanderManager.GetInterval
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UClass*                  CommandOption                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQCommanderState*       SQCommanderState               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSQCommandActionData    ReturnValue                    (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
struct FSQCommandActionData USQCommanderManager::STATIC_GetInterval(class UClass* CommandOption, class ASQCommanderState* SQCommanderState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCommanderManager.GetInterval");

	USQCommanderManager_GetInterval_Params params;
	params.CommandOption = CommandOption;
	params.SQCommanderState = SQCommanderState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// DelegateFunction Squad.SQCommanderManager.CommanderChangedDelegate__DelegateSignature
// (MulticastDelegate, Public, Delegate)
// Parameters:
// class ASQPlayerState*          OldCommander                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQCommanderManager::CommanderChangedDelegate__DelegateSignature(class ASQPlayerState* OldCommander)
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Squad.SQCommanderManager.CommanderChangedDelegate__DelegateSignature");

	USQCommanderManager_CommanderChangedDelegate__DelegateSignature_Params params;
	params.OldCommander = OldCommander;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCommanderManager.CanUseAction
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UClass*                  CommandOption                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQCommanderState*       SQCommanderState               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQCommanderManager::STATIC_CanUseAction(class UClass* CommandOption, class ASQCommanderState* SQCommanderState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCommanderManager.CanUseAction");

	USQCommanderManager_CanUseAction_Params params;
	params.CommandOption = CommandOption;
	params.SQCommanderState = SQCommanderState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQCommanderManager.CalculateTotalTimeRemaining
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UClass*                  CommandOption                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQCommanderState*       SQCommanderState               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQCommanderManager::STATIC_CalculateTotalTimeRemaining(class UClass* CommandOption, class ASQCommanderState* SQCommanderState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCommanderManager.CalculateTotalTimeRemaining");

	USQCommanderManager_CalculateTotalTimeRemaining_Params params;
	params.CommandOption = CommandOption;
	params.SQCommanderState = SQCommanderState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQCommanderManager.CalculateStateTimeRemaining
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UClass*                  CommandOption                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQCommanderState*       SQCommanderState               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESQCommandOptionState          CommandOptionState             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQCommanderManager::STATIC_CalculateStateTimeRemaining(class UClass* CommandOption, class ASQCommanderState* SQCommanderState, ESQCommandOptionState CommandOptionState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCommanderManager.CalculateStateTimeRemaining");

	USQCommanderManager_CalculateStateTimeRemaining_Params params;
	params.CommandOption = CommandOption;
	params.SQCommanderState = SQCommanderState;
	params.CommandOptionState = CommandOptionState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQCommanderManager.CalculateStatePercentTimeRemaining
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UClass*                  CommandOption                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQCommanderState*       SQCommanderState               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESQCommandOptionState          CommandOptionState             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQCommanderManager::STATIC_CalculateStatePercentTimeRemaining(class UClass* CommandOption, class ASQCommanderState* SQCommanderState, ESQCommandOptionState CommandOptionState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCommanderManager.CalculateStatePercentTimeRemaining");

	USQCommanderManager_CalculateStatePercentTimeRemaining_Params params;
	params.CommandOption = CommandOption;
	params.SQCommanderState = SQCommanderState;
	params.CommandOptionState = CommandOptionState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQCommanderManager.CalculateState
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UClass*                  CommandOption                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQCommanderState*       SQCommanderState               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESQCommandOptionState          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
ESQCommandOptionState USQCommanderManager::STATIC_CalculateState(class UClass* CommandOption, class ASQCommanderState* SQCommanderState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCommanderManager.CalculateState");

	USQCommanderManager_CalculateState_Params params;
	params.CommandOption = CommandOption;
	params.SQCommanderState = SQCommanderState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQCommanderManager.CalculateCategoryPercentRemainingTime
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// unsigned char                  CommandOptionType              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQCommanderState*       SQCommanderState               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQCommanderManager::STATIC_CalculateCategoryPercentRemainingTime(unsigned char CommandOptionType, class ASQCommanderState* SQCommanderState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCommanderManager.CalculateCategoryPercentRemainingTime");

	USQCommanderManager_CalculateCategoryPercentRemainingTime_Params params;
	params.CommandOptionType = CommandOptionType;
	params.SQCommanderState = SQCommanderState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQCommanderManager.CalculateCategoryLocked
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// unsigned char                  CommandOptionType              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQCommanderState*       SQCommanderState               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQCommanderManager::STATIC_CalculateCategoryLocked(unsigned char CommandOptionType, class ASQCommanderState* SQCommanderState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCommanderManager.CalculateCategoryLocked");

	USQCommanderManager_CalculateCategoryLocked_Params params;
	params.CommandOptionType = CommandOptionType;
	params.SQCommanderState = SQCommanderState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQCommanderManager.CalculateCategoryCurrentRemainingTime
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// unsigned char                  CommandOptionType              (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQCommanderState*       SQCommanderState               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQCommanderManager::STATIC_CalculateCategoryCurrentRemainingTime(unsigned char CommandOptionType, class ASQCommanderState* SQCommanderState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCommanderManager.CalculateCategoryCurrentRemainingTime");

	USQCommanderManager_CalculateCategoryCurrentRemainingTime_Params params;
	params.CommandOptionType = CommandOptionType;
	params.SQCommanderState = SQCommanderState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQTeam.TryClaimRole
// (Native, Public, BlueprintCallable)
// Parameters:
// class USQRoleSettings*         SquadRole                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQPlayerController*     Player                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bForDeployment                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQTeam::TryClaimRole(class USQRoleSettings* SquadRole, class ASQPlayerController* Player, bool bForDeployment)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQTeam.TryClaimRole");

	ASQTeam_TryClaimRole_Params params;
	params.SquadRole = SquadRole;
	params.Player = Player;
	params.bForDeployment = bForDeployment;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQTeam.ReleaseRole
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USQRoleSettings*         SquadRole                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQPlayerController*     Player                         (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQTeam::ReleaseRole(class USQRoleSettings* SquadRole, class ASQPlayerController* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQTeam.ReleaseRole");

	ASQTeam_ReleaseRole_Params params;
	params.SquadRole = SquadRole;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQTeam.GetNatoStringOrSquadString
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            Idx                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString ASQTeam::STATIC_GetNatoStringOrSquadString(int Idx)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQTeam.GetNatoStringOrSquadString");

	ASQTeam_GetNatoStringOrSquadString_Params params;
	params.Idx = Idx;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQTeam.ForceRecalcRoleUsage
// (Final, Native, Public, BlueprintCallable)
void ASQTeam::ForceRecalcRoleUsage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQTeam.ForceRecalcRoleUsage");

	ASQTeam_ForceRecalcRoleUsage_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCommanderInputComponent.VotePlayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASQPlayerState*          Player                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQCommanderInputComponent::VotePlayer(class ASQPlayerState* Player)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCommanderInputComponent.VotePlayer");

	USQCommanderInputComponent_VotePlayer_Params params;
	params.Player = Player;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCommanderInputComponent.ServerVoteForCommander
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ASQPlayerState*          Nominee                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQCommanderInputComponent::ServerVoteForCommander(class ASQPlayerState* Nominee)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCommanderInputComponent.ServerVoteForCommander");

	USQCommanderInputComponent_ServerVoteForCommander_Params params;
	params.Nominee = Nominee;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCommanderInputComponent.ServerRequestSupportAtLocation
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                 WorldLocation                  (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQCommanderInputComponent::ServerRequestSupportAtLocation(const struct FVector& WorldLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCommanderInputComponent.ServerRequestSupportAtLocation");

	USQCommanderInputComponent_ServerRequestSupportAtLocation_Params params;
	params.WorldLocation = WorldLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCommanderInputComponent.ServerRequestCreateCommandActor
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// class UClass*                  CommandOption                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform              Transform                      (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                          distance                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQCommanderInputComponent::ServerRequestCreateCommandActor(class UClass* CommandOption, const struct FTransform& Transform, float distance)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCommanderInputComponent.ServerRequestCreateCommandActor");

	USQCommanderInputComponent_ServerRequestCreateCommandActor_Params params;
	params.CommandOption = CommandOption;
	params.Transform = Transform;
	params.distance = distance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCommanderInputComponent.ServerRequestCommandActorDestroyed
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class UClass*                  CommandOption                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQCommanderInputComponent::ServerRequestCommandActorDestroyed(class UClass* CommandOption)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCommanderInputComponent.ServerRequestCommandActorDestroyed");

	USQCommanderInputComponent_ServerRequestCommandActorDestroyed_Params params;
	params.CommandOption = CommandOption;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCommanderInputComponent.ServerMakePlayerCommander
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ASQPlayerState*          NewCommander                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQCommanderInputComponent::ServerMakePlayerCommander(class ASQPlayerState* NewCommander)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCommanderInputComponent.ServerMakePlayerCommander");

	USQCommanderInputComponent_ServerMakePlayerCommander_Params params;
	params.NewCommander = NewCommander;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCommanderInputComponent.ServerDemoteCommander
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
void USQCommanderInputComponent::ServerDemoteCommander()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCommanderInputComponent.ServerDemoteCommander");

	USQCommanderInputComponent_ServerDemoteCommander_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCommanderInputComponent.ServerDebugDisableVoteRequirements
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
void USQCommanderInputComponent::ServerDebugDisableVoteRequirements()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCommanderInputComponent.ServerDebugDisableVoteRequirements");

	USQCommanderInputComponent_ServerDebugDisableVoteRequirements_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCommanderInputComponent.ServerAttemptSetActionsUsableState
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// bool                           bNewActionsEnabled             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQCommanderInputComponent::ServerAttemptSetActionsUsableState(bool bNewActionsEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCommanderInputComponent.ServerAttemptSetActionsUsableState");

	USQCommanderInputComponent_ServerAttemptSetActionsUsableState_Params params;
	params.bNewActionsEnabled = bNewActionsEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCommanderInputComponent.RequestSupportAtLocation
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 WorldLocation                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQCommanderInputComponent::RequestSupportAtLocation(const struct FVector& WorldLocation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCommanderInputComponent.RequestSupportAtLocation");

	USQCommanderInputComponent_RequestSupportAtLocation_Params params;
	params.WorldLocation = WorldLocation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCommanderInputComponent.RequestPromoteCommander
// (Final, Native, Public, BlueprintCallable)
void USQCommanderInputComponent::RequestPromoteCommander()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCommanderInputComponent.RequestPromoteCommander");

	USQCommanderInputComponent_RequestPromoteCommander_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCommanderInputComponent.RequestDemoteCommander
// (Final, Native, Public, BlueprintCallable)
void USQCommanderInputComponent::RequestDemoteCommander()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCommanderInputComponent.RequestDemoteCommander");

	USQCommanderInputComponent_RequestDemoteCommander_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCommanderInputComponent.RequestCreateCommandActor
// (Final, Native, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UClass*                  CommandOption                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform              Transform                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// float                          distance                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQCommanderInputComponent::RequestCreateCommandActor(class UClass* CommandOption, const struct FTransform& Transform, float distance)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCommanderInputComponent.RequestCreateCommandActor");

	USQCommanderInputComponent_RequestCreateCommandActor_Params params;
	params.CommandOption = CommandOption;
	params.Transform = Transform;
	params.distance = distance;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCommanderInputComponent.RequestCommandActorDestroyed
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  CommandOption                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQCommanderInputComponent::RequestCommandActorDestroyed(class UClass* CommandOption)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCommanderInputComponent.RequestCommandActorDestroyed");

	USQCommanderInputComponent_RequestCommandActorDestroyed_Params params;
	params.CommandOption = CommandOption;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCommanderInputComponent.DebugVoteForCommander
// (Final, Exec, Native, Public)
// Parameters:
// struct FString                 PlayerName                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQCommanderInputComponent::DebugVoteForCommander(const struct FString& PlayerName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCommanderInputComponent.DebugVoteForCommander");

	USQCommanderInputComponent_DebugVoteForCommander_Params params;
	params.PlayerName = PlayerName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCommanderInputComponent.DebugDisableVoteRequirements
// (Exec, Native, Public)
void USQCommanderInputComponent::DebugDisableVoteRequirements()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCommanderInputComponent.DebugDisableVoteRequirements");

	USQCommanderInputComponent_DebugDisableVoteRequirements_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCommanderInputComponent.DebugDemoteCommander
// (Exec, Native, Public)
void USQCommanderInputComponent::DebugDemoteCommander()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCommanderInputComponent.DebugDemoteCommander");

	USQCommanderInputComponent_DebugDemoteCommander_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCommanderInputComponent.DebugBecomeCommander
// (Final, Exec, Native, Public)
void USQCommanderInputComponent::DebugBecomeCommander()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCommanderInputComponent.DebugBecomeCommander");

	USQCommanderInputComponent_DebugBecomeCommander_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCommanderInputComponent.AttemptSetActionsUsableState
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bNewActionsEnabled             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQCommanderInputComponent::AttemptSetActionsUsableState(bool bNewActionsEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCommanderInputComponent.AttemptSetActionsUsableState");

	USQCommanderInputComponent_AttemptSetActionsUsableState_Params params;
	params.bNewActionsEnabled = bNewActionsEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCommandActor.OnRep_Action
// (Event, Public, BlueprintEvent)
void ASQCommandActor::OnRep_Action()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCommandActor.OnRep_Action");

	ASQCommandActor_OnRep_Action_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQColorsDataAsset.GetColor
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// TEnumAsByte<ESQMapWidgetTint>  TintValue                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            FireTeamIndex                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FLinearColor USQColorsDataAsset::GetColor(TEnumAsByte<ESQMapWidgetTint> TintValue, int FireTeamIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQColorsDataAsset.GetColor");

	USQColorsDataAsset_GetColor_Params params;
	params.TintValue = TintValue;
	params.FireTeamIndex = FireTeamIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQCheatManager.SqDumpPakContents
// (Final, Exec, Native, Private)
// Parameters:
// struct FString                 OutputFilename                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQCheatManager::SqDumpPakContents(const struct FString& OutputFilename)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCheatManager.SqDumpPakContents");

	USQCheatManager_SqDumpPakContents_Params params;
	params.OutputFilename = OutputFilename;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGraphNodeComponent.RemoveNeighbor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USQGraphNodeComponent*   Neighbor                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQGraphNodeComponent::RemoveNeighbor(class USQGraphNodeComponent* Neighbor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGraphNodeComponent.RemoveNeighbor");

	USQGraphNodeComponent_RemoveNeighbor_Params params;
	params.Neighbor = Neighbor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGraphNodeComponent.OnNeighborRemoved
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class USQGraphNodeComponent*   Neighbor                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQGraphNodeComponent::OnNeighborRemoved(class USQGraphNodeComponent* Neighbor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGraphNodeComponent.OnNeighborRemoved");

	USQGraphNodeComponent_OnNeighborRemoved_Params params;
	params.Neighbor = Neighbor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGraphNodeComponent.OnNeighborAdded
// (Native, Event, Protected, BlueprintEvent)
// Parameters:
// class USQGraphNodeComponent*   Neighbor                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQGraphNodeComponent::OnNeighborAdded(class USQGraphNodeComponent* Neighbor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGraphNodeComponent.OnNeighborAdded");

	USQGraphNodeComponent_OnNeighborAdded_Params params;
	params.Neighbor = Neighbor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQGraphNodeComponent.GetNeighbors
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<class USQGraphNodeComponent*> InOutNodes                     (Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
void USQGraphNodeComponent::GetNeighbors(TArray<class USQGraphNodeComponent*>* InOutNodes)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGraphNodeComponent.GetNeighbors");

	USQGraphNodeComponent_GetNeighbors_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (InOutNodes != nullptr)
		*InOutNodes = params.InOutNodes;

}


// Function Squad.SQGraphNodeComponent.AddNeighbor
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USQGraphNodeComponent*   Neighbor                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQGraphNodeComponent::AddNeighbor(class USQGraphNodeComponent* Neighbor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQGraphNodeComponent.AddNeighbor");

	USQGraphNodeComponent_AddNeighbor_Params params;
	params.Neighbor = Neighbor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCaptureZoneComponent.UpdateLockState
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
void USQCaptureZoneComponent::UpdateLockState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCaptureZoneComponent.UpdateLockState");

	USQCaptureZoneComponent_UpdateLockState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCaptureZoneComponent.UpdateCaptureState
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USQCaptureZoneComponent* CaptureZone                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  Team                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQCaptureZoneComponent::UpdateCaptureState(class USQCaptureZoneComponent* CaptureZone, unsigned char Team)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCaptureZoneComponent.UpdateCaptureState");

	USQCaptureZoneComponent_UpdateCaptureState_Params params;
	params.CaptureZone = CaptureZone;
	params.Team = Team;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCaptureZoneComponent.UpdateCanCaptureState
// (Native, Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class USQCaptureZoneComponent*> TeamOneDir                     (Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// TArray<class USQCaptureZoneComponent*> TeamTwoDir                     (Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
void USQCaptureZoneComponent::UpdateCanCaptureState(TArray<class USQCaptureZoneComponent*>* TeamOneDir, TArray<class USQCaptureZoneComponent*>* TeamTwoDir)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCaptureZoneComponent.UpdateCanCaptureState");

	USQCaptureZoneComponent_UpdateCanCaptureState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (TeamOneDir != nullptr)
		*TeamOneDir = params.TeamOneDir;
	if (TeamTwoDir != nullptr)
		*TeamTwoDir = params.TeamTwoDir;

}


// Function Squad.SQCaptureZoneComponent.UnlockCaptureZone
// (Final, Native, Public, BlueprintCallable)
void USQCaptureZoneComponent::UnlockCaptureZone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCaptureZoneComponent.UnlockCaptureZone");

	USQCaptureZoneComponent_UnlockCaptureZone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCaptureZoneComponent.SetTeamCanCapture
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// unsigned char                  Team                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bCanCap                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQCaptureZoneComponent::SetTeamCanCapture(unsigned char Team, bool bCanCap)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCaptureZoneComponent.SetTeamCanCapture");

	USQCaptureZoneComponent_SetTeamCanCapture_Params params;
	params.Team = Team;
	params.bCanCap = bCanCap;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQCaptureZoneComponent.OnRep_Uncappable
// (Final, Native, Private)
void USQCaptureZoneComponent::OnRep_Uncappable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCaptureZoneComponent.OnRep_Uncappable");

	USQCaptureZoneComponent_OnRep_Uncappable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCaptureZoneComponent.OnRep_TeamCapturabilities
// (Final, Native, Private)
void USQCaptureZoneComponent::OnRep_TeamCapturabilities()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCaptureZoneComponent.OnRep_TeamCapturabilities");

	USQCaptureZoneComponent_OnRep_TeamCapturabilities_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCaptureZoneComponent.OnRep_OwningTeam
// (Final, Native, Private)
void USQCaptureZoneComponent::OnRep_OwningTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCaptureZoneComponent.OnRep_OwningTeam");

	USQCaptureZoneComponent_OnRep_OwningTeam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCaptureZoneComponent.OnRep_CapturingTeam
// (Final, Native, Private)
void USQCaptureZoneComponent::OnRep_CapturingTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCaptureZoneComponent.OnRep_CapturingTeam");

	USQCaptureZoneComponent_OnRep_CapturingTeam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCaptureZoneComponent.OnRep_CapturePercent
// (Final, Native, Private)
void USQCaptureZoneComponent::OnRep_CapturePercent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCaptureZoneComponent.OnRep_CapturePercent");

	USQCaptureZoneComponent_OnRep_CapturePercent_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCaptureZoneComponent.OnIndexedTeamStatesReplicated
// (Final, Native, Private)
void USQCaptureZoneComponent::OnIndexedTeamStatesReplicated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCaptureZoneComponent.OnIndexedTeamStatesReplicated");

	USQCaptureZoneComponent_OnIndexedTeamStatesReplicated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCaptureZoneComponent.Neutralize
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
void USQCaptureZoneComponent::Neutralize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCaptureZoneComponent.Neutralize");

	USQCaptureZoneComponent_Neutralize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCaptureZoneComponent.LockCaptureZone
// (Final, Native, Public, BlueprintCallable)
void USQCaptureZoneComponent::LockCaptureZone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCaptureZoneComponent.LockCaptureZone");

	USQCaptureZoneComponent_LockCaptureZone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCaptureZoneComponent.GetPlayersInCaptureZone
// (Native, Public, HasOutParms)
// Parameters:
// TArray<class AActor*>          TeamOne                        (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<class AActor*>          TeamTwo                        (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
void USQCaptureZoneComponent::GetPlayersInCaptureZone(TArray<class AActor*>* TeamOne, TArray<class AActor*>* TeamTwo)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCaptureZoneComponent.GetPlayersInCaptureZone");

	USQCaptureZoneComponent_GetPlayersInCaptureZone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (TeamOne != nullptr)
		*TeamOne = params.TeamOne;
	if (TeamTwo != nullptr)
		*TeamTwo = params.TeamTwo;

}


// Function Squad.SQCaptureZoneComponent.GetCapturezoneDirections
// (Native, Event, Public, HasOutParms, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class USQCaptureZoneComponent*> TeamOneDir                     (Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// TArray<class USQCaptureZoneComponent*> TeamTwoDir                     (Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
void USQCaptureZoneComponent::GetCapturezoneDirections(TArray<class USQCaptureZoneComponent*>* TeamOneDir, TArray<class USQCaptureZoneComponent*>* TeamTwoDir)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCaptureZoneComponent.GetCapturezoneDirections");

	USQCaptureZoneComponent_GetCapturezoneDirections_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (TeamOneDir != nullptr)
		*TeamOneDir = params.TeamOneDir;
	if (TeamTwoDir != nullptr)
		*TeamTwoDir = params.TeamTwoDir;

}


// Function Squad.SQCaptureZoneComponent.GetCanTeamCapture
// (Native, Event, Public, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// unsigned char                  Team                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQCaptureZoneComponent::GetCanTeamCapture(unsigned char Team)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCaptureZoneComponent.GetCanTeamCapture");

	USQCaptureZoneComponent_GetCanTeamCapture_Params params;
	params.Team = Team;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQCaptureZoneComponent.FullyCap
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// unsigned char                  ForTeam                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQCaptureZoneComponent::FullyCap(unsigned char ForTeam)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCaptureZoneComponent.FullyCap");

	USQCaptureZoneComponent_FullyCap_Params params;
	params.ForTeam = ForTeam;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCaptureZoneComponent.FindMainBase
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// unsigned char                  Team                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class USQGraphNodeComponent*> VisitedNodes                   (Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class USQGraphNodeComponent*   ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USQGraphNodeComponent* USQCaptureZoneComponent::FindMainBase(unsigned char Team, TArray<class USQGraphNodeComponent*>* VisitedNodes)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCaptureZoneComponent.FindMainBase");

	USQCaptureZoneComponent_FindMainBase_Params params;
	params.Team = Team;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (VisitedNodes != nullptr)
		*VisitedNodes = params.VisitedNodes;


	return params.ReturnValue;
}


// Function Squad.SQCaptureZoneComponent.CaptureTick
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
void USQCaptureZoneComponent::CaptureTick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCaptureZoneComponent.CaptureTick");

	USQCaptureZoneComponent_CaptureTick_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCameraMan.ServerSetFlySpeedTarget
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          InFlySpeedTarget               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQCameraMan::ServerSetFlySpeedTarget(float InFlySpeedTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCameraMan.ServerSetFlySpeedTarget");

	ASQCameraMan_ServerSetFlySpeedTarget_Params params;
	params.InFlySpeedTarget = InFlySpeedTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCameraMan.ServerSetDecelerationTarget
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          InDecelerationTarget           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQCameraMan::ServerSetDecelerationTarget(float InDecelerationTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCameraMan.ServerSetDecelerationTarget");

	ASQCameraMan_ServerSetDecelerationTarget_Params params;
	params.InDecelerationTarget = InDecelerationTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQCameraMan.DrawHUD
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASQHUD*                  SquadHUD                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCanvas*                 Canvas                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQCameraMan::DrawHUD(class ASQHUD* SquadHUD, class UCanvas* Canvas)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQCameraMan.DrawHUD");

	ASQCameraMan_DrawHUD_Params params;
	params.SquadHUD = SquadHUD;
	params.Canvas = Canvas;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQBuffManager.HasBuff
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// ESQBuffTypes                   BuffTypeToCheck                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQBuffManager::HasBuff(ESQBuffTypes BuffTypeToCheck)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBuffManager.HasBuff");

	USQBuffManager_HasBuff_Params params;
	params.BuffTypeToCheck = BuffTypeToCheck;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBoundaryListener.UnregisterAllBoundaries
// (Final, Native, Public, BlueprintCallable)
void USQBoundaryListener::UnregisterAllBoundaries()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBoundaryListener.UnregisterAllBoundaries");

	USQBoundaryListener_UnregisterAllBoundaries_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQBoundaryListener.ShouldRegisterToBoundary
// (Native, Event, Protected, BlueprintEvent, Const)
// Parameters:
// class ASQBoundary*             Boundary                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQBoundaryListener::ShouldRegisterToBoundary(class ASQBoundary* Boundary)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBoundaryListener.ShouldRegisterToBoundary");

	USQBoundaryListener_ShouldRegisterToBoundary_Params params;
	params.Boundary = Boundary;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBoundaryListener.OnExitBoundary
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASQBoundary*             Boundary                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQBoundaryListener::OnExitBoundary(class ASQBoundary* Boundary)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBoundaryListener.OnExitBoundary");

	USQBoundaryListener_OnExitBoundary_Params params;
	params.Boundary = Boundary;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQBoundaryListener.OnEnterBoundary
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASQBoundary*             Boundary                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQBoundaryListener::OnEnterBoundary(class ASQBoundary* Boundary)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBoundaryListener.OnEnterBoundary");

	USQBoundaryListener_OnEnterBoundary_Params params;
	params.Boundary = Boundary;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQBoundaryListener.GetActor
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class AActor*                  ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AActor* USQBoundaryListener::GetActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBoundaryListener.GetActor");

	USQBoundaryListener_GetActor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.UpdateTextureOnImage
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UImage*                  Image                          (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2DDynamic*       Texture                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_UpdateTextureOnImage(class UImage* Image, class UTexture2DDynamic* Texture)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.UpdateTextureOnImage");

	USQBlueprintLibrary_UpdateTextureOnImage_Params params;
	params.Image = Image;
	params.Texture = Texture;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQBlueprintLibrary.UpdateSpring3D
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FSQSpringInterpStruct3D Spring                         (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_UpdateSpring3D(struct FSQSpringInterpStruct3D* Spring, float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.UpdateSpring3D");

	USQBlueprintLibrary_UpdateSpring3D_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Spring != nullptr)
		*Spring = params.Spring;

}


// Function Squad.SQBlueprintLibrary.UpdateDynamicEasing
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FSQDynamicEasingStruct  Easing                         (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_UpdateDynamicEasing(struct FSQDynamicEasingStruct* Easing, float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.UpdateDynamicEasing");

	USQBlueprintLibrary_UpdateDynamicEasing_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Easing != nullptr)
		*Easing = params.Easing;

}


// Function Squad.SQBlueprintLibrary.SpawnSoundAttachedWithParameters
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class USoundBase*              Sound                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USceneComponent*         AttachToComponent              (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FAudioComponentParam> AudioParameters                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, AdvancedDisplay, NativeAccessSpecifierPublic)
// struct FName                   AttachPointName                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Location                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                Rotation                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
// TEnumAsByte<EAttachLocation>   LocationType                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bStopWhenAttachedToDestroyed   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          VolumeMultiplier               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          PitchMultiplier                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          StartTime                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundAttenuation*       AttenuationSettings            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundConcurrency*       ConcurrencySettings            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UAudioComponent*         ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UAudioComponent* USQBlueprintLibrary::STATIC_SpawnSoundAttachedWithParameters(class USoundBase* Sound, class USceneComponent* AttachToComponent, TArray<struct FAudioComponentParam> AudioParameters, const struct FName& AttachPointName, const struct FVector& Location, const struct FRotator& Rotation, TEnumAsByte<EAttachLocation> LocationType, bool bStopWhenAttachedToDestroyed, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundAttenuation* AttenuationSettings, class USoundConcurrency* ConcurrencySettings)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.SpawnSoundAttachedWithParameters");

	USQBlueprintLibrary_SpawnSoundAttachedWithParameters_Params params;
	params.Sound = Sound;
	params.AttachToComponent = AttachToComponent;
	params.AudioParameters = AudioParameters;
	params.AttachPointName = AttachPointName;
	params.Location = Location;
	params.Rotation = Rotation;
	params.LocationType = LocationType;
	params.bStopWhenAttachedToDestroyed = bStopWhenAttachedToDestroyed;
	params.VolumeMultiplier = VolumeMultiplier;
	params.PitchMultiplier = PitchMultiplier;
	params.StartTime = StartTime;
	params.AttenuationSettings = AttenuationSettings;
	params.ConcurrencySettings = ConcurrencySettings;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.SetTextureRenderTarget2DSize
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UTextureRenderTarget2D*  Texture                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            SizeX                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            SizeY                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_SetTextureRenderTarget2DSize(class UTextureRenderTarget2D* Texture, int SizeX, int SizeY)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.SetTextureRenderTarget2DSize");

	USQBlueprintLibrary_SetTextureRenderTarget2DSize_Params params;
	params.Texture = Texture;
	params.SizeX = SizeX;
	params.SizeY = SizeY;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQBlueprintLibrary.SetSkeletalPhysMaterialOverride
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*  Component                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPhysicalMaterial*       NewPhysMaterial                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_SetSkeletalPhysMaterialOverride(class USkeletalMeshComponent* Component, class UPhysicalMaterial* NewPhysMaterial)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.SetSkeletalPhysMaterialOverride");

	USQBlueprintLibrary_SetSkeletalPhysMaterialOverride_Params params;
	params.Component = Component;
	params.NewPhysMaterial = NewPhysMaterial;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQBlueprintLibrary.SetMousePosition
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            X                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Y                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_SetMousePosition(class UObject* WorldContextObject, int X, int Y)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.SetMousePosition");

	USQBlueprintLibrary_SetMousePosition_Params params;
	params.WorldContextObject = WorldContextObject;
	params.X = X;
	params.Y = Y;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQBlueprintLibrary.SetMobility
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USceneComponent*         Target                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TEnumAsByte<EComponentMobility> NewMobility                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_SetMobility(class USceneComponent* Target, TEnumAsByte<EComponentMobility> NewMobility)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.SetMobility");

	USQBlueprintLibrary_SetMobility_Params params;
	params.Target = Target;
	params.NewMobility = NewMobility;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQBlueprintLibrary.SetMasterPoseComponent
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USkeletalMeshComponent*  Target                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USkeletalMeshComponent*  Master                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_SetMasterPoseComponent(class USkeletalMeshComponent* Target, class USkeletalMeshComponent* Master)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.SetMasterPoseComponent");

	USQBlueprintLibrary_SetMasterPoseComponent_Params params;
	params.Target = Target;
	params.Master = Master;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQBlueprintLibrary.SetDynamicEasingTarget
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FSQDynamicEasingStruct  Easing                         (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                          NewTarget                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_SetDynamicEasingTarget(struct FSQDynamicEasingStruct* Easing, float NewTarget)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.SetDynamicEasingTarget");

	USQBlueprintLibrary_SetDynamicEasingTarget_Params params;
	params.NewTarget = NewTarget;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Easing != nullptr)
		*Easing = params.Easing;

}


// Function Squad.SQBlueprintLibrary.SetComponentTickGroup
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UActorComponent*         Target                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TEnumAsByte<ETickingGroup>     NewTickGroup                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_SetComponentTickGroup(class UActorComponent* Target, TEnumAsByte<ETickingGroup> NewTickGroup)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.SetComponentTickGroup");

	USQBlueprintLibrary_SetComponentTickGroup_Params params;
	params.Target = Target;
	params.NewTickGroup = NewTickGroup;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQBlueprintLibrary.SetActorTickGroup
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  Target                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TEnumAsByte<ETickingGroup>     NewTickGroup                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_SetActorTickGroup(class AActor* Target, TEnumAsByte<ETickingGroup> NewTickGroup)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.SetActorTickGroup");

	USQBlueprintLibrary_SetActorTickGroup_Params params;
	params.Target = Target;
	params.NewTickGroup = NewTickGroup;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQBlueprintLibrary.SetActorHiddenInGame
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  ActorToAffect                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bNewHidden                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bPropagateToAttachedChildren   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_SetActorHiddenInGame(class AActor* ActorToAffect, bool bNewHidden, bool bPropagateToAttachedChildren)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.SetActorHiddenInGame");

	USQBlueprintLibrary_SetActorHiddenInGame_Params params;
	params.ActorToAffect = ActorToAffect;
	params.bNewHidden = bNewHidden;
	params.bPropagateToAttachedChildren = bPropagateToAttachedChildren;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQBlueprintLibrary.SetActorCollisionInGame
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                  ActorToAffect                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bNewCollisionEnabled           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bPropagateToAttachedChildren   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_SetActorCollisionInGame(class AActor* ActorToAffect, bool bNewCollisionEnabled, bool bPropagateToAttachedChildren)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.SetActorCollisionInGame");

	USQBlueprintLibrary_SetActorCollisionInGame_Params params;
	params.ActorToAffect = ActorToAffect;
	params.bNewCollisionEnabled = bNewCollisionEnabled;
	params.bPropagateToAttachedChildren = bPropagateToAttachedChildren;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQBlueprintLibrary.ServerLicensingNoticeNeeded
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQBlueprintLibrary::STATIC_ServerLicensingNoticeNeeded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.ServerLicensingNoticeNeeded");

	USQBlueprintLibrary_ServerLicensingNoticeNeeded_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.ServerHealthEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQBlueprintLibrary::STATIC_ServerHealthEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.ServerHealthEnabled");

	USQBlueprintLibrary_ServerHealthEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.SaveAndForceRebuildingKeyMaps
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// bool                           bRestoreDefaults               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_SaveAndForceRebuildingKeyMaps(bool bRestoreDefaults)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.SaveAndForceRebuildingKeyMaps");

	USQBlueprintLibrary_SaveAndForceRebuildingKeyMaps_Params params;
	params.bRestoreDefaults = bRestoreDefaults;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQBlueprintLibrary.RebindKey
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FName                   ActionName                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                    newKey                         (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OccuranceIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_RebindKey(const struct FName& ActionName, const struct FKey& newKey, int OccuranceIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.RebindKey");

	USQBlueprintLibrary_RebindKey_Params params;
	params.ActionName = ActionName;
	params.newKey = newKey;
	params.OccuranceIndex = OccuranceIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQBlueprintLibrary.RebindAxisKey
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FInputAxisKeyMapping    Mapping                        (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FKey                    newKey                         (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_RebindAxisKey(const struct FInputAxisKeyMapping& Mapping, const struct FKey& newKey)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.RebindAxisKey");

	USQBlueprintLibrary_RebindAxisKey_Params params;
	params.Mapping = Mapping;
	params.newKey = newKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQBlueprintLibrary.PrintShotInfo
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FSQShotInfo             Shot                           (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_PrintShotInfo(const struct FSQShotInfo& Shot)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.PrintShotInfo");

	USQBlueprintLibrary_PrintShotInfo_Params params;
	params.Shot = Shot;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQBlueprintLibrary.PrintHitResult
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_PrintHitResult(const struct FHitResult& Hit)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.PrintHitResult");

	USQBlueprintLibrary_PrintHitResult_Params params;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQBlueprintLibrary.PlaySoundAtLocationWithParameters
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundBase*              Sound                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Location                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FAudioComponentParam> AudioParameters                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, AdvancedDisplay, NativeAccessSpecifierPublic)
// struct FRotator                Rotation                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
// float                          VolumeMultiplier               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          PitchMultiplier                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          StartTime                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundAttenuation*       AttenuationSettings            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundConcurrency*       ConcurrencySettings            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_PlaySoundAtLocationWithParameters(class UObject* WorldContextObject, class USoundBase* Sound, const struct FVector& Location, TArray<struct FAudioComponentParam> AudioParameters, const struct FRotator& Rotation, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundAttenuation* AttenuationSettings, class USoundConcurrency* ConcurrencySettings)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.PlaySoundAtLocationWithParameters");

	USQBlueprintLibrary_PlaySoundAtLocationWithParameters_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Sound = Sound;
	params.Location = Location;
	params.AudioParameters = AudioParameters;
	params.Rotation = Rotation;
	params.VolumeMultiplier = VolumeMultiplier;
	params.PitchMultiplier = PitchMultiplier;
	params.StartTime = StartTime;
	params.AttenuationSettings = AttenuationSettings;
	params.ConcurrencySettings = ConcurrencySettings;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQBlueprintLibrary.PlaySound2DWithParameters
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundBase*              Sound                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FAudioComponentParam> AudioParameters                (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// float                          VolumeMultiplier               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          PitchMultiplier                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          StartTime                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundConcurrency*       ConcurrencySettings            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_PlaySound2DWithParameters(class UObject* WorldContextObject, class USoundBase* Sound, TArray<struct FAudioComponentParam> AudioParameters, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundConcurrency* ConcurrencySettings)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.PlaySound2DWithParameters");

	USQBlueprintLibrary_PlaySound2DWithParameters_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Sound = Sound;
	params.AudioParameters = AudioParameters;
	params.VolumeMultiplier = VolumeMultiplier;
	params.PitchMultiplier = PitchMultiplier;
	params.StartTime = StartTime;
	params.ConcurrencySettings = ConcurrencySettings;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQBlueprintLibrary.PlaySoldierMovementFoleySound
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable)
// Parameters:
// class ASQSoldier*              Soldier                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundBase*              Sound                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bSetSpeedParameter             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bSetPhysMatParameter           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 LocationOffset                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          VolumeMultiplier               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          PitchMultiplier                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          StartTime                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundAttenuation*       AttenuationSettings            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USoundConcurrency*       ConcurrencySettings            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TEnumAsByte<EAttachLocation>   LocationType                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_PlaySoldierMovementFoleySound(class ASQSoldier* Soldier, class USoundBase* Sound, bool bSetSpeedParameter, bool bSetPhysMatParameter, const struct FVector& LocationOffset, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundAttenuation* AttenuationSettings, class USoundConcurrency* ConcurrencySettings, TEnumAsByte<EAttachLocation> LocationType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.PlaySoldierMovementFoleySound");

	USQBlueprintLibrary_PlaySoldierMovementFoleySound_Params params;
	params.Soldier = Soldier;
	params.Sound = Sound;
	params.bSetSpeedParameter = bSetSpeedParameter;
	params.bSetPhysMatParameter = bSetPhysMatParameter;
	params.LocationOffset = LocationOffset;
	params.VolumeMultiplier = VolumeMultiplier;
	params.PitchMultiplier = PitchMultiplier;
	params.StartTime = StartTime;
	params.AttenuationSettings = AttenuationSettings;
	params.ConcurrencySettings = ConcurrencySettings;
	params.LocationType = LocationType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQBlueprintLibrary.OWICoreStateVisibleDefined
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQBlueprintLibrary::STATIC_OWICoreStateVisibleDefined()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.OWICoreStateVisibleDefined");

	USQBlueprintLibrary_OWICoreStateVisibleDefined_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.OWICoreStateEnabledDefined
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQBlueprintLibrary::STATIC_OWICoreStateEnabledDefined()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.OWICoreStateEnabledDefined");

	USQBlueprintLibrary_OWICoreStateEnabledDefined_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.OffsetSpring3D
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FSQSpringInterpStruct3D Spring                         (Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector                 PosOffset                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_OffsetSpring3D(struct FSQSpringInterpStruct3D* Spring, const struct FVector& PosOffset)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.OffsetSpring3D");

	USQBlueprintLibrary_OffsetSpring3D_Params params;
	params.PosOffset = PosOffset;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Spring != nullptr)
		*Spring = params.Spring;

}


// Function Squad.SQBlueprintLibrary.NormalizeAngle
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          InAngle                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQBlueprintLibrary::STATIC_NormalizeAngle(float InAngle)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.NormalizeAngle");

	USQBlueprintLibrary_NormalizeAngle_Params params;
	params.InAngle = InAngle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.ModdedServersOnTop
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQBlueprintLibrary::STATIC_ModdedServersOnTop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.ModdedServersOnTop");

	USQBlueprintLibrary_ModdedServersOnTop_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.MatchWaitingToStart
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQBlueprintLibrary::STATIC_MatchWaitingToStart(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.MatchWaitingToStart");

	USQBlueprintLibrary_MatchWaitingToStart_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.MatchWaitingAfterCompletion
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQBlueprintLibrary::STATIC_MatchWaitingAfterCompletion(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.MatchWaitingAfterCompletion");

	USQBlueprintLibrary_MatchWaitingAfterCompletion_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.MatchInProgress
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQBlueprintLibrary::STATIC_MatchInProgress(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.MatchInProgress");

	USQBlueprintLibrary_MatchInProgress_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.MapMarkersEnabledDefined
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQBlueprintLibrary::STATIC_MapMarkersEnabledDefined()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.MapMarkersEnabledDefined");

	USQBlueprintLibrary_MapMarkersEnabledDefined_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.MapIconVisibleDefined
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQBlueprintLibrary::STATIC_MapIconVisibleDefined()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.MapIconVisibleDefined");

	USQBlueprintLibrary_MapIconVisibleDefined_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.MapIconEnabledDefined
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQBlueprintLibrary::STATIC_MapIconEnabledDefined()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.MapIconEnabledDefined");

	USQBlueprintLibrary_MapIconEnabledDefined_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.LogUnusedProperties
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 Object                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_LogUnusedProperties(class UObject* Object)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.LogUnusedProperties");

	USQBlueprintLibrary_LogUnusedProperties_Params params;
	params.Object = Object;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQBlueprintLibrary.LoadCredits
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<struct FSQCreditsList>  OutCreditsList                 (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_LoadCredits(TArray<struct FSQCreditsList>* OutCreditsList)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.LoadCredits");

	USQBlueprintLibrary_LoadCredits_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutCreditsList != nullptr)
		*OutCreditsList = params.OutCreditsList;

}


// Function Squad.SQBlueprintLibrary.IsValidKey
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FKey                    Key                            (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQBlueprintLibrary::STATIC_IsValidKey(const struct FKey& Key)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.IsValidKey");

	USQBlueprintLibrary_IsValidKey_Params params;
	params.Key = Key;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.IsUnderTerrain
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 StartTrace                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  InIgnoreActor                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          TraceDistance                  (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bTraceMustImpactAboveToBeUnderTerrain (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQBlueprintLibrary::STATIC_IsUnderTerrain(class UObject* WorldContextObject, const struct FVector& StartTrace, class AActor* InIgnoreActor, float TraceDistance, bool bTraceMustImpactAboveToBeUnderTerrain)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.IsUnderTerrain");

	USQBlueprintLibrary_IsUnderTerrain_Params params;
	params.WorldContextObject = WorldContextObject;
	params.StartTrace = StartTrace;
	params.InIgnoreActor = InIgnoreActor;
	params.TraceDistance = TraceDistance;
	params.bTraceMustImpactAboveToBeUnderTerrain = bTraceMustImpactAboveToBeUnderTerrain;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.IsStandaloneOrListenServer
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQBlueprintLibrary::STATIC_IsStandaloneOrListenServer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.IsStandaloneOrListenServer");

	USQBlueprintLibrary_IsStandaloneOrListenServer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.IsStandalone
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQBlueprintLibrary::STATIC_IsStandalone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.IsStandalone");

	USQBlueprintLibrary_IsStandalone_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.IsSimulatingInEditor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQBlueprintLibrary::STATIC_IsSimulatingInEditor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.IsSimulatingInEditor");

	USQBlueprintLibrary_IsSimulatingInEditor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.IsShippingBuild
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQBlueprintLibrary::STATIC_IsShippingBuild()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.IsShippingBuild");

	USQBlueprintLibrary_IsShippingBuild_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.IsQueueEnabled
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQBlueprintLibrary::STATIC_IsQueueEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.IsQueueEnabled");

	USQBlueprintLibrary_IsQueueEnabled_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.IsLocationWithinDistanceToLocalPlayer
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// ESQReturnBool                  Branches                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 OtherLocation                  (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          DistanceInMeters               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQBlueprintLibrary::STATIC_IsLocationWithinDistanceToLocalPlayer(ESQReturnBool* Branches, const struct FVector& OtherLocation, float DistanceInMeters)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.IsLocationWithinDistanceToLocalPlayer");

	USQBlueprintLibrary_IsLocationWithinDistanceToLocalPlayer_Params params;
	params.OtherLocation = OtherLocation;
	params.DistanceInMeters = DistanceInMeters;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Branches != nullptr)
		*Branches = params.Branches;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.IsGamepadKey
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FKey                    Key                            (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQBlueprintLibrary::STATIC_IsGamepadKey(const struct FKey& Key)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.IsGamepadKey");

	USQBlueprintLibrary_IsGamepadKey_Params params;
	params.Key = Key;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.IsActorWithinDistanceToLocalPlayer
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// ESQReturnBool                  Branches                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          DistanceInMeters               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQBlueprintLibrary::STATIC_IsActorWithinDistanceToLocalPlayer(ESQReturnBool* Branches, class AActor* OtherActor, float DistanceInMeters)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.IsActorWithinDistanceToLocalPlayer");

	USQBlueprintLibrary_IsActorWithinDistanceToLocalPlayer_Params params;
	params.OtherActor = OtherActor;
	params.DistanceInMeters = DistanceInMeters;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Branches != nullptr)
		*Branches = params.Branches;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.InMainMenu
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQBlueprintLibrary::STATIC_InMainMenu(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.InMainMenu");

	USQBlueprintLibrary_InMainMenu_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.GetZoomedFOV
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          MagnificationDesired           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          DefaultFOV                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQBlueprintLibrary::STATIC_GetZoomedFOV(float MagnificationDesired, float DefaultFOV)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.GetZoomedFOV");

	USQBlueprintLibrary_GetZoomedFOV_Params params;
	params.MagnificationDesired = MagnificationDesired;
	params.DefaultFOV = DefaultFOV;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.GetWorldSettings
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AWorldSettings*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class AWorldSettings* USQBlueprintLibrary::STATIC_GetWorldSettings(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.GetWorldSettings");

	USQBlueprintLibrary_GetWorldSettings_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.GetTextureMemoryStats
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSQTextureMemoryStats   ReturnValue                    (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
struct FSQTextureMemoryStats USQBlueprintLibrary::STATIC_GetTextureMemoryStats()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.GetTextureMemoryStats");

	USQBlueprintLibrary_GetTextureMemoryStats_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.GetTextSize
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSlateFontInfo          FontInfo                       (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   Text                           (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// float                          ScaleUI                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector2D USQBlueprintLibrary::STATIC_GetTextSize(const struct FSlateFontInfo& FontInfo, const struct FText& Text, float ScaleUI)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.GetTextSize");

	USQBlueprintLibrary_GetTextSize_Params params;
	params.FontInfo = FontInfo;
	params.Text = Text;
	params.ScaleUI = ScaleUI;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.GetSquadPhysMat
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class UPhysicalMaterial*       PhysMat                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USQPhysicalMaterial*     SquadPhysMat                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_GetSquadPhysMat(class UPhysicalMaterial* PhysMat, class USQPhysicalMaterial** SquadPhysMat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.GetSquadPhysMat");

	USQBlueprintLibrary_GetSquadPhysMat_Params params;
	params.PhysMat = PhysMat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (SquadPhysMat != nullptr)
		*SquadPhysMat = params.SquadPhysMat;

}


// Function Squad.SQBlueprintLibrary.GetSquadGameUserSettings
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class USQGameUserSettings*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USQGameUserSettings* USQBlueprintLibrary::STATIC_GetSquadGameUserSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.GetSquadGameUserSettings");

	USQBlueprintLibrary_GetSquadGameUserSettings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.GetSquadGameSession
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQGameSession*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASQGameSession* USQBlueprintLibrary::STATIC_GetSquadGameSession(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.GetSquadGameSession");

	USQBlueprintLibrary_GetSquadGameSession_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.GetSquadGameInstance
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class USQGameInstance*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USQGameInstance* USQBlueprintLibrary::STATIC_GetSquadGameInstance(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.GetSquadGameInstance");

	USQBlueprintLibrary_GetSquadGameInstance_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.GetSpringPos3D
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSQSpringInterpStruct3D Spring                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector USQBlueprintLibrary::STATIC_GetSpringPos3D(const struct FSQSpringInterpStruct3D& Spring)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.GetSpringPos3D");

	USQBlueprintLibrary_GetSpringPos3D_Params params;
	params.Spring = Spring;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.GetServerHealthValues
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ServerHealthLow                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ServerHealthHigh               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_GetServerHealthValues(float* ServerHealthLow, float* ServerHealthHigh)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.GetServerHealthValues");

	USQBlueprintLibrary_GetServerHealthValues_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (ServerHealthLow != nullptr)
		*ServerHealthLow = params.ServerHealthLow;
	if (ServerHealthHigh != nullptr)
		*ServerHealthHigh = params.ServerHealthHigh;

}


// Function Squad.SQBlueprintLibrary.GetServerHealthSlateColor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ServerHealth                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FSlateColor             ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FSlateColor USQBlueprintLibrary::STATIC_GetServerHealthSlateColor(class UObject* WorldContextObject, int ServerHealth)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.GetServerHealthSlateColor");

	USQBlueprintLibrary_GetServerHealthSlateColor_Params params;
	params.WorldContextObject = WorldContextObject;
	params.ServerHealth = ServerHealth;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.GetPrimaryDisplaySize
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            Width                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Height                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_GetPrimaryDisplaySize(int* Width, int* Height)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.GetPrimaryDisplaySize");

	USQBlueprintLibrary_GetPrimaryDisplaySize_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Width != nullptr)
		*Width = params.Width;
	if (Height != nullptr)
		*Height = params.Height;

}


// Function Squad.SQBlueprintLibrary.GetPreviousLODLevel
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UStaticMeshComponent*    Component                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int USQBlueprintLibrary::STATIC_GetPreviousLODLevel(class UStaticMeshComponent* Component)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.GetPreviousLODLevel");

	USQBlueprintLibrary_GetPreviousLODLevel_Params params;
	params.Component = Component;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.GetOverlapHitInfos
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UPrimitiveComponent*     Target                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FHitResult>      ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
TArray<struct FHitResult> USQBlueprintLibrary::STATIC_GetOverlapHitInfos(class UPrimitiveComponent* Target)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.GetOverlapHitInfos");

	USQBlueprintLibrary_GetOverlapHitInfos_Params params;
	params.Target = Target;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.GetNumVertices
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UStaticMesh*             StaticMesh                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            LOD                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int USQBlueprintLibrary::STATIC_GetNumVertices(class UStaticMesh* StaticMesh, int LOD)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.GetNumVertices");

	USQBlueprintLibrary_GetNumVertices_Params params;
	params.StaticMesh = StaticMesh;
	params.LOD = LOD;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.GetNumTriangles
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UStaticMesh*             StaticMesh                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            LOD                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int USQBlueprintLibrary::STATIC_GetNumTriangles(class UStaticMesh* StaticMesh, int LOD)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.GetNumTriangles");

	USQBlueprintLibrary_GetNumTriangles_Params params;
	params.StaticMesh = StaticMesh;
	params.LOD = LOD;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.GetNumTexCoords
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UStaticMesh*             StaticMesh                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            LOD                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int USQBlueprintLibrary::STATIC_GetNumTexCoords(class UStaticMesh* StaticMesh, int LOD)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.GetNumTexCoords");

	USQBlueprintLibrary_GetNumTexCoords_Params params;
	params.StaticMesh = StaticMesh;
	params.LOD = LOD;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.GetNumSections
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UStaticMesh*             StaticMesh                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            LOD                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int USQBlueprintLibrary::STATIC_GetNumSections(class UStaticMesh* StaticMesh, int LOD)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.GetNumSections");

	USQBlueprintLibrary_GetNumSections_Params params;
	params.StaticMesh = StaticMesh;
	params.LOD = LOD;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.GetNetMode
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString USQBlueprintLibrary::STATIC_GetNetMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.GetNetMode");

	USQBlueprintLibrary_GetNetMode_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.GetNatoPhoneticString
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString USQBlueprintLibrary::STATIC_GetNatoPhoneticString(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.GetNatoPhoneticString");

	USQBlueprintLibrary_GetNatoPhoneticString_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.GetMajorMinorVersion
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 RawVersion                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString USQBlueprintLibrary::STATIC_GetMajorMinorVersion(const struct FString& RawVersion)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.GetMajorMinorVersion");

	USQBlueprintLibrary_GetMajorMinorVersion_Params params;
	params.RawVersion = RawVersion;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.GetLastRenderTime
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UPrimitiveComponent*     Component                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQBlueprintLibrary::STATIC_GetLastRenderTime(class UPrimitiveComponent* Component)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.GetLastRenderTime");

	USQBlueprintLibrary_GetLastRenderTime_Params params;
	params.Component = Component;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.GetKeysMappedToActionText
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FName                   ActionName                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FText USQBlueprintLibrary::STATIC_GetKeysMappedToActionText(const struct FName& ActionName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.GetKeysMappedToActionText");

	USQBlueprintLibrary_GetKeysMappedToActionText_Params params;
	params.ActionName = ActionName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.GetKeysMappedToAction
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FName                   ActionName                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FKey>            Keys                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_GetKeysMappedToAction(const struct FName& ActionName, TArray<struct FKey>* Keys)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.GetKeysMappedToAction");

	USQBlueprintLibrary_GetKeysMappedToAction_Params params;
	params.ActionName = ActionName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Keys != nullptr)
		*Keys = params.Keys;

}


// Function Squad.SQBlueprintLibrary.GetKeysMapedToAxis
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FName                   AxisName                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           Negative                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FInputAxisKeyMapping> Keys                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_GetKeysMapedToAxis(const struct FName& AxisName, bool Negative, TArray<struct FInputAxisKeyMapping>* Keys)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.GetKeysMapedToAxis");

	USQBlueprintLibrary_GetKeysMapedToAxis_Params params;
	params.AxisName = AxisName;
	params.Negative = Negative;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Keys != nullptr)
		*Keys = params.Keys;

}


// Function Squad.SQBlueprintLibrary.GetKeyName
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FKey                    Key                            (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FName                   OutName                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_GetKeyName(const struct FKey& Key, struct FName* OutName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.GetKeyName");

	USQBlueprintLibrary_GetKeyName_Params params;
	params.Key = Key;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutName != nullptr)
		*OutName = params.OutName;

}


// Function Squad.SQBlueprintLibrary.GetKeyDisplayName
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FKey                    Key                            (ConstParm, Parm, OutParm, ReferenceParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FText                   OutDisplayName                 (Parm, OutParm, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_GetKeyDisplayName(const struct FKey& Key, struct FText* OutDisplayName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.GetKeyDisplayName");

	USQBlueprintLibrary_GetKeyDisplayName_Params params;
	params.Key = Key;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutDisplayName != nullptr)
		*OutDisplayName = params.OutDisplayName;

}


// Function Squad.SQBlueprintLibrary.GetIntFromPhysMat
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UPhysicalMaterial*       PhysMat                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int USQBlueprintLibrary::STATIC_GetIntFromPhysMat(class UPhysicalMaterial* PhysMat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.GetIntFromPhysMat");

	USQBlueprintLibrary_GetIntFromPhysMat_Params params;
	params.PhysMat = PhysMat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.GetIntFromFName
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FName                   Name                           (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int USQBlueprintLibrary::STATIC_GetIntFromFName(const struct FName& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.GetIntFromFName");

	USQBlueprintLibrary_GetIntFromFName_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.GetGameVersionInfo
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 Variant                        (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Major                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Minor                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Build                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Revision                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_GetGameVersionInfo(struct FString* Variant, int* Major, int* Minor, int* Build, int* Revision)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.GetGameVersionInfo");

	USQBlueprintLibrary_GetGameVersionInfo_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Variant != nullptr)
		*Variant = params.Variant;
	if (Major != nullptr)
		*Major = params.Major;
	if (Minor != nullptr)
		*Minor = params.Minor;
	if (Build != nullptr)
		*Build = params.Build;
	if (Revision != nullptr)
		*Revision = params.Revision;

}


// Function Squad.SQBlueprintLibrary.GetGameVersion
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString USQBlueprintLibrary::STATIC_GetGameVersion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.GetGameVersion");

	USQBlueprintLibrary_GetGameVersion_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.GetDynamicEasingPosition
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSQDynamicEasingStruct  Easing                         (ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQBlueprintLibrary::STATIC_GetDynamicEasingPosition(const struct FSQDynamicEasingStruct& Easing)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.GetDynamicEasingPosition");

	USQBlueprintLibrary_GetDynamicEasingPosition_Params params;
	params.Easing = Easing;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.GetDefaultObjectFor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UClass*                  Class                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UObject*                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UObject* USQBlueprintLibrary::STATIC_GetDefaultObjectFor(class UClass* Class)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.GetDefaultObjectFor");

	USQBlueprintLibrary_GetDefaultObjectFor_Params params;
	params.Class = Class;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.GetCustomServerSetting
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 PropertyName                   (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 OutResult                      (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_GetCustomServerSetting(const struct FString& PropertyName, struct FString* OutResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.GetCustomServerSetting");

	USQBlueprintLibrary_GetCustomServerSetting_Params params;
	params.PropertyName = PropertyName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutResult != nullptr)
		*OutResult = params.OutResult;

}


// Function Squad.SQBlueprintLibrary.GetCurrentMapName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString USQBlueprintLibrary::STATIC_GetCurrentMapName(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.GetCurrentMapName");

	USQBlueprintLibrary_GetCurrentMapName_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.GetComponentTransform
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class USceneComponent*         Component                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform              OutTransform                   (Parm, OutParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_GetComponentTransform(class USceneComponent* Component, struct FTransform* OutTransform)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.GetComponentTransform");

	USQBlueprintLibrary_GetComponentTransform_Params params;
	params.Component = Component;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutTransform != nullptr)
		*OutTransform = params.OutTransform;

}


// Function Squad.SQBlueprintLibrary.GetCanvasSize
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class UCanvas*                 Canvas                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            SizeX                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            SizeY                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_GetCanvasSize(class UCanvas* Canvas, int* SizeX, int* SizeY)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.GetCanvasSize");

	USQBlueprintLibrary_GetCanvasSize_Params params;
	params.Canvas = Canvas;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (SizeX != nullptr)
		*SizeX = params.SizeX;
	if (SizeY != nullptr)
		*SizeY = params.SizeY;

}


// Function Squad.SQBlueprintLibrary.GetAudioComponentParamsArrayFromPhysMat
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UPhysicalMaterial*       PhysMat                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FAudioComponentParam> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
TArray<struct FAudioComponentParam> USQBlueprintLibrary::STATIC_GetAudioComponentParamsArrayFromPhysMat(class UPhysicalMaterial* PhysMat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.GetAudioComponentParamsArrayFromPhysMat");

	USQBlueprintLibrary_GetAudioComponentParamsArrayFromPhysMat_Params params;
	params.PhysMat = PhysMat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.GetAudioComponentParamFromPhysMat
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UPhysicalMaterial*       PhysMat                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAudioComponentParam    ReturnValue                    (Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
struct FAudioComponentParam USQBlueprintLibrary::STATIC_GetAudioComponentParamFromPhysMat(class UPhysicalMaterial* PhysMat)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.GetAudioComponentParamFromPhysMat");

	USQBlueprintLibrary_GetAudioComponentParamFromPhysMat_Params params;
	params.PhysMat = PhysMat;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.GetAnnouncement
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSQAnnouncement         ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FSQAnnouncement USQBlueprintLibrary::STATIC_GetAnnouncement()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.GetAnnouncement");

	USQBlueprintLibrary_GetAnnouncement_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.GetAlphabetLetterString
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString USQBlueprintLibrary::STATIC_GetAlphabetLetterString(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.GetAlphabetLetterString");

	USQBlueprintLibrary_GetAlphabetLetterString_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.GetAllKeyMappings
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<struct FInputActionKeyMapping> KeyMappings                    (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_GetAllKeyMappings(TArray<struct FInputActionKeyMapping>* KeyMappings)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.GetAllKeyMappings");

	USQBlueprintLibrary_GetAllKeyMappings_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (KeyMappings != nullptr)
		*KeyMappings = params.KeyMappings;

}


// Function Squad.SQBlueprintLibrary.GetAllComponentsOfClass
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                  WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                  Class                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UObject*>         Components                     (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_GetAllComponentsOfClass(class AActor* WorldContextObject, class UClass* Class, TArray<class UObject*>* Components)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.GetAllComponentsOfClass");

	USQBlueprintLibrary_GetAllComponentsOfClass_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Class = Class;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Components != nullptr)
		*Components = params.Components;

}


// Function Squad.SQBlueprintLibrary.GetActorHalfHeight
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                  TestActor                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQBlueprintLibrary::STATIC_GetActorHalfHeight(class AActor* TestActor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.GetActorHalfHeight");

	USQBlueprintLibrary_GetActorHalfHeight_Params params;
	params.TestActor = TestActor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.GetActionKeyName
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FName                   ActionName                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FName                   Name                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_GetActionKeyName(const struct FName& ActionName, struct FName* Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.GetActionKeyName");

	USQBlueprintLibrary_GetActionKeyName_Params params;
	params.ActionName = ActionName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Name != nullptr)
		*Name = params.Name;

}


// Function Squad.SQBlueprintLibrary.FormatTextActionKeys
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FText                   FormatText                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// TArray<struct FName>           ActionKeys                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// struct FText                   ReturnValue                    (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
struct FText USQBlueprintLibrary::STATIC_FormatTextActionKeys(const struct FText& FormatText, TArray<struct FName> ActionKeys)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.FormatTextActionKeys");

	USQBlueprintLibrary_FormatTextActionKeys_Params params;
	params.FormatText = FormatText;
	params.ActionKeys = ActionKeys;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.FindPlayerByPlayerId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UWorld*                  World                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            PlayerId                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQPlayerController*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASQPlayerController* USQBlueprintLibrary::STATIC_FindPlayerByPlayerId(class UWorld* World, int PlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.FindPlayerByPlayerId");

	USQBlueprintLibrary_FindPlayerByPlayerId_Params params;
	params.World = World;
	params.PlayerId = PlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.FindPlayerByNameOrId
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UWorld*                  World                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 NameOrId                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQPlayerController*     ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASQPlayerController* USQBlueprintLibrary::STATIC_FindPlayerByNameOrId(class UWorld* World, const struct FString& NameOrId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.FindPlayerByNameOrId");

	USQBlueprintLibrary_FindPlayerByNameOrId_Params params;
	params.World = World;
	params.NameOrId = NameOrId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.FileSaveString
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FString                 Filename                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 InText                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQBlueprintLibrary::STATIC_FileSaveString(const struct FString& Filename, const struct FString& InText)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.FileSaveString");

	USQBlueprintLibrary_FileSaveString_Params params;
	params.Filename = Filename;
	params.InText = InText;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.FileLoadString
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FString                 Filename                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 OutText                        (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQBlueprintLibrary::STATIC_FileLoadString(const struct FString& Filename, struct FString* OutText)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.FileLoadString");

	USQBlueprintLibrary_FileLoadString_Params params;
	params.Filename = Filename;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutText != nullptr)
		*OutText = params.OutText;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.DumpStaticMeshDrawListStats
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_DumpStaticMeshDrawListStats(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.DumpStaticMeshDrawListStats");

	USQBlueprintLibrary_DumpStaticMeshDrawListStats_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQBlueprintLibrary.ConvertNumberToGridLetter
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FString                 OutResult                      (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_ConvertNumberToGridLetter(struct FString* OutResult, int Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.ConvertNumberToGridLetter");

	USQBlueprintLibrary_ConvertNumberToGridLetter_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutResult != nullptr)
		*OutResult = params.OutResult;

}


// Function Squad.SQBlueprintLibrary.ComponentIsDamageableFrom
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*     VictimComp                     (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Origin                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  IgnoredActor                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>          IgnoreActors                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// TEnumAsByte<ECollisionChannel> TraceChannel                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              OutHitResult                   (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQBlueprintLibrary::STATIC_ComponentIsDamageableFrom(class UPrimitiveComponent* VictimComp, const struct FVector& Origin, class AActor* IgnoredActor, TArray<class AActor*> IgnoreActors, TEnumAsByte<ECollisionChannel> TraceChannel, struct FHitResult* OutHitResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.ComponentIsDamageableFrom");

	USQBlueprintLibrary_ComponentIsDamageableFrom_Params params;
	params.VictimComp = VictimComp;
	params.Origin = Origin;
	params.IgnoredActor = IgnoredActor;
	params.IgnoreActors = IgnoreActors;
	params.TraceChannel = TraceChannel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (OutHitResult != nullptr)
		*OutHitResult = params.OutHitResult;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.ClosestPointOnLine
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 LineStart                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 LineEnd                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Point                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector USQBlueprintLibrary::STATIC_ClosestPointOnLine(const struct FVector& LineStart, const struct FVector& LineEnd, const struct FVector& Point)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.ClosestPointOnLine");

	USQBlueprintLibrary_ClosestPointOnLine_Params params;
	params.LineStart = LineStart;
	params.LineEnd = LineEnd;
	params.Point = Point;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.ClampVector
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// struct FVector                 Vector                         (Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Min                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Max                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_ClampVector(struct FVector* Vector, const struct FVector& Min, const struct FVector& Max)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.ClampVector");

	USQBlueprintLibrary_ClampVector_Params params;
	params.Min = Min;
	params.Max = Max;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Vector != nullptr)
		*Vector = params.Vector;

}


// Function Squad.SQBlueprintLibrary.ClampDeltaAngle
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          InDeltaAngle                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          CurrentAngle                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          MinAngle                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          MaxAngle                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQBlueprintLibrary::STATIC_ClampDeltaAngle(float InDeltaAngle, float CurrentAngle, float MinAngle, float MaxAngle)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.ClampDeltaAngle");

	USQBlueprintLibrary_ClampDeltaAngle_Params params;
	params.InDeltaAngle = InDeltaAngle;
	params.CurrentAngle = CurrentAngle;
	params.MinAngle = MinAngle;
	params.MaxAngle = MaxAngle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.ClampDelta
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          InDelta                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Current                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Min                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Max                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQBlueprintLibrary::STATIC_ClampDelta(float InDelta, float Current, float Min, float Max)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.ClampDelta");

	USQBlueprintLibrary_ClampDelta_Params params;
	params.InDelta = InDelta;
	params.Current = Current;
	params.Min = Min;
	params.Max = Max;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.CenterMousePosition
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_CenterMousePosition(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.CenterMousePosition");

	USQBlueprintLibrary_CenterMousePosition_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQBlueprintLibrary.CalculateAmmoCostToSwapRole
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class USQRoleSettings*         NewRole                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float USQBlueprintLibrary::STATIC_CalculateAmmoCostToSwapRole(class USQRoleSettings* NewRole)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.CalculateAmmoCostToSwapRole");

	USQBlueprintLibrary_CalculateAmmoCostToSwapRole_Params params;
	params.NewRole = NewRole;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.CalcTimeToMid
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          Midpoint                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Position                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Velocity                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Acceleration                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          TimeToMid                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_CalcTimeToMid(float Midpoint, float Position, float Velocity, float Acceleration, float* TimeToMid)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.CalcTimeToMid");

	USQBlueprintLibrary_CalcTimeToMid_Params params;
	params.Midpoint = Midpoint;
	params.Position = Position;
	params.Velocity = Velocity;
	params.Acceleration = Acceleration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (TimeToMid != nullptr)
		*TimeToMid = params.TimeToMid;

}


// Function Squad.SQBlueprintLibrary.CalcMidpoint
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          Target                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Position                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Velocity                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Acceleration                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Midpoint                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_CalcMidpoint(float Target, float Position, float Velocity, float Acceleration, float* Midpoint)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.CalcMidpoint");

	USQBlueprintLibrary_CalcMidpoint_Params params;
	params.Target = Target;
	params.Position = Position;
	params.Velocity = Velocity;
	params.Acceleration = Acceleration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (Midpoint != nullptr)
		*Midpoint = params.Midpoint;

}


// Function Squad.SQBlueprintLibrary.BreakInputAxisKeyMapping
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FInputAxisKeyMapping    KeyMapping                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FName                   ActionName                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                    Key                            (Parm, OutParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Scale                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_BreakInputAxisKeyMapping(const struct FInputAxisKeyMapping& KeyMapping, struct FName* ActionName, struct FKey* Key, float* Scale)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.BreakInputAxisKeyMapping");

	USQBlueprintLibrary_BreakInputAxisKeyMapping_Params params;
	params.KeyMapping = KeyMapping;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (ActionName != nullptr)
		*ActionName = params.ActionName;
	if (Key != nullptr)
		*Key = params.Key;
	if (Scale != nullptr)
		*Scale = params.Scale;

}


// Function Squad.SQBlueprintLibrary.BreakInputActionKeyMapping
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FInputActionKeyMapping  KeyMapping                     (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FName                   ActionName                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FKey                    Key                            (Parm, OutParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bShift                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bCtrl                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bAlt                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bCmd                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_BreakInputActionKeyMapping(const struct FInputActionKeyMapping& KeyMapping, struct FName* ActionName, struct FKey* Key, bool* bShift, bool* bCtrl, bool* bAlt, bool* bCmd)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.BreakInputActionKeyMapping");

	USQBlueprintLibrary_BreakInputActionKeyMapping_Params params;
	params.KeyMapping = KeyMapping;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (ActionName != nullptr)
		*ActionName = params.ActionName;
	if (Key != nullptr)
		*Key = params.Key;
	if (bShift != nullptr)
		*bShift = params.bShift;
	if (bCtrl != nullptr)
		*bCtrl = params.bCtrl;
	if (bAlt != nullptr)
		*bAlt = params.bAlt;
	if (bCmd != nullptr)
		*bCmd = params.bCmd;

}


// Function Squad.SQBlueprintLibrary.BreakFullHitResult
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FHitResult              Hit                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FName                   HitBoneName                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     HitComponent                   (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  HitActor                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPhysicalMaterial*       PhysMat                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Time                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          PenetrationDepth               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            HitItem                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bStartPenetrating              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 TraceEnd                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 TraceStart                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 ImpactNormal                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 ImpactPoint                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Normal                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Location                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bBlockingHit                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            HitFaceIndex                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_BreakFullHitResult(const struct FHitResult& Hit, struct FName* HitBoneName, class UPrimitiveComponent** HitComponent, class AActor** HitActor, class UPhysicalMaterial** PhysMat, float* Time, float* PenetrationDepth, int* HitItem, bool* bStartPenetrating, struct FVector* TraceEnd, struct FVector* TraceStart, struct FVector* ImpactNormal, struct FVector* ImpactPoint, struct FVector* Normal, struct FVector* Location, bool* bBlockingHit, int* HitFaceIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.BreakFullHitResult");

	USQBlueprintLibrary_BreakFullHitResult_Params params;
	params.Hit = Hit;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (HitBoneName != nullptr)
		*HitBoneName = params.HitBoneName;
	if (HitComponent != nullptr)
		*HitComponent = params.HitComponent;
	if (HitActor != nullptr)
		*HitActor = params.HitActor;
	if (PhysMat != nullptr)
		*PhysMat = params.PhysMat;
	if (Time != nullptr)
		*Time = params.Time;
	if (PenetrationDepth != nullptr)
		*PenetrationDepth = params.PenetrationDepth;
	if (HitItem != nullptr)
		*HitItem = params.HitItem;
	if (bStartPenetrating != nullptr)
		*bStartPenetrating = params.bStartPenetrating;
	if (TraceEnd != nullptr)
		*TraceEnd = params.TraceEnd;
	if (TraceStart != nullptr)
		*TraceStart = params.TraceStart;
	if (ImpactNormal != nullptr)
		*ImpactNormal = params.ImpactNormal;
	if (ImpactPoint != nullptr)
		*ImpactPoint = params.ImpactPoint;
	if (Normal != nullptr)
		*Normal = params.Normal;
	if (Location != nullptr)
		*Location = params.Location;
	if (bBlockingHit != nullptr)
		*bBlockingHit = params.bBlockingHit;
	if (HitFaceIndex != nullptr)
		*HitFaceIndex = params.HitFaceIndex;

}


// Function Squad.SQBlueprintLibrary.AssembleSoldierAudioParameters
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class ASQSoldier*              Soldier                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bSetSpeedParameter             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bSetFloorPhysMatParameter      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FAudioComponentParam> ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
TArray<struct FAudioComponentParam> USQBlueprintLibrary::STATIC_AssembleSoldierAudioParameters(class ASQSoldier* Soldier, bool bSetSpeedParameter, bool bSetFloorPhysMatParameter)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.AssembleSoldierAudioParameters");

	USQBlueprintLibrary_AssembleSoldierAudioParameters_Params params;
	params.Soldier = Soldier;
	params.bSetSpeedParameter = bSetSpeedParameter;
	params.bSetFloorPhysMatParameter = bSetFloorPhysMatParameter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.ApplyRadialDamageWithFalloff
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          BaseDamage                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          MinimumDamage                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Origin                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          KillZoneRadius                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          DamageInnerRadius              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          DamageOuterRadius              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          DamageFalloff                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                  DamageTypeClass                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>          IgnoreActors                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*             InstigatedByController         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bOnlyDamageMeshes              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TEnumAsByte<ECollisionChannel> DamagePreventionChannel        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQBlueprintLibrary::STATIC_ApplyRadialDamageWithFalloff(class UObject* WorldContextObject, float BaseDamage, float MinimumDamage, const struct FVector& Origin, float KillZoneRadius, float DamageInnerRadius, float DamageOuterRadius, float DamageFalloff, class UClass* DamageTypeClass, TArray<class AActor*> IgnoreActors, class AActor* DamageCauser, class AController* InstigatedByController, bool bOnlyDamageMeshes, TEnumAsByte<ECollisionChannel> DamagePreventionChannel)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.ApplyRadialDamageWithFalloff");

	USQBlueprintLibrary_ApplyRadialDamageWithFalloff_Params params;
	params.WorldContextObject = WorldContextObject;
	params.BaseDamage = BaseDamage;
	params.MinimumDamage = MinimumDamage;
	params.Origin = Origin;
	params.KillZoneRadius = KillZoneRadius;
	params.DamageInnerRadius = DamageInnerRadius;
	params.DamageOuterRadius = DamageOuterRadius;
	params.DamageFalloff = DamageFalloff;
	params.DamageTypeClass = DamageTypeClass;
	params.IgnoreActors = IgnoreActors;
	params.DamageCauser = DamageCauser;
	params.InstigatedByController = InstigatedByController;
	params.bOnlyDamageMeshes = bOnlyDamageMeshes;
	params.DamagePreventionChannel = DamagePreventionChannel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.ApplyOppositeAcceleration
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          Target                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Position                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Velocity                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          OppositeAcceleration           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          NewPosition                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          NewVelocity                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          TimeLeft                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_ApplyOppositeAcceleration(float Target, float Position, float Velocity, float OppositeAcceleration, float DeltaTime, float* NewPosition, float* NewVelocity, float* TimeLeft)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.ApplyOppositeAcceleration");

	USQBlueprintLibrary_ApplyOppositeAcceleration_Params params;
	params.Target = Target;
	params.Position = Position;
	params.Velocity = Velocity;
	params.OppositeAcceleration = OppositeAcceleration;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (NewPosition != nullptr)
		*NewPosition = params.NewPosition;
	if (NewVelocity != nullptr)
		*NewVelocity = params.NewVelocity;
	if (TimeLeft != nullptr)
		*TimeLeft = params.TimeLeft;

}


// Function Squad.SQBlueprintLibrary.ApplyHitResultRadialDamageWithFalloff
// (Final, BlueprintAuthorityOnly, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              HitResult                      (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// float                          BaseDamage                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          MinimumDamage                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Origin                         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          KillZoneRadius                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          DamageInnerRadius              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          DamageOuterRadius              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          DamageFalloff                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                  DamageTypeClass                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>          IgnoreActors                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class AActor*                  DamageCauser                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*             InstigatedByController         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bOnlyDamageMeshes              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TEnumAsByte<ECollisionChannel> DamagePreventionChannel        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQBlueprintLibrary::STATIC_ApplyHitResultRadialDamageWithFalloff(class UObject* WorldContextObject, const struct FHitResult& HitResult, float BaseDamage, float MinimumDamage, const struct FVector& Origin, float KillZoneRadius, float DamageInnerRadius, float DamageOuterRadius, float DamageFalloff, class UClass* DamageTypeClass, TArray<class AActor*> IgnoreActors, class AActor* DamageCauser, class AController* InstigatedByController, bool bOnlyDamageMeshes, TEnumAsByte<ECollisionChannel> DamagePreventionChannel)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.ApplyHitResultRadialDamageWithFalloff");

	USQBlueprintLibrary_ApplyHitResultRadialDamageWithFalloff_Params params;
	params.WorldContextObject = WorldContextObject;
	params.HitResult = HitResult;
	params.BaseDamage = BaseDamage;
	params.MinimumDamage = MinimumDamage;
	params.Origin = Origin;
	params.KillZoneRadius = KillZoneRadius;
	params.DamageInnerRadius = DamageInnerRadius;
	params.DamageOuterRadius = DamageOuterRadius;
	params.DamageFalloff = DamageFalloff;
	params.DamageTypeClass = DamageTypeClass;
	params.IgnoreActors = IgnoreActors;
	params.DamageCauser = DamageCauser;
	params.InstigatedByController = InstigatedByController;
	params.bOnlyDamageMeshes = bOnlyDamageMeshes;
	params.DamagePreventionChannel = DamagePreventionChannel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.ApplyDeceleration
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          Position                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Velocity                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Acceleration                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          TimeLeft                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          NewPosition                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          NewVelocity                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_ApplyDeceleration(float Position, float Velocity, float Acceleration, float TimeLeft, float* NewPosition, float* NewVelocity)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.ApplyDeceleration");

	USQBlueprintLibrary_ApplyDeceleration_Params params;
	params.Position = Position;
	params.Velocity = Velocity;
	params.Acceleration = Acceleration;
	params.TimeLeft = TimeLeft;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (NewPosition != nullptr)
		*NewPosition = params.NewPosition;
	if (NewVelocity != nullptr)
		*NewVelocity = params.NewVelocity;

}


// Function Squad.SQBlueprintLibrary.ApplyAcceleration
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          TimeToMid                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Midpoint                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Position                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Velocity                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Acceleration                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          NewPosition                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          NewVelocity                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          TimeLeft                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_ApplyAcceleration(float TimeToMid, float Midpoint, float Position, float Velocity, float Acceleration, float DeltaTime, float* NewPosition, float* NewVelocity, float* TimeLeft)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.ApplyAcceleration");

	USQBlueprintLibrary_ApplyAcceleration_Params params;
	params.TimeToMid = TimeToMid;
	params.Midpoint = Midpoint;
	params.Position = Position;
	params.Velocity = Velocity;
	params.Acceleration = Acceleration;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (NewPosition != nullptr)
		*NewPosition = params.NewPosition;
	if (NewVelocity != nullptr)
		*NewVelocity = params.NewVelocity;
	if (TimeLeft != nullptr)
		*TimeLeft = params.TimeLeft;

}


// Function Squad.SQBlueprintLibrary.AdjustPositionForTextAlignment
// (Final, Native, Static, Public, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector2D               OriginalRenderPosition         (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D               TextSize                       (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESQTextHorizontalAlignment     HorizontalAlignment            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESQTextVerticalAlignment       VerticalAlignment              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D               ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FVector2D USQBlueprintLibrary::STATIC_AdjustPositionForTextAlignment(const struct FVector2D& OriginalRenderPosition, const struct FVector2D& TextSize, ESQTextHorizontalAlignment HorizontalAlignment, ESQTextVerticalAlignment VerticalAlignment)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.AdjustPositionForTextAlignment");

	USQBlueprintLibrary_AdjustPositionForTextAlignment_Params params;
	params.OriginalRenderPosition = OriginalRenderPosition;
	params.TextSize = TextSize;
	params.HorizontalAlignment = HorizontalAlignment;
	params.VerticalAlignment = VerticalAlignment;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQBlueprintLibrary.ActivateReverbEffectFixed
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UReverbEffect*           ReverbEffect                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FName                   TagName                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Priority                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Volume                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          FadeTime                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQBlueprintLibrary::STATIC_ActivateReverbEffectFixed(class UObject* WorldContextObject, class UReverbEffect* ReverbEffect, const struct FName& TagName, float Priority, float Volume, float FadeTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlueprintLibrary.ActivateReverbEffectFixed");

	USQBlueprintLibrary_ActivateReverbEffectFixed_Params params;
	params.WorldContextObject = WorldContextObject;
	params.ReverbEffect = ReverbEffect;
	params.TagName = TagName;
	params.Priority = Priority;
	params.Volume = Volume;
	params.FadeTime = FadeTime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQBlastComponent.ServerFireBlast
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, NetValidate)
// Parameters:
// struct FVector                 BlastLocationZeroBased         (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 BlastAimVector                 (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQBlastComponent::ServerFireBlast(const struct FVector& BlastLocationZeroBased, const struct FVector& BlastAimVector)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlastComponent.ServerFireBlast");

	USQBlastComponent_ServerFireBlast_Params params;
	params.BlastLocationZeroBased = BlastLocationZeroBased;
	params.BlastAimVector = BlastAimVector;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQBlastComponent.FireBlast
// (Final, Native, Public, BlueprintCallable)
void USQBlastComponent::FireBlast()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBlastComponent.FireBlast");

	USQBlastComponent_FireBlast_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQBaseHudWidget.UpdateActiveState
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
void USQBaseHudWidget::UpdateActiveState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBaseHudWidget.UpdateActiveState");

	USQBaseHudWidget_UpdateActiveState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQBaseHudWidget.InitWidget
// (Native, Public, BlueprintCallable)
void USQBaseHudWidget::InitWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBaseHudWidget.InitWidget");

	USQBaseHudWidget_InitWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQBaseGameSubsystem.TickSubsystem
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          DeltaTime                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQBaseGameSubsystem::TickSubsystem(float DeltaTime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQBaseGameSubsystem.TickSubsystem");

	USQBaseGameSubsystem_TickSubsystem_Params params;
	params.DeltaTime = DeltaTime;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQApprovalQueueWidget.Init
// (Final, Native, Protected, BlueprintCallable)
void USQApprovalQueueWidget::Init()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQApprovalQueueWidget.Init");

	USQApprovalQueueWidget_Init_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAnnouncementNotifier.AnnouncementChangedHandler
// (Final, Native, Public)
void USQAnnouncementNotifier::AnnouncementChangedHandler()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnnouncementNotifier.AnnouncementChangedHandler");

	USQAnnouncementNotifier_AnnouncementChangedHandler_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAnimInstanceSoldier.UpdateVehicleAim
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                          DeltaSeconds                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQAnimInstanceSoldier::UpdateVehicleAim(float DeltaSeconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnimInstanceSoldier.UpdateVehicleAim");

	USQAnimInstanceSoldier_UpdateVehicleAim_Params params;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAnimInstanceSoldier.UpdateVehicle
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                          DeltaSeconds                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQAnimInstanceSoldier::UpdateVehicle(float DeltaSeconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnimInstanceSoldier.UpdateVehicle");

	USQAnimInstanceSoldier_UpdateVehicle_Params params;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAnimInstanceSoldier.UpdateSteeringWheelVariables
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                          DeltaSeconds                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQAnimInstanceSoldier::UpdateSteeringWheelVariables(float DeltaSeconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnimInstanceSoldier.UpdateSteeringWheelVariables");

	USQAnimInstanceSoldier_UpdateSteeringWheelVariables_Params params;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAnimInstanceSoldier.UpdateLean
// (Final, Native, Protected, BlueprintCallable)
void USQAnimInstanceSoldier::UpdateLean()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnimInstanceSoldier.UpdateLean");

	USQAnimInstanceSoldier_UpdateLean_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAnimInstanceSoldier.UpdateFastPathTransitionVariables
// (Native, Protected, BlueprintCallable)
// Parameters:
// float                          DeltaSeconds                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQAnimInstanceSoldier::UpdateFastPathTransitionVariables(float DeltaSeconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnimInstanceSoldier.UpdateFastPathTransitionVariables");

	USQAnimInstanceSoldier_UpdateFastPathTransitionVariables_Params params;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAnimInstanceSoldier.UpdateDragging
// (Final, Native, Protected, BlueprintCallable)
void USQAnimInstanceSoldier::UpdateDragging()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnimInstanceSoldier.UpdateDragging");

	USQAnimInstanceSoldier_UpdateDragging_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAnimInstanceSoldier.OnVaultClimbStop
// (Event, Public, BlueprintEvent)
void USQAnimInstanceSoldier::OnVaultClimbStop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnimInstanceSoldier.OnVaultClimbStop");

	USQAnimInstanceSoldier_OnVaultClimbStop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAnimInstanceSoldier.AlignWithGround
// (Final, Native, Protected, HasOutParms, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                 FloorNormal                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
struct FRotator USQAnimInstanceSoldier::AlignWithGround(const struct FVector& FloorNormal)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnimInstanceSoldier.AlignWithGround");

	USQAnimInstanceSoldier_AlignWithGround_Params params;
	params.FloorNormal = FloorNormal;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQAnimInstanceSoldier3P.UpdateTurnChar
// (Final, Native, Protected, BlueprintCallable)
void USQAnimInstanceSoldier3P::UpdateTurnChar()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnimInstanceSoldier3P.UpdateTurnChar");

	USQAnimInstanceSoldier3P_UpdateTurnChar_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAnimInstanceSoldier3P.UpdateStopMoveAlpha
// (Final, Native, Protected, BlueprintCallable)
void USQAnimInstanceSoldier3P::UpdateStopMoveAlpha()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnimInstanceSoldier3P.UpdateStopMoveAlpha");

	USQAnimInstanceSoldier3P_UpdateStopMoveAlpha_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAnimInstanceSoldier3P.UpdateSprintStopCachedSpeed
// (Final, Native, Protected, BlueprintCallable)
void USQAnimInstanceSoldier3P::UpdateSprintStopCachedSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnimInstanceSoldier3P.UpdateSprintStopCachedSpeed");

	USQAnimInstanceSoldier3P_UpdateSprintStopCachedSpeed_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAnimInstanceSoldier3P.UpdateSmoothVelocity
// (Final, Native, Protected, BlueprintCallable)
void USQAnimInstanceSoldier3P::UpdateSmoothVelocity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnimInstanceSoldier3P.UpdateSmoothVelocity");

	USQAnimInstanceSoldier3P_UpdateSmoothVelocity_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAnimInstanceSoldier3P.UpdateLeanYawOffset
// (Final, Native, Protected, BlueprintCallable)
void USQAnimInstanceSoldier3P::UpdateLeanYawOffset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnimInstanceSoldier3P.UpdateLeanYawOffset");

	USQAnimInstanceSoldier3P_UpdateLeanYawOffset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAnimInstanceSoldier3P.UpdateLandingVel
// (Final, Native, Protected, BlueprintCallable)
void USQAnimInstanceSoldier3P::UpdateLandingVel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnimInstanceSoldier3P.UpdateLandingVel");

	USQAnimInstanceSoldier3P_UpdateLandingVel_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAnimInstanceSoldier3P.UpdateIkFootOrientation
// (Final, Native, Protected, BlueprintCallable)
void USQAnimInstanceSoldier3P::UpdateIkFootOrientation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnimInstanceSoldier3P.UpdateIkFootOrientation");

	USQAnimInstanceSoldier3P_UpdateIkFootOrientation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAnimInstanceSoldier3P.UpdateIkFeetRootRelRot
// (Final, Native, Protected, BlueprintCallable)
void USQAnimInstanceSoldier3P::UpdateIkFeetRootRelRot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnimInstanceSoldier3P.UpdateIkFeetRootRelRot");

	USQAnimInstanceSoldier3P_UpdateIkFeetRootRelRot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAnimInstanceSoldier3P.UpdateFastPathVariables
// (Final, Native, Protected, BlueprintCallable)
void USQAnimInstanceSoldier3P::UpdateFastPathVariables()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnimInstanceSoldier3P.UpdateFastPathVariables");

	USQAnimInstanceSoldier3P_UpdateFastPathVariables_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAnimInstanceSoldier3P.UpdateDirection
// (Final, Native, Protected, BlueprintCallable)
void USQAnimInstanceSoldier3P::UpdateDirection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnimInstanceSoldier3P.UpdateDirection");

	USQAnimInstanceSoldier3P_UpdateDirection_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAnimInstanceSoldier3P.UpdateAimRotation
// (Final, Native, Protected, BlueprintCallable)
void USQAnimInstanceSoldier3P::UpdateAimRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnimInstanceSoldier3P.UpdateAimRotation");

	USQAnimInstanceSoldier3P_UpdateAimRotation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAnimInstanceSoldier3P.UpdateAimOffset
// (Final, Native, Protected, BlueprintCallable)
void USQAnimInstanceSoldier3P::UpdateAimOffset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnimInstanceSoldier3P.UpdateAimOffset");

	USQAnimInstanceSoldier3P_UpdateAimOffset_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAnimInstanceSoldier3P.Update3pCurrentFloor
// (Final, Native, Protected, BlueprintCallable)
void USQAnimInstanceSoldier3P::Update3pCurrentFloor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnimInstanceSoldier3P.Update3pCurrentFloor");

	USQAnimInstanceSoldier3P_Update3pCurrentFloor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAnimInstanceSoldier1P.UpdateWasCrouchedBeforeProne
// (Final, Native, Protected, BlueprintCallable)
void USQAnimInstanceSoldier1P::UpdateWasCrouchedBeforeProne()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnimInstanceSoldier1P.UpdateWasCrouchedBeforeProne");

	USQAnimInstanceSoldier1P_UpdateWasCrouchedBeforeProne_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAnimInstanceSoldier1P.UpdateTurnSpring
// (Final, Native, Protected, BlueprintCallable)
void USQAnimInstanceSoldier1P::UpdateTurnSpring()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnimInstanceSoldier1P.UpdateTurnSpring");

	USQAnimInstanceSoldier1P_UpdateTurnSpring_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAnimInstanceSoldier1P.UpdateSwitchedProne
// (Final, Native, Protected, BlueprintCallable)
void USQAnimInstanceSoldier1P::UpdateSwitchedProne()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnimInstanceSoldier1P.UpdateSwitchedProne");

	USQAnimInstanceSoldier1P_UpdateSwitchedProne_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAnimInstanceSoldier1P.UpdateSway
// (Final, Native, Protected, BlueprintCallable)
void USQAnimInstanceSoldier1P::UpdateSway()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnimInstanceSoldier1P.UpdateSway");

	USQAnimInstanceSoldier1P_UpdateSway_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAnimInstanceSoldier1P.UpdateStrafeSpring
// (Final, Native, Protected, BlueprintCallable)
void USQAnimInstanceSoldier1P::UpdateStrafeSpring()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnimInstanceSoldier1P.UpdateStrafeSpring");

	USQAnimInstanceSoldier1P_UpdateStrafeSpring_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAnimInstanceSoldier1P.UpdateSprintSpeedBlend
// (Final, Native, Protected, BlueprintCallable)
void USQAnimInstanceSoldier1P::UpdateSprintSpeedBlend()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnimInstanceSoldier1P.UpdateSprintSpeedBlend");

	USQAnimInstanceSoldier1P_UpdateSprintSpeedBlend_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAnimInstanceSoldier1P.UpdateRecoilAndFire
// (Final, Native, Protected, BlueprintCallable)
void USQAnimInstanceSoldier1P::UpdateRecoilAndFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnimInstanceSoldier1P.UpdateRecoilAndFire");

	USQAnimInstanceSoldier1P_UpdateRecoilAndFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAnimInstanceSoldier1P.UpdatePitch
// (Final, Native, Protected, BlueprintCallable)
void USQAnimInstanceSoldier1P::UpdatePitch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnimInstanceSoldier1P.UpdatePitch");

	USQAnimInstanceSoldier1P_UpdatePitch_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAnimInstanceSoldier1P.UpdateLofSuppression
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                          DeltaSeconds                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQAnimInstanceSoldier1P::UpdateLofSuppression(float DeltaSeconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnimInstanceSoldier1P.UpdateLofSuppression");

	USQAnimInstanceSoldier1P_UpdateLofSuppression_Params params;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAnimInstanceSoldier1P.UpdateIsFallingPlayRate
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                          DeltaSeconds                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQAnimInstanceSoldier1P::UpdateIsFallingPlayRate(float DeltaSeconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnimInstanceSoldier1P.UpdateIsFallingPlayRate");

	USQAnimInstanceSoldier1P_UpdateIsFallingPlayRate_Params params;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAnimInstanceSoldier1P.UpdateFastPath
// (Final, Native, Protected, BlueprintCallable)
void USQAnimInstanceSoldier1P::UpdateFastPath()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnimInstanceSoldier1P.UpdateFastPath");

	USQAnimInstanceSoldier1P_UpdateFastPath_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAnimInstanceSoldier1P.UpdateDeviationVisuFb
// (Final, Native, Protected, BlueprintCallable)
void USQAnimInstanceSoldier1P::UpdateDeviationVisuFb()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnimInstanceSoldier1P.UpdateDeviationVisuFb");

	USQAnimInstanceSoldier1P_UpdateDeviationVisuFb_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAnimInstanceSoldier1P.UpdateDeviation
// (Final, Native, Protected, BlueprintCallable)
void USQAnimInstanceSoldier1P::UpdateDeviation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnimInstanceSoldier1P.UpdateDeviation");

	USQAnimInstanceSoldier1P_UpdateDeviation_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAnimInstanceSoldier1P.UpdateBobbingsPlayrate
// (Final, Native, Protected, BlueprintCallable)
// Parameters:
// float                          DeltaSeconds                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQAnimInstanceSoldier1P::UpdateBobbingsPlayrate(float DeltaSeconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnimInstanceSoldier1P.UpdateBobbingsPlayrate");

	USQAnimInstanceSoldier1P_UpdateBobbingsPlayrate_Params params;
	params.DeltaSeconds = DeltaSeconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAnimInstanceSoldier1P.UpdateAccuracyParameters
// (Final, Native, Protected, BlueprintCallable)
void USQAnimInstanceSoldier1P::UpdateAccuracyParameters()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnimInstanceSoldier1P.UpdateAccuracyParameters");

	USQAnimInstanceSoldier1P_UpdateAccuracyParameters_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAnimInstanceSoldier1P.Update1pCurrentFloor
// (Final, Native, Protected, BlueprintCallable)
void USQAnimInstanceSoldier1P::Update1pCurrentFloor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnimInstanceSoldier1P.Update1pCurrentFloor");

	USQAnimInstanceSoldier1P_Update1pCurrentFloor_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAnimInstanceSoldier1P.LineOfFire
// (Final, Native, Protected, BlueprintCallable)
void USQAnimInstanceSoldier1P::LineOfFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAnimInstanceSoldier1P.LineOfFire");

	USQAnimInstanceSoldier1P_LineOfFire_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAmmoWidget.UpdateState
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
void USQAmmoWidget::UpdateState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAmmoWidget.UpdateState");

	USQAmmoWidget_UpdateState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAmmoWidget.UpdateShowingStatus
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool USQAmmoWidget::UpdateShowingStatus()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAmmoWidget.UpdateShowingStatus");

	USQAmmoWidget_UpdateShowingStatus_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQAmmoWidget.UpdateMags
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASQEquipableItem*        CurrentItem                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQAmmoWidget::UpdateMags(class ASQEquipableItem* CurrentItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAmmoWidget.UpdateMags");

	USQAmmoWidget_UpdateMags_Params params;
	params.CurrentItem = CurrentItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAmmoWidget.UpdateFiremode
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASQEquipableItem*        CurrentItem                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQAmmoWidget::UpdateFiremode(class ASQEquipableItem* CurrentItem)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAmmoWidget.UpdateFiremode");

	USQAmmoWidget_UpdateFiremode_Params params;
	params.CurrentItem = CurrentItem;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAmmoWidget.UpdateCurrentWeapon
// (Native, Event, Public, BlueprintCallable, BlueprintEvent)
void USQAmmoWidget::UpdateCurrentWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAmmoWidget.UpdateCurrentWeapon");

	USQAmmoWidget_UpdateCurrentWeapon_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAmmoWidget.OnShowResourceAmounts
// (Event, Public, BlueprintEvent)
void USQAmmoWidget::OnShowResourceAmounts()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAmmoWidget.OnShowResourceAmounts");

	USQAmmoWidget_OnShowResourceAmounts_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAmmoWidget.OnShowCurrentWeapon
// (Event, Public, BlueprintEvent)
void USQAmmoWidget::OnShowCurrentWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAmmoWidget.OnShowCurrentWeapon");

	USQAmmoWidget_OnShowCurrentWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAmmoWidget.OnCurrentWeaponChanged
// (Event, Public, BlueprintEvent)
void USQAmmoWidget::OnCurrentWeaponChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAmmoWidget.OnCurrentWeaponChanged");

	USQAmmoWidget_OnCurrentWeaponChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAmmoWidget.InitWidget
// (Native, Public, BlueprintCallable)
void USQAmmoWidget::InitWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAmmoWidget.InitWidget");

	USQAmmoWidget_InitWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAmbientAndReverbComponent.OnOverlapEnd
// (Final, Native, Public)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void USQAmbientAndReverbComponent::OnOverlapEnd(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAmbientAndReverbComponent.OnOverlapEnd");

	USQAmbientAndReverbComponent_OnOverlapEnd_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAmbientAndReverbComponent.OnOverlapBegin
// (Final, Native, Public, HasOutParms)
// Parameters:
// class UPrimitiveComponent*     OverlappedComponent            (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  OtherActor                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UPrimitiveComponent*     OtherComp                      (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            OtherBodyIndex                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bFromSweep                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FHitResult              SweepResult                    (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
void USQAmbientAndReverbComponent::OnOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAmbientAndReverbComponent.OnOverlapBegin");

	USQAmbientAndReverbComponent_OnOverlapBegin_Params params;
	params.OverlappedComponent = OverlappedComponent;
	params.OtherActor = OtherActor;
	params.OtherComp = OtherComp;
	params.OtherBodyIndex = OtherBodyIndex;
	params.bFromSweep = bFromSweep;
	params.SweepResult = SweepResult;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAIController.SpawnBots
// (Final, Exec, Native, Static, Public, BlueprintCallable)
// Parameters:
// int                            NumberOfBotsToSpawn            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQAIController::STATIC_SpawnBots(int NumberOfBotsToSpawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAIController.SpawnBots");

	ASQAIController_SpawnBots_Params params;
	params.NumberOfBotsToSpawn = NumberOfBotsToSpawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAIController.ShootEnemy
// (Final, Native, Public, BlueprintCallable)
void ASQAIController::ShootEnemy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAIController.ShootEnemy");

	ASQAIController_ShootEnemy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAIController.IsEnemy
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASQSoldier*              Soldier                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQAIController::IsEnemy(class ASQSoldier* Soldier)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAIController.IsEnemy");

	ASQAIController_IsEnemy_Params params;
	params.Soldier = Soldier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQAIController.FindClosestEnemyWithLOS
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASQSoldier*              ExcludeEnemy                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQAIController::FindClosestEnemyWithLOS(class ASQSoldier* ExcludeEnemy)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAIController.FindClosestEnemyWithLOS");

	ASQAIController_FindClosestEnemyWithLOS_Params params;
	params.ExcludeEnemy = ExcludeEnemy;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQAIController.FindClosestEnemy
// (Final, Native, Public, BlueprintCallable)
void ASQAIController::FindClosestEnemy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAIController.FindClosestEnemy");

	ASQAIController_FindClosestEnemy_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.UnmuteSquad
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// class ASQSquadState*           MuteSquadState                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::UnmuteSquad(class ASQSquadState* MuteSquadState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.UnmuteSquad");

	ASQPlayerController_UnmuteSquad_Params params;
	params.MuteSquadState = MuteSquadState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.UnmuteAllPlayersExceptSquad
// (Final, Native, Public, BlueprintCallable)
void ASQPlayerController::UnmuteAllPlayersExceptSquad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.UnmuteAllPlayersExceptSquad");

	ASQPlayerController_UnmuteAllPlayersExceptSquad_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.TryClaimVehicle
// (Final, Native, Public)
// Parameters:
// class ASQVehicle*              Vehicle                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQPlayerController::TryClaimVehicle(class ASQVehicle* Vehicle)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.TryClaimVehicle");

	ASQPlayerController_TryClaimVehicle_Params params;
	params.Vehicle = Vehicle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerController.ToggleMutePlayer
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// class ASQPlayerState*          MutePlayerState                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ToggleMutePlayer(class ASQPlayerState* MutePlayerState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ToggleMutePlayer");

	ASQPlayerController_ToggleMutePlayer_Params params;
	params.MutePlayerState = MutePlayerState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.TimeUntilCanSpawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ASQPlayerController::TimeUntilCanSpawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.TimeUntilCanSpawn");

	ASQPlayerController_TimeUntilCanSpawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerController.StopMusic
// (Native, Public, BlueprintCallable)
void ASQPlayerController::StopMusic()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.StopMusic");

	ASQPlayerController_StopMusic_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.SQSM_SetServerUpdateRate
// (Final, Exec, Native, Public)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::SQSM_SetServerUpdateRate(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.SQSM_SetServerUpdateRate");

	ASQPlayerController_SQSM_SetServerUpdateRate_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.SQSM_SetNonRenderedUpdateRate
// (Final, Exec, Native, Public)
// Parameters:
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::SQSM_SetNonRenderedUpdateRate(float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.SQSM_SetNonRenderedUpdateRate");

	ASQPlayerController_SQSM_SetNonRenderedUpdateRate_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.SQSM_SetDistanceFactorThesholds
// (Final, Exec, Native, Public)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::SQSM_SetDistanceFactorThesholds(int Index, float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.SQSM_SetDistanceFactorThesholds");

	ASQPlayerController_SQSM_SetDistanceFactorThesholds_Params params;
	params.Index = Index;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.SQSM_RemoveDistanceFactorThesholds
// (Final, Exec, Native, Public)
// Parameters:
// int                            srcIndex                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Count                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::SQSM_RemoveDistanceFactorThesholds(int srcIndex, int Count)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.SQSM_RemoveDistanceFactorThesholds");

	ASQPlayerController_SQSM_RemoveDistanceFactorThesholds_Params params;
	params.srcIndex = srcIndex;
	params.Count = Count;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.SQSM_PrintDistanceFactorThesholds
// (Final, Exec, Native, Public)
void ASQPlayerController::SQSM_PrintDistanceFactorThesholds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.SQSM_PrintDistanceFactorThesholds");

	ASQPlayerController_SQSM_PrintDistanceFactorThesholds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.SQSM_InsertDistanceFactorThesholds
// (Final, Exec, Native, Public)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::SQSM_InsertDistanceFactorThesholds(int Index, float Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.SQSM_InsertDistanceFactorThesholds");

	ASQPlayerController_SQSM_InsertDistanceFactorThesholds_Params params;
	params.Index = Index;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.SQBugit
// (Final, Exec, Native, Public)
// Parameters:
// struct FString                 ScreenShotDescription          (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::SQBugit(const struct FString& ScreenShotDescription)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.SQBugit");

	ASQPlayerController_SQBugit_Params params;
	params.ScreenShotDescription = ScreenShotDescription;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.SimulateInputKey
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FKey                    Key                            (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bPressed                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::SimulateInputKey(const struct FKey& Key, bool bPressed)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.SimulateInputKey");

	ASQPlayerController_SimulateInputKey_Params params;
	params.Key = Key;
	params.bPressed = bPressed;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ShowToast
// (BlueprintCosmetic, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// struct FText                   ToastText                      (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// float                          Lifetime                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bForceSlate                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ShowToast(const struct FText& ToastText, float Lifetime, bool bForceSlate)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ShowToast");

	ASQPlayerController_ShowToast_Params params;
	params.ToastText = ToastText;
	params.Lifetime = Lifetime;
	params.bForceSlate = bForceSlate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ShowNextMap
// (Exec, Native, Public)
void ASQPlayerController::ShowNextMap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ShowNextMap");

	ASQPlayerController_ShowNextMap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ShouldSkipPassword
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQPlayerController::ShouldSkipPassword()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ShouldSkipPassword");

	ASQPlayerController_ShouldSkipPassword_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerController.ShouldDirectSpawn
// (Final, Native, Public, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQPlayerController::ShouldDirectSpawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ShouldDirectSpawn");

	ASQPlayerController_ShouldDirectSpawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerController.ShareRallyPoint
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int                            SquadId                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ShareRallyPoint(int SquadId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ShareRallyPoint");

	ASQPlayerController_ShareRallyPoint_Params params;
	params.SquadId = SquadId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.SetWorldOrigin
// (Final, Exec, Native, Private, HasOutParms, HasDefaults, Const)
// Parameters:
// struct FIntVector              NewOrigin                      (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::SetWorldOrigin(const struct FIntVector& NewOrigin)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.SetWorldOrigin");

	ASQPlayerController_SetWorldOrigin_Params params;
	params.NewOrigin = NewOrigin;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.SetSelectionMode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::SetSelectionMode(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.SetSelectionMode");

	ASQPlayerController_SetSelectionMode_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.SetRoamingMapOpen
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bOpen                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::SetRoamingMapOpen(bool bOpen)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.SetRoamingMapOpen");

	ASQPlayerController_SetRoamingMapOpen_Params params;
	params.bOpen = bOpen;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.SetOutOfMapBoundsKillTimestamp
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// float                          Timestamp                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::SetOutOfMapBoundsKillTimestamp(float Timestamp)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.SetOutOfMapBoundsKillTimestamp");

	ASQPlayerController_SetOutOfMapBoundsKillTimestamp_Params params;
	params.Timestamp = Timestamp;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.SetIgnoreWeaponInput
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// bool                           bNewClickInput                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::SetIgnoreWeaponInput(bool bNewClickInput)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.SetIgnoreWeaponInput");

	ASQPlayerController_SetIgnoreWeaponInput_Params params;
	params.bNewClickInput = bNewClickInput;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerUnmuteSquad
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ASQSquadState*           MuteSquadState                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ServerUnmuteSquad(class ASQSquadState* MuteSquadState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerUnmuteSquad");

	ASQPlayerController_ServerUnmuteSquad_Params params;
	params.MuteSquadState = MuteSquadState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerTryClaimVehicle
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// class ASQVehicle*              VehicleToClaim                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ServerTryClaimVehicle(class ASQVehicle* VehicleToClaim)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerTryClaimVehicle");

	ASQPlayerController_ServerTryClaimVehicle_Params params;
	params.VehicleToClaim = VehicleToClaim;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerTryApproveVehicleClaim
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
void ASQPlayerController::ServerTryApproveVehicleClaim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerTryApproveVehicleClaim");

	ASQPlayerController_ServerTryApproveVehicleClaim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerSwitchSeat
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            Index                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ServerSwitchSeat(int Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerSwitchSeat");

	ASQPlayerController_ServerSwitchSeat_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerSuicide
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           bLeavingServer                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ServerSuicide(bool bLeavingServer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerSuicide");

	ASQPlayerController_ServerSuicide_Params params;
	params.bLeavingServer = bLeavingServer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerStartHealing
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ASQSoldier*              HealedSoldier                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ServerStartHealing(class ASQSoldier* HealedSoldier)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerStartHealing");

	ASQPlayerController_ServerStartHealing_Params params;
	params.HealedSoldier = HealedSoldier;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerSLInviteMember
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// class ASQPlayerState*          PlayerToInvite                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ServerSLInviteMember(class ASQPlayerState* PlayerToInvite)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerSLInviteMember");

	ASQPlayerController_ServerSLInviteMember_Params params;
	params.PlayerToInvite = PlayerToInvite;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerShowNextMap
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
void ASQPlayerController::ServerShowNextMap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerShowNextMap");

	ASQPlayerController_ServerShowNextMap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerShareRallyPoint
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            SquadId                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ServerShareRallyPoint(int SquadId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerShareRallyPoint");

	ASQPlayerController_ServerShareRallyPoint_Params params;
	params.SquadId = SquadId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerSetVoipHandAnim
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// ESQVoiceChannel                VoiceChannel                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ServerSetVoipHandAnim(ESQVoiceChannel VoiceChannel)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerSetVoipHandAnim");

	ASQPlayerController_ServerSetVoipHandAnim_Params params;
	params.VoiceChannel = VoiceChannel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerSetMuteAllPlayersExceptSquad
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           bMute                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ServerSetMuteAllPlayersExceptSquad(bool bMute)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerSetMuteAllPlayersExceptSquad");

	ASQPlayerController_ServerSetMuteAllPlayersExceptSquad_Params params;
	params.bMute = bMute;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerSay
// (Net, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 Msg                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ServerSay(const struct FString& Msg)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerSay");

	ASQPlayerController_ServerSay_Params params;
	params.Msg = Msg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerRequestRestartPlayer
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// class ASQGameSpawn*            Spawn                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ServerRequestRestartPlayer(class ASQGameSpawn* Spawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerRequestRestartPlayer");

	ASQPlayerController_ServerRequestRestartPlayer_Params params;
	params.Spawn = Spawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerRequestPlaceDeployable
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, BlueprintCallable, NetValidate)
// Parameters:
// struct FVector                 DeployableLocation             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                DeployableRotation             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
// struct FVector                 DeployableScale                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ServerRequestPlaceDeployable(const struct FVector& DeployableLocation, const struct FRotator& DeployableRotation, const struct FVector& DeployableScale)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerRequestPlaceDeployable");

	ASQPlayerController_ServerRequestPlaceDeployable_Params params;
	params.DeployableLocation = DeployableLocation;
	params.DeployableRotation = DeployableRotation;
	params.DeployableScale = DeployableScale;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerRequestDeployRole_Actual
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
void ASQPlayerController::ServerRequestDeployRole_Actual()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerRequestDeployRole_Actual");

	ASQPlayerController_ServerRequestDeployRole_Actual_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerRequestDeployRole
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USQRoleSettings*         NewRole                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ServerRequestDeployRole(class USQRoleSettings* NewRole)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerRequestDeployRole");

	ASQPlayerController_ServerRequestDeployRole_Params params;
	params.NewRole = NewRole;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerRemoveVehicleOverlayWidget
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
void ASQPlayerController::ServerRemoveVehicleOverlayWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerRemoveVehicleOverlayWidget");

	ASQPlayerController_ServerRemoveVehicleOverlayWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerRearmWeapons
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class UObject*                 RearmObject                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FSQRearmWeaponRequest> RearmRequest                   (ConstParm, Parm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
void ASQPlayerController::ServerRearmWeapons(class UObject* RearmObject, TArray<struct FSQRearmWeaponRequest> RearmRequest)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerRearmWeapons");

	ASQPlayerController_ServerRearmWeapons_Params params;
	params.RearmObject = RearmObject;
	params.RearmRequest = RearmRequest;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerProcessApprovalEntry
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// unsigned char                  Mode                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// uint32_t                       VerifyKey                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ServerProcessApprovalEntry(unsigned char Mode, uint32_t VerifyKey)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerProcessApprovalEntry");

	ASQPlayerController_ServerProcessApprovalEntry_Params params;
	params.Mode = Mode;
	params.VerifyKey = VerifyKey;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerPlayEmoteAnim
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// ESQEmotes                      Emote                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ServerPlayEmoteAnim(ESQEmotes Emote)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerPlayEmoteAnim");

	ASQPlayerController_ServerPlayEmoteAnim_Params params;
	params.Emote = Emote;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerPlayCustomEmote
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// struct FName                   CustomName                     (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ServerPlayCustomEmote(const struct FName& CustomName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerPlayCustomEmote");

	ASQPlayerController_ServerPlayCustomEmote_Params params;
	params.CustomName = CustomName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerOnPlayerToggleVoice_Editor
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FUniqueNetIdRepl        TalkingPlayerId                (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESQVoiceChannel                VoiceChannel                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ServerOnPlayerToggleVoice_Editor(const struct FUniqueNetIdRepl& TalkingPlayerId, ESQVoiceChannel VoiceChannel)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerOnPlayerToggleVoice_Editor");

	ASQPlayerController_ServerOnPlayerToggleVoice_Editor_Params params;
	params.TalkingPlayerId = TalkingPlayerId;
	params.VoiceChannel = VoiceChannel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerNotifyExplosiveHit
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FSQShotInfo             ShotInfoZeroBased              (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// TArray<struct FSQPenetrationTrace> TargetsZeroBased               (ConstParm, Parm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FHitResult              HitResult                      (ConstParm, Parm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// struct FArmorPenetration       CachedPenetration              (ConstParm, Parm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
// struct FSQWeaponData           WeaponConfig                   (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
void ASQPlayerController::ServerNotifyExplosiveHit(const struct FSQShotInfo& ShotInfoZeroBased, TArray<struct FSQPenetrationTrace> TargetsZeroBased, const struct FHitResult& HitResult, const struct FArmorPenetration& CachedPenetration, const struct FSQWeaponData& WeaponConfig)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerNotifyExplosiveHit");

	ASQPlayerController_ServerNotifyExplosiveHit_Params params;
	params.ShotInfoZeroBased = ShotInfoZeroBased;
	params.TargetsZeroBased = TargetsZeroBased;
	params.HitResult = HitResult;
	params.CachedPenetration = CachedPenetration;
	params.WeaponConfig = WeaponConfig;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerMuteSquad
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ASQSquadState*           MuteSquadState                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ServerMuteSquad(class ASQSquadState* MuteSquadState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerMuteSquad");

	ASQPlayerController_ServerMuteSquad_Params params;
	params.MuteSquadState = MuteSquadState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerMovePlayerToFireTeam
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ASQPlayerState*          TargetPlayerState              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            FireTeamIndex                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Position                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ServerMovePlayerToFireTeam(class ASQPlayerState* TargetPlayerState, int FireTeamIndex, int Position)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerMovePlayerToFireTeam");

	ASQPlayerController_ServerMovePlayerToFireTeam_Params params;
	params.TargetPlayerState = TargetPlayerState;
	params.FireTeamIndex = FireTeamIndex;
	params.Position = Position;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerLeaveSquad
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
void ASQPlayerController::ServerLeaveSquad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerLeaveSquad");

	ASQPlayerController_ServerLeaveSquad_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerKickPlayerFromSquad
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ASQPlayerState*          ToKick                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ServerKickPlayerFromSquad(class ASQPlayerState* ToKick)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerKickPlayerFromSquad");

	ASQPlayerController_ServerKickPlayerFromSquad_Params params;
	params.ToKick = ToKick;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerJoinSquad
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ASQSquadStatePrivateToTeam* ToJoin                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ServerJoinSquad(class ASQSquadStatePrivateToTeam* ToJoin)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerJoinSquad");

	ASQPlayerController_ServerJoinSquad_Params params;
	params.ToJoin = ToJoin;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerGiveUp
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
void ASQPlayerController::ServerGiveUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerGiveUp");

	ASQPlayerController_ServerGiveUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerGiveSquadLeader
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ASQPlayerState*          NewLeader                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ServerGiveSquadLeader(class ASQPlayerState* NewLeader)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerGiveSquadLeader");

	ASQPlayerController_ServerGiveSquadLeader_Params params;
	params.NewLeader = NewLeader;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerGiveFireTeamLeader
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ASQPlayerState*          NewLeader                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            FireTeamIndex                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ServerGiveFireTeamLeader(class ASQPlayerState* NewLeader, int FireTeamIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerGiveFireTeamLeader");

	ASQPlayerController_ServerGiveFireTeamLeader_Params params;
	params.NewLeader = NewLeader;
	params.FireTeamIndex = FireTeamIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerGameplayUnmutePlayer
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FUniqueNetIdRepl        MutePlayerId                   (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ServerGameplayUnmutePlayer(const struct FUniqueNetIdRepl& MutePlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerGameplayUnmutePlayer");

	ASQPlayerController_ServerGameplayUnmutePlayer_Params params;
	params.MutePlayerId = MutePlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerGameplayMutePlayer
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FUniqueNetIdRepl        MutePlayerId                   (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ServerGameplayMutePlayer(const struct FUniqueNetIdRepl& MutePlayerId)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerGameplayMutePlayer");

	ASQPlayerController_ServerGameplayMutePlayer_Params params;
	params.MutePlayerId = MutePlayerId;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerGameCommandFromRemotePlayer
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 Cmd                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ServerGameCommandFromRemotePlayer(const struct FString& Cmd)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerGameCommandFromRemotePlayer");

	ASQPlayerController_ServerGameCommandFromRemotePlayer_Params params;
	params.Cmd = Cmd;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerFinishSeatProgress
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// class ASQVehicle*              Vehicle                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ServerFinishSeatProgress(class ASQVehicle* Vehicle)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerFinishSeatProgress");

	ASQPlayerController_ServerFinishSeatProgress_Params params;
	params.Vehicle = Vehicle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerEndHealing
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
void ASQPlayerController::ServerEndHealing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerEndHealing");

	ASQPlayerController_ServerEndHealing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerEmergencyTeleport
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// class ASQVehicle*              Vehicle                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          HeightOffset                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          YawDegrees                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ServerEmergencyTeleport(class ASQVehicle* Vehicle, float HeightOffset, float YawDegrees)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerEmergencyTeleport");

	ASQPlayerController_ServerEmergencyTeleport_Params params;
	params.Vehicle = Vehicle;
	params.HeightOffset = HeightOffset;
	params.YawDegrees = YawDegrees;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerDisbandSquad
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
void ASQPlayerController::ServerDisbandSquad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerDisbandSquad");

	ASQPlayerController_ServerDisbandSquad_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerDisbandFireTeam
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// int                            FireTeamIndex                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ServerDisbandFireTeam(int FireTeamIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerDisbandFireTeam");

	ASQPlayerController_ServerDisbandFireTeam_Params params;
	params.FireTeamIndex = FireTeamIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerDebugToggleForceNoCommanderCooldowns
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ServerDebugToggleForceNoCommanderCooldowns(bool Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerDebugToggleForceNoCommanderCooldowns");

	ASQPlayerController_ServerDebugToggleForceNoCommanderCooldowns_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerDebugToggleForceAllowCommanderActions
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ServerDebugToggleForceAllowCommanderActions(bool Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerDebugToggleForceAllowCommanderActions");

	ASQPlayerController_ServerDebugToggleForceAllowCommanderActions_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerDebugSetServerTickRate
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          NewTickRate                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ServerDebugSetServerTickRate(float NewTickRate)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerDebugSetServerTickRate");

	ASQPlayerController_ServerDebugSetServerTickRate_Params params;
	params.NewTickRate = NewTickRate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerDebugSetServerSecondsNonSeamlessForced
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// float                          Seconds                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ServerDebugSetServerSecondsNonSeamlessForced(float Seconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerDebugSetServerSecondsNonSeamlessForced");

	ASQPlayerController_ServerDebugSetServerSecondsNonSeamlessForced_Params params;
	params.Seconds = Seconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerDebugRemoveSteamTestItem
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// int                            ID                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Amount                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ServerDebugRemoveSteamTestItem(int ID, int Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerDebugRemoveSteamTestItem");

	ASQPlayerController_ServerDebugRemoveSteamTestItem_Params params;
	params.ID = ID;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerDebugAssignSteamTestItem
// (Final, Net, NetReliable, Native, Event, Private, NetServer, NetValidate)
// Parameters:
// int                            ID                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Amount                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ServerDebugAssignSteamTestItem(int ID, int Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerDebugAssignSteamTestItem");

	ASQPlayerController_ServerDebugAssignSteamTestItem_Params params;
	params.ID = ID;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerCreateVehicleOverlayWidget
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// class UClass*                  WidgetClass                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ServerCreateVehicleOverlayWidget(class UClass* WidgetClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerCreateVehicleOverlayWidget");

	ASQPlayerController_ServerCreateVehicleOverlayWidget_Params params;
	params.WidgetClass = WidgetClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerCreateSquad
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FString                 Name                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           Locked                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ServerCreateSquad(const struct FString& Name, bool Locked)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerCreateSquad");

	ASQPlayerController_ServerCreateSquad_Params params;
	params.Name = Name;
	params.Locked = Locked;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerCreateRallyPoint
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
void ASQPlayerController::ServerCreateRallyPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerCreateRallyPoint");

	ASQPlayerController_ServerCreateRallyPoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerChat
// (Net, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// struct FString                 Msg                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESQChat                        ChatType                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ServerChat(const struct FString& Msg, ESQChat ChatType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerChat");

	ASQPlayerController_ServerChat_Params params;
	params.Msg = Msg;
	params.ChatType = ChatType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerChangeSquadLock
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
// Parameters:
// class ASQSquadState*           Squad                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ServerChangeSquadLock(class ASQSquadState* Squad)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerChangeSquadLock");

	ASQPlayerController_ServerChangeSquadLock_Params params;
	params.Squad = Squad;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerChangeRoleFromDeployable
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// class ASQDeployable*           Deployable                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ServerChangeRoleFromDeployable(class ASQDeployable* Deployable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerChangeRoleFromDeployable");

	ASQPlayerController_ServerChangeRoleFromDeployable_Params params;
	params.Deployable = Deployable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerChangeRole
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// bool                           bGivePartialAmmo               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bLeavingSquad                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ServerChangeRole(bool bGivePartialAmmo, bool bLeavingSquad)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerChangeRole");

	ASQPlayerController_ServerChangeRole_Params params;
	params.bGivePartialAmmo = bGivePartialAmmo;
	params.bLeavingSquad = bLeavingSquad;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerCancelRestartPlayer
// (Net, NetReliable, Native, Event, Public, NetServer, BlueprintCallable, NetValidate)
void ASQPlayerController::ServerCancelRestartPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerCancelRestartPlayer");

	ASQPlayerController_ServerCancelRestartPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ServerAddApprovalEntry
// (Net, NetReliable, Native, Event, Public, NetServer, NetValidate)
// Parameters:
// struct FSQApprovalEntryRequest Entry                          (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// EApprovalRequestChannels       Filter                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ServerAddApprovalEntry(const struct FSQApprovalEntryRequest& Entry, EApprovalRequestChannels Filter)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ServerAddApprovalEntry");

	ASQPlayerController_ServerAddApprovalEntry_Params params;
	params.Entry = Entry;
	params.Filter = Filter;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.SelectSpawn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASQGameSpawn*            Spawn                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::SelectSpawn(class ASQGameSpawn* Spawn)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.SelectSpawn");

	ASQPlayerController_SelectSpawn_Params params;
	params.Spawn = Spawn;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.Say
// (Exec, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 Msg                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::Say(const struct FString& Msg)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.Say");

	ASQPlayerController_Say_Params params;
	params.Msg = Msg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.Respawn
// (Exec, Native, Public, BlueprintCallable)
void ASQPlayerController::Respawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.Respawn");

	ASQPlayerController_Respawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.RequestPlaceDeployable
// (Final, Native, Public, BlueprintCallable)
void ASQPlayerController::RequestPlaceDeployable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.RequestPlaceDeployable");

	ASQPlayerController_RequestPlaceDeployable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ProcessApprovalEntry
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// unsigned char                  Mode                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ProcessApprovalEntry(unsigned char Mode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ProcessApprovalEntry");

	ASQPlayerController_ProcessApprovalEntry_Params params;
	params.Mode = Mode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.PrintWeaponHashes
// (Final, Exec, Native, Public, BlueprintCallable)
void ASQPlayerController::PrintWeaponHashes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.PrintWeaponHashes");

	ASQPlayerController_PrintWeaponHashes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.PlayMusic
// (Native, Public, BlueprintCallable)
void ASQPlayerController::PlayMusic()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.PlayMusic");

	ASQPlayerController_PlayMusic_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.PlayEmoteAnim
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ESQEmotes                      Emote                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FName                   CustomName                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::PlayEmoteAnim(ESQEmotes Emote, const struct FName& CustomName)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.PlayEmoteAnim");

	ASQPlayerController_PlayEmoteAnim_Params params;
	params.Emote = Emote;
	params.CustomName = CustomName;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.OnSpawningEnabledStateChanged
// (Final, Native, Private)
// Parameters:
// bool                           bEnabled                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::OnSpawningEnabledStateChanged(bool bEnabled)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.OnSpawningEnabledStateChanged");

	ASQPlayerController_OnSpawningEnabledStateChanged_Params params;
	params.bEnabled = bEnabled;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.OnSelectedSpawnSiegedStateChanged
// (Final, Native, Private)
// Parameters:
// bool                           bSieged                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::OnSelectedSpawnSiegedStateChanged(bool bSieged)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.OnSelectedSpawnSiegedStateChanged");

	ASQPlayerController_OnSelectedSpawnSiegedStateChanged_Params params;
	params.bSieged = bSieged;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.OnSelectedSpawnerDestroyed
// (Final, Native, Private)
// Parameters:
// class AActor*                  Actor                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::OnSelectedSpawnerDestroyed(class AActor* Actor)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.OnSelectedSpawnerDestroyed");

	ASQPlayerController_OnSelectedSpawnerDestroyed_Params params;
	params.Actor = Actor;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.OnRep_TeamState
// (Native, Public)
void ASQPlayerController::OnRep_TeamState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.OnRep_TeamState");

	ASQPlayerController_OnRep_TeamState_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.OnRep_SquadState
// (Native, Public)
// Parameters:
// class ASQSquadState*           OldSquadState                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::OnRep_SquadState(class ASQSquadState* OldSquadState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.OnRep_SquadState");

	ASQPlayerController_OnRep_SquadState_Params params;
	params.OldSquadState = OldSquadState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.OnRep_OutOfMapBoundsKillTimestamp
// (Final, Native, Private)
void ASQPlayerController::OnRep_OutOfMapBoundsKillTimestamp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.OnRep_OutOfMapBoundsKillTimestamp");

	ASQPlayerController_OnRep_OutOfMapBoundsKillTimestamp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.OnRep_CurrentSeat
// (Final, Native, Public)
void ASQPlayerController::OnRep_CurrentSeat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.OnRep_CurrentSeat");

	ASQPlayerController_OnRep_CurrentSeat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.OnReceiveChat
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class ASQPlayerState*          Speaker                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 Message                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESQChat                        Channel                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESQNotificationTypes           NotificationType               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::OnReceiveChat(class ASQPlayerState* Speaker, const struct FString& Message, ESQChat Channel, ESQNotificationTypes NotificationType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.OnReceiveChat");

	ASQPlayerController_OnReceiveChat_Params params;
	params.Speaker = Speaker;
	params.Message = Message;
	params.Channel = Channel;
	params.NotificationType = NotificationType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.OnOutOfMapBoundsChanged
// (Event, Public, BlueprintEvent)
// Parameters:
// float                          KillTimestamp                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bIsOutOfBounds                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::OnOutOfMapBoundsChanged(float KillTimestamp, bool bIsOutOfBounds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.OnOutOfMapBoundsChanged");

	ASQPlayerController_OnOutOfMapBoundsChanged_Params params;
	params.KillTimestamp = KillTimestamp;
	params.bIsOutOfBounds = bIsOutOfBounds;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.OnFireWeaponOverride
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQPlayerController::OnFireWeaponOverride()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.OnFireWeaponOverride");

	ASQPlayerController_OnFireWeaponOverride_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerController.OnExitBoundary
// (Final, Native, Public)
// Parameters:
// class USQBoundaryListener*     Listener                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQBoundary*             Boundary                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::OnExitBoundary(class USQBoundaryListener* Listener, class ASQBoundary* Boundary)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.OnExitBoundary");

	ASQPlayerController_OnExitBoundary_Params params;
	params.Listener = Listener;
	params.Boundary = Boundary;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.OnEnterBoundary
// (Final, Native, Public)
// Parameters:
// class USQBoundaryListener*     Listener                       (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQBoundary*             Boundary                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::OnEnterBoundary(class USQBoundaryListener* Listener, class ASQBoundary* Boundary)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.OnEnterBoundary");

	ASQPlayerController_OnEnterBoundary_Params params;
	params.Listener = Listener;
	params.Boundary = Boundary;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.OnDelayedSpawnCallback
// (Final, Native, Private)
void ASQPlayerController::OnDelayedSpawnCallback()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.OnDelayedSpawnCallback");

	ASQPlayerController_OnDelayedSpawnCallback_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.OnAltFireWeaponOverride
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQPlayerController::OnAltFireWeaponOverride()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.OnAltFireWeaponOverride");

	ASQPlayerController_OnAltFireWeaponOverride_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerController.MuteSquad
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// class ASQSquadState*           MuteSquadState                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::MuteSquad(class ASQSquadState* MuteSquadState)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.MuteSquad");

	ASQPlayerController_MuteSquad_Params params;
	params.MuteSquadState = MuteSquadState;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.MuteAllPlayersExceptSquad
// (Final, Native, Public, BlueprintCallable)
void ASQPlayerController::MuteAllPlayersExceptSquad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.MuteAllPlayersExceptSquad");

	ASQPlayerController_MuteAllPlayersExceptSquad_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.MovePlayerToFireTeam
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// class ASQPlayerState*          TargetPlayerState              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            FireTeamIndex                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Position                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::MovePlayerToFireTeam(class ASQPlayerState* TargetPlayerState, int FireTeamIndex, int Position)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.MovePlayerToFireTeam");

	ASQPlayerController_MovePlayerToFireTeam_Params params;
	params.TargetPlayerState = TargetPlayerState;
	params.FireTeamIndex = FireTeamIndex;
	params.Position = Position;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.LeaveSquad
// (Final, Exec, Native, Public, BlueprintCallable)
void ASQPlayerController::LeaveSquad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.LeaveSquad");

	ASQPlayerController_LeaveSquad_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.KickPlayerFromSquad
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// class ASQPlayerState*          ToKick                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::KickPlayerFromSquad(class ASQPlayerState* ToKick)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.KickPlayerFromSquad");

	ASQPlayerController_KickPlayerFromSquad_Params params;
	params.ToKick = ToKick;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.JoinSquadWithName
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 Name                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::JoinSquadWithName(const struct FString& Name)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.JoinSquadWithName");

	ASQPlayerController_JoinSquadWithName_Params params;
	params.Name = Name;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.JoinSquadWithId
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int                            ID                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::JoinSquadWithId(int ID)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.JoinSquadWithId");

	ASQPlayerController_JoinSquadWithId_Params params;
	params.ID = ID;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.IsWeaponInputIgnored
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQPlayerController::IsWeaponInputIgnored()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.IsWeaponInputIgnored");

	ASQPlayerController_IsWeaponInputIgnored_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerController.IsUsingFreeLook
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQPlayerController::IsUsingFreeLook()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.IsUsingFreeLook");

	ASQPlayerController_IsUsingFreeLook_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerController.IsSquadLeader
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQPlayerController::IsSquadLeader()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.IsSquadLeader");

	ASQPlayerController_IsSquadLeader_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerController.IsShowingSpawnMenu
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQPlayerController::IsShowingSpawnMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.IsShowingSpawnMenu");

	ASQPlayerController_IsShowingSpawnMenu_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerController.IsRoamingMapOpen
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQPlayerController::IsRoamingMapOpen()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.IsRoamingMapOpen");

	ASQPlayerController_IsRoamingMapOpen_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerController.IsQA
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQPlayerController::IsQA()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.IsQA");

	ASQPlayerController_IsQA_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerController.IsPlayer
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQPlayerController::IsPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.IsPlayer");

	ASQPlayerController_IsPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerController.IsOutOfMapBounds
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQPlayerController::IsOutOfMapBounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.IsOutOfMapBounds");

	ASQPlayerController_IsOutOfMapBounds_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerController.IsMember
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQPlayerController::IsMember()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.IsMember");

	ASQPlayerController_IsMember_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerController.IsInVehicle
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQPlayerController::IsInVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.IsInVehicle");

	ASQPlayerController_IsInVehicle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerController.IsInactive
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQPlayerController::IsInactive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.IsInactive");

	ASQPlayerController_IsInactive_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerController.IsEntryMap
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQPlayerController::IsEntryMap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.IsEntryMap");

	ASQPlayerController_IsEntryMap_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerController.IsDev
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQPlayerController::IsDev()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.IsDev");

	ASQPlayerController_IsDev_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerController.IsCommander
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQPlayerController::IsCommander()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.IsCommander");

	ASQPlayerController_IsCommander_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerController.IsCameraMan
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQPlayerController::IsCameraMan()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.IsCameraMan");

	ASQPlayerController_IsCameraMan_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerController.IsAdminCamera
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQPlayerController::IsAdminCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.IsAdminCamera");

	ASQPlayerController_IsAdminCamera_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerController.IsAdmin
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQPlayerController::IsAdmin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.IsAdmin");

	ASQPlayerController_IsAdmin_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerController.GiveUp
// (Exec, Native, Public, BlueprintCallable)
void ASQPlayerController::GiveUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.GiveUp");

	ASQPlayerController_GiveUp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.GiveSquadLeader
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// class ASQPlayerState*          NewLeader                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::GiveSquadLeader(class ASQPlayerState* NewLeader)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.GiveSquadLeader");

	ASQPlayerController_GiveSquadLeader_Params params;
	params.NewLeader = NewLeader;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.GiveFireTeamLeader
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// class ASQPlayerState*          NewLeader                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            FireTeamIndex                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::GiveFireTeamLeader(class ASQPlayerState* NewLeader, int FireTeamIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.GiveFireTeamLeader");

	ASQPlayerController_GiveFireTeamLeader_Params params;
	params.NewLeader = NewLeader;
	params.FireTeamIndex = FireTeamIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.GetYawInputScale
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ASQPlayerController::GetYawInputScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.GetYawInputScale");

	ASQPlayerController_GetYawInputScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerController.GetTeam
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int ASQPlayerController::GetTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.GetTeam");

	ASQPlayerController_GetTeam_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerController.GetSelectedSpawn
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASQGameSpawn*            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASQGameSpawn* ASQPlayerController::GetSelectedSpawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.GetSelectedSpawn");

	ASQPlayerController_GetSelectedSpawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerController.GetPitchInputScale
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ASQPlayerController::GetPitchInputScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.GetPitchInputScale");

	ASQPlayerController_GetPitchInputScale_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerController.GetOutOfMapBoundsKillTimestamp
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ASQPlayerController::GetOutOfMapBoundsKillTimestamp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.GetOutOfMapBoundsKillTimestamp");

	ASQPlayerController_GetOutOfMapBoundsKillTimestamp_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerController.GetLastDeathTime
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// float                          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
float ASQPlayerController::GetLastDeathTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.GetLastDeathTime");

	ASQPlayerController_GetLastDeathTime_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerController.GetDeployRole
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USQRoleSettings*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USQRoleSettings* ASQPlayerController::GetDeployRole()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.GetDeployRole");

	ASQPlayerController_GetDeployRole_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerController.GetCurrentVehicle
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASQVehicle*              ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASQVehicle* ASQPlayerController::GetCurrentVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.GetCurrentVehicle");

	ASQPlayerController_GetCurrentVehicle_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerController.GetCurrentSeatPawn
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class ASQVehicleSeat*          ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class ASQVehicleSeat* ASQPlayerController::GetCurrentSeatPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.GetCurrentSeatPawn");

	ASQPlayerController_GetCurrentSeatPawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerController.GetCurrentSeat
// (Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USQVehicleSeatComponent* ReturnValue                    (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USQVehicleSeatComponent* ASQPlayerController::GetCurrentSeat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.GetCurrentSeat");

	ASQPlayerController_GetCurrentSeat_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerController.GetCurrentRole
// (Final, Native, Public, BlueprintCallable, BlueprintPure, Const)
// Parameters:
// class USQRoleSettings*         ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class USQRoleSettings* ASQPlayerController::GetCurrentRole()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.GetCurrentRole");

	ASQPlayerController_GetCurrentRole_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerController.DisplayFailedDeployReason
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class ASQDeployable*           Deployable                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESQInvalidPlacementReason      Reason                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::DisplayFailedDeployReason(class ASQDeployable* Deployable, ESQInvalidPlacementReason Reason)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.DisplayFailedDeployReason");

	ASQPlayerController_DisplayFailedDeployReason_Params params;
	params.Deployable = Deployable;
	params.Reason = Reason;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.DisbandSquad
// (Final, Native, Public, BlueprintCallable)
void ASQPlayerController::DisbandSquad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.DisbandSquad");

	ASQPlayerController_DisbandSquad_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.DisbandFireTeam
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int                            FireTeamIndex                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::DisbandFireTeam(int FireTeamIndex)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.DisbandFireTeam");

	ASQPlayerController_DisbandFireTeam_Params params;
	params.FireTeamIndex = FireTeamIndex;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.DisapproveQueue
// (Final, Native, Public, BlueprintCallable)
void ASQPlayerController::DisapproveQueue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.DisapproveQueue");

	ASQPlayerController_DisapproveQueue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.DebugToggleForceNoCommanderCooldowns
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// bool                           Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::DebugToggleForceNoCommanderCooldowns(bool Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.DebugToggleForceNoCommanderCooldowns");

	ASQPlayerController_DebugToggleForceNoCommanderCooldowns_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.DebugToggleForceAllowCommanderActions
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// bool                           Value                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::DebugToggleForceAllowCommanderActions(bool Value)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.DebugToggleForceAllowCommanderActions");

	ASQPlayerController_DebugToggleForceAllowCommanderActions_Params params;
	params.Value = Value;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.DebugToggleCenterDot
// (Final, Exec, Native, Public, BlueprintCallable)
void ASQPlayerController::DebugToggleCenterDot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.DebugToggleCenterDot");

	ASQPlayerController_DebugToggleCenterDot_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.DebugSetServerTickRate
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// float                          NewTickRate                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::DebugSetServerTickRate(float NewTickRate)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.DebugSetServerTickRate");

	ASQPlayerController_DebugSetServerTickRate_Params params;
	params.NewTickRate = NewTickRate;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.DebugSetServerSecondsNonSeamlessForced
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// float                          Seconds                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::DebugSetServerSecondsNonSeamlessForced(float Seconds)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.DebugSetServerSecondsNonSeamlessForced");

	ASQPlayerController_DebugSetServerSecondsNonSeamlessForced_Params params;
	params.Seconds = Seconds;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.DebugRemoveSteamTestItem
// (Final, Exec, Native, Private, BlueprintCallable)
// Parameters:
// int                            ID                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Amount                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::DebugRemoveSteamTestItem(int ID, int Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.DebugRemoveSteamTestItem");

	ASQPlayerController_DebugRemoveSteamTestItem_Params params;
	params.ID = ID;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.DebugForceOriginRebase
// (Final, Exec, Native, Public, BlueprintCallable)
void ASQPlayerController::DebugForceOriginRebase()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.DebugForceOriginRebase");

	ASQPlayerController_DebugForceOriginRebase_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.DebugAssignSteamTestItem
// (Final, Exec, Native, Private, BlueprintCallable)
// Parameters:
// int                            ID                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            Amount                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::DebugAssignSteamTestItem(int ID, int Amount)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.DebugAssignSteamTestItem");

	ASQPlayerController_DebugAssignSteamTestItem_Params params;
	params.ID = ID;
	params.Amount = Amount;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.CreateSquad
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 Name                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           Locked                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::CreateSquad(const struct FString& Name, bool Locked)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.CreateSquad");

	ASQPlayerController_CreateSquad_Params params;
	params.Name = Name;
	params.Locked = Locked;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.CreateRallyPoint
// (Final, Native, Public, BlueprintCallable)
void ASQPlayerController::CreateRallyPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.CreateRallyPoint");

	ASQPlayerController_CreateRallyPoint_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.CreateMarker
// (Net, NetReliable, Native, Event, Public, NetServer, HasDefaults, BlueprintCallable, NetValidate)
// Parameters:
// int                            TeamId                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            ClientId                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UTexture2D*              IconTexture                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D               MapPosition                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          LifeT                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                  MyOwner                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::CreateMarker(int TeamId, int ClientId, class UTexture2D* IconTexture, const struct FVector2D& MapPosition, float LifeT, class AActor* MyOwner)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.CreateMarker");

	ASQPlayerController_CreateMarker_Params params;
	params.TeamId = TeamId;
	params.ClientId = ClientId;
	params.IconTexture = IconTexture;
	params.MapPosition = MapPosition;
	params.LifeT = LifeT;
	params.MyOwner = MyOwner;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.CoreStateRefreshVisibility
// (Final, Native, Protected, BlueprintCallable)
void ASQPlayerController::CoreStateRefreshVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.CoreStateRefreshVisibility");

	ASQPlayerController_CoreStateRefreshVisibility_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.CommitSpawn
// (Final, Native, Public, BlueprintCallable)
void ASQPlayerController::CommitSpawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.CommitSpawn");

	ASQPlayerController_CommitSpawn_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.CloseConsole
// (Final, Native, Public, BlueprintCallable)
void ASQPlayerController::CloseConsole()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.CloseConsole");

	ASQPlayerController_CloseConsole_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ClientWasKickedFromSquad
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FText                   KickReason                     (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// int                            SquadId                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          DurationOfBan                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ClientWasKickedFromSquad(const struct FText& KickReason, int SquadId, float DurationOfBan)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ClientWasKickedFromSquad");

	ASQPlayerController_ClientWasKickedFromSquad_Params params;
	params.KickReason = KickReason;
	params.SquadId = SquadId;
	params.DurationOfBan = DurationOfBan;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ClientSystemMessage
// (Net, NetReliable, Native, Event, Public, HasDefaults, NetClient, BlueprintCallable)
// Parameters:
// struct FString                 Message                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor            Color                          (ConstParm, Parm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          MessageLifetime                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESQNotificationTypes           NotificationType               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ClientSystemMessage(const struct FString& Message, const struct FLinearColor& Color, float MessageLifetime, ESQNotificationTypes NotificationType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ClientSystemMessage");

	ASQPlayerController_ClientSystemMessage_Params params;
	params.Message = Message;
	params.Color = Color;
	params.MessageLifetime = MessageLifetime;
	params.NotificationType = NotificationType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ClientStartSeatProgressBar
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// float                          Timer                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQVehicle*              Vehicle                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESeatProgressMenuMode          MenuMode                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ClientStartSeatProgressBar(float Timer, class ASQVehicle* Vehicle, ESeatProgressMenuMode MenuMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ClientStartSeatProgressBar");

	ASQPlayerController_ClientStartSeatProgressBar_Params params;
	params.Timer = Timer;
	params.Vehicle = Vehicle;
	params.MenuMode = MenuMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ClientStartOnlineGame
// (Net, NetReliable, Native, Event, Public, NetClient)
void ASQPlayerController::ClientStartOnlineGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ClientStartOnlineGame");

	ASQPlayerController_ClientStartOnlineGame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ClientStartingNewPlayer
// (Net, NetReliable, Native, Event, Public, NetClient, NetValidate)
void ASQPlayerController::ClientStartingNewPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ClientStartingNewPlayer");

	ASQPlayerController_ClientStartingNewPlayer_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ClientShowVehicleInventory
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class ASQVehicle*              Vehicle                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESeatProgressMenuMode          MenuMode                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ClientShowVehicleInventory(class ASQVehicle* Vehicle, ESeatProgressMenuMode MenuMode)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ClientShowVehicleInventory");

	ASQPlayerController_ClientShowVehicleInventory_Params params;
	params.Vehicle = Vehicle;
	params.MenuMode = MenuMode;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ClientShowToast
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// struct FText                   ToastText                      (ConstParm, Parm, ReferenceParm, NativeAccessSpecifierPublic)
// float                          Lifetime                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ClientShowToast(const struct FText& ToastText, float Lifetime)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ClientShowToast");

	ASQPlayerController_ClientShowToast_Params params;
	params.ToastText = ToastText;
	params.Lifetime = Lifetime;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ClientSetSpectatorCamera
// (Net, NetReliable, Native, Event, Public, HasDefaults, NetClient)
// Parameters:
// struct FVector                 CameraLocation                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FRotator                CameraRotation                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
void ASQPlayerController::ClientSetSpectatorCamera(const struct FVector& CameraLocation, const struct FRotator& CameraRotation)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ClientSetSpectatorCamera");

	ASQPlayerController_ClientSetSpectatorCamera_Params params;
	params.CameraLocation = CameraLocation;
	params.CameraRotation = CameraRotation;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ClientSendRoundEndEvent
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// int                            WinningTeam                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            LosingTeam                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            WinnerTickets                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            LoserTickets                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ClientSendRoundEndEvent(int WinningTeam, int LosingTeam, int WinnerTickets, int LoserTickets)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ClientSendRoundEndEvent");

	ASQPlayerController_ClientSendRoundEndEvent_Params params;
	params.WinningTeam = WinningTeam;
	params.LosingTeam = LosingTeam;
	params.WinnerTickets = WinnerTickets;
	params.LoserTickets = LoserTickets;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ClientSendLineToConsole
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FString                 Line                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ClientSendLineToConsole(const struct FString& Line)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ClientSendLineToConsole");

	ASQPlayerController_ClientSendLineToConsole_Params params;
	params.Line = Line;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ClientResetInventoryWeaponIndex
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
void ASQPlayerController::ClientResetInventoryWeaponIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ClientResetInventoryWeaponIndex");

	ASQPlayerController_ClientResetInventoryWeaponIndex_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ClientRemoveVehicleOverlayWidget
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
void ASQPlayerController::ClientRemoveVehicleOverlayWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ClientRemoveVehicleOverlayWidget");

	ASQPlayerController_ClientRemoveVehicleOverlayWidget_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ClientPushApprovalMessage
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// uint32_t                       Key                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 ApprovalMessage                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            IconIndex                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 Description                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                          Duration                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ClientPushApprovalMessage(uint32_t Key, const struct FString& ApprovalMessage, int IconIndex, const struct FString& Description, float Duration)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ClientPushApprovalMessage");

	ASQPlayerController_ClientPushApprovalMessage_Params params;
	params.Key = Key;
	params.ApprovalMessage = ApprovalMessage;
	params.IconIndex = IconIndex;
	params.Description = Description;
	params.Duration = Duration;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ClientOpenDeployableInteractableMenu
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// class ASQDeployableInteractable* DeployableInteractable         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ClientOpenDeployableInteractableMenu(class ASQDeployableInteractable* DeployableInteractable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ClientOpenDeployableInteractableMenu");

	ASQPlayerController_ClientOpenDeployableInteractableMenu_Params params;
	params.DeployableInteractable = DeployableInteractable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ClientOpenAmmoBag
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// class ASQDeployableAmmoBag*    ammobag                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ClientOpenAmmoBag(class ASQDeployableAmmoBag* ammobag)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ClientOpenAmmoBag");

	ASQPlayerController_ClientOpenAmmoBag_Params params;
	params.ammobag = ammobag;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ClientOnPlayerToggleVoice_Editor
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// struct FUniqueNetIdRepl        TalkingPlayerId                (Parm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESQVoiceChannel                VoiceChannel                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ClientOnPlayerToggleVoice_Editor(const struct FUniqueNetIdRepl& TalkingPlayerId, ESQVoiceChannel VoiceChannel)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ClientOnPlayerToggleVoice_Editor");

	ASQPlayerController_ClientOnPlayerToggleVoice_Editor_Params params;
	params.TalkingPlayerId = TalkingPlayerId;
	params.VoiceChannel = VoiceChannel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ClientNotifyPlayerWounded
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class ASQPlayerController*     WoundedPlayer                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ClientNotifyPlayerWounded(class ASQPlayerController* WoundedPlayer)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ClientNotifyPlayerWounded");

	ASQPlayerController_ClientNotifyPlayerWounded_Params params;
	params.WoundedPlayer = WoundedPlayer;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ClientNotifyPlayerDestroyedVehicle
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// class ASQVehicle*              Vehicle                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ClientNotifyPlayerDestroyedVehicle(class ASQVehicle* Vehicle)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ClientNotifyPlayerDestroyedVehicle");

	ASQPlayerController_ClientNotifyPlayerDestroyedVehicle_Params params;
	params.Vehicle = Vehicle;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ClientIgnoreWeaponInput
// (Net, NetReliable, Native, Event, Public, NetClient)
// Parameters:
// bool                           bIgnore                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ClientIgnoreWeaponInput(bool bIgnore)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ClientIgnoreWeaponInput");

	ASQPlayerController_ClientIgnoreWeaponInput_Params params;
	params.bIgnore = bIgnore;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ClientHideVehicleRadial
// (Net, NetReliable, Native, Event, Public, NetClient)
void ASQPlayerController::ClientHideVehicleRadial()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ClientHideVehicleRadial");

	ASQPlayerController_ClientHideVehicleRadial_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ClientGameStarted
// (Net, NetReliable, Native, Event, Public, NetClient)
void ASQPlayerController::ClientGameStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ClientGameStarted");

	ASQPlayerController_ClientGameStarted_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ClientEndOnlineGame
// (Net, NetReliable, Native, Event, Public, NetClient)
void ASQPlayerController::ClientEndOnlineGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ClientEndOnlineGame");

	ASQPlayerController_ClientEndOnlineGame_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ClientEndHealing
// (Net, NetReliable, Native, Event, Public, NetClient)
void ASQPlayerController::ClientEndHealing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ClientEndHealing");

	ASQPlayerController_ClientEndHealing_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ClientCreateVehicleOverlayWidget
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// class UClass*                  WidgetClass                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ClientCreateVehicleOverlayWidget(class UClass* WidgetClass)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ClientCreateVehicleOverlayWidget");

	ASQPlayerController_ClientCreateVehicleOverlayWidget_Params params;
	params.WidgetClass = WidgetClass;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ClientCloseDeployableInteractableMenu
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// class ASQDeployableInteractable* DeployableInteractable         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ClientCloseDeployableInteractableMenu(class ASQDeployableInteractable* DeployableInteractable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ClientCloseDeployableInteractableMenu");

	ASQPlayerController_ClientCloseDeployableInteractableMenu_Params params;
	params.DeployableInteractable = DeployableInteractable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ClientCloseAmmoBag
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// class ASQDeployableAmmoBag*    ammobag                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ClientCloseAmmoBag(class ASQDeployableAmmoBag* ammobag)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ClientCloseAmmoBag");

	ASQPlayerController_ClientCloseAmmoBag_Params params;
	params.ammobag = ammobag;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ClientChat
// (Net, NetReliable, Native, Event, Public, NetClient, BlueprintCallable)
// Parameters:
// class ASQPlayerState*          Speaker                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FString                 Message                        (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESQChat                        Channel                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESQNotificationTypes           NotificationType               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ClientChat(class ASQPlayerState* Speaker, const struct FString& Message, ESQChat Channel, ESQNotificationTypes NotificationType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ClientChat");

	ASQPlayerController_ClientChat_Params params;
	params.Speaker = Speaker;
	params.Message = Message;
	params.Channel = Channel;
	params.NotificationType = NotificationType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.CheckValidGhost
// (Final, Native, Public)
void ASQPlayerController::CheckValidGhost()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.CheckValidGhost");

	ASQPlayerController_CheckValidGhost_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.CheckForAdmin
// (Final, Native, Public)
void ASQPlayerController::CheckForAdmin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.CheckForAdmin");

	ASQPlayerController_CheckForAdmin_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ChatToTeam
// (Exec, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 Msg                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ChatToTeam(const struct FString& Msg)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ChatToTeam");

	ASQPlayerController_ChatToTeam_Params params;
	params.Msg = Msg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ChatToSquad
// (Exec, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 Msg                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ChatToSquad(const struct FString& Msg)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ChatToSquad");

	ASQPlayerController_ChatToSquad_Params params;
	params.Msg = Msg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ChatToAll
// (Exec, Native, Public, BlueprintCallable)
// Parameters:
// struct FString                 Msg                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ChatToAll(const struct FString& Msg)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ChatToAll");

	ASQPlayerController_ChatToAll_Params params;
	params.Msg = Msg;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.Chat
// (Exec, Native, Public)
// Parameters:
// struct FString                 Msg                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESQChat                        ChatType                       (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::Chat(const struct FString& Msg, ESQChat ChatType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.Chat");

	ASQPlayerController_Chat_Params params;
	params.Msg = Msg;
	params.ChatType = ChatType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ChangeTeamsWithId
// (Final, Exec, Native, Public, BlueprintCallable)
// Parameters:
// int                            NewTeam                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ChangeTeamsWithId(int NewTeam)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ChangeTeamsWithId");

	ASQPlayerController_ChangeTeamsWithId_Params params;
	params.NewTeam = NewTeam;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ChangeTeams
// (Final, Exec, Native, Public, BlueprintCallable)
void ASQPlayerController::ChangeTeams()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ChangeTeams");

	ASQPlayerController_ChangeTeams_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ChangeRoleFromDeployable
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USQRoleSettings*         NewRole                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ASQDeployable*           Deployable                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ChangeRoleFromDeployable(class USQRoleSettings* NewRole, class ASQDeployable* Deployable)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ChangeRoleFromDeployable");

	ASQPlayerController_ChangeRoleFromDeployable_Params params;
	params.NewRole = NewRole;
	params.Deployable = Deployable;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ChangeRole
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USQRoleSettings*         NewRole                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bGivePartialAmmo               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           bLeavingSquad                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ChangeRole(class USQRoleSettings* NewRole, bool bGivePartialAmmo, bool bLeavingSquad)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ChangeRole");

	ASQPlayerController_ChangeRole_Params params;
	params.NewRole = NewRole;
	params.bGivePartialAmmo = bGivePartialAmmo;
	params.bLeavingSquad = bLeavingSquad;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.CancelGhost
// (Final, Native, Public, BlueprintCallable)
void ASQPlayerController::CancelGhost()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.CancelGhost");

	ASQPlayerController_CancelGhost_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.BPTraceMarkerLocation
// (Event, Public, HasOutParms, HasDefaults, BlueprintEvent)
// Parameters:
// class UClass*                  MarkerClass                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 Start                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                 End                            (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::BPTraceMarkerLocation(class UClass* MarkerClass, const struct FVector& Start, const struct FVector& End)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.BPTraceMarkerLocation");

	ASQPlayerController_BPTraceMarkerLocation_Params params;
	params.MarkerClass = MarkerClass;
	params.Start = Start;
	params.End = End;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.BPServerRearmWeapons
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TScriptInterface<class USQRearmSource> RearmSource                    (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, NativeAccessSpecifierPublic)
// TArray<struct FSQRearmWeaponRequest> RearmRequest                   (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
void ASQPlayerController::BPServerRearmWeapons(const TScriptInterface<class USQRearmSource>& RearmSource, TArray<struct FSQRearmWeaponRequest> RearmRequest)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.BPServerRearmWeapons");

	ASQPlayerController_BPServerRearmWeapons_Params params;
	params.RearmSource = RearmSource;
	params.RearmRequest = RearmRequest;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.BPHasAccessLevel
// (Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ESQAdminAccessLevels           RequestedLevel                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                           ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
bool ASQPlayerController::BPHasAccessLevel(ESQAdminAccessLevels RequestedLevel)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.BPHasAccessLevel");

	ASQPlayerController_BPHasAccessLevel_Params params;
	params.RequestedLevel = RequestedLevel;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.SQPlayerController.BlueprintPlayerSpawned
// (Event, Public, BlueprintEvent)
void ASQPlayerController::BlueprintPlayerSpawned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.BlueprintPlayerSpawned");

	ASQPlayerController_BlueprintPlayerSpawned_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.BlueprintPlayerDied
// (Event, Public, BlueprintEvent)
void ASQPlayerController::BlueprintPlayerDied()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.BlueprintPlayerDied");

	ASQPlayerController_BlueprintPlayerDied_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.BlueprintOnMatchEnded
// (Event, Public, BlueprintEvent)
// Parameters:
// int                            WinningTeam                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            LosingTeam                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            WinnerTickets                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int                            LoserTickets                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::BlueprintOnMatchEnded(int WinningTeam, int LosingTeam, int WinnerTickets, int LoserTickets)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.BlueprintOnMatchEnded");

	ASQPlayerController_BlueprintOnMatchEnded_Params params;
	params.WinningTeam = WinningTeam;
	params.LosingTeam = LosingTeam;
	params.WinnerTickets = WinnerTickets;
	params.LoserTickets = LoserTickets;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.BeginGhost
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UClass*                  DeployableType                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::BeginGhost(class UClass* DeployableType)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.BeginGhost");

	ASQPlayerController_BeginGhost_Params params;
	params.DeployableType = DeployableType;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.AttempPlaceDeployable
// (Final, Native, Public, BlueprintCallable)
void ASQPlayerController::AttempPlaceDeployable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.AttempPlaceDeployable");

	ASQPlayerController_AttempPlaceDeployable_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ApproveVehicleClaim
// (Exec, Native, Public)
void ASQPlayerController::ApproveVehicleClaim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ApproveVehicleClaim");

	ASQPlayerController_ApproveVehicleClaim_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ApproveQueue
// (Final, Native, Public, BlueprintCallable)
void ASQPlayerController::ApproveQueue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ApproveQueue");

	ASQPlayerController_ApproveQueue_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ApprovalEntryExpireOnServer
// (Final, Native, Private)
// Parameters:
// uint32_t                       Index                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ApprovalEntryExpireOnServer(uint32_t Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ApprovalEntryExpireOnServer");

	ASQPlayerController_ApprovalEntryExpireOnServer_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQPlayerController.ApprovalEntryExpireOnClient
// (Final, Native, Private)
// Parameters:
// uint32_t                       Index                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQPlayerController::ApprovalEntryExpireOnClient(uint32_t Index)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQPlayerController.ApprovalEntryExpireOnClient");

	ASQPlayerController_ApprovalEntryExpireOnClient_Params params;
	params.Index = Index;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAASRuleset.LatticeUpdated
// (Native, Event, Public, BlueprintEvent)
void ASQAASRuleset::LatticeUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAASRuleset.LatticeUpdated");

	ASQAASRuleset_LatticeUpdated_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQUndirectedGraph.RemoveNode
// (Native, Public, BlueprintCallable)
// Parameters:
// class USQGraphNodeComponent*   Node                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQUndirectedGraph::RemoveNode(class USQGraphNodeComponent* Node)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQUndirectedGraph.RemoveNode");

	ASQUndirectedGraph_RemoveNode_Params params;
	params.Node = Node;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQUndirectedGraph.RemoveLink
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FSQGraphLink            Link                           (Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQUndirectedGraph::RemoveLink(const struct FSQGraphLink& Link)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQUndirectedGraph.RemoveLink");

	ASQUndirectedGraph_RemoveLink_Params params;
	params.Link = Link;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQUndirectedGraph.OnRep_Nodes
// (Native, Public)
void ASQUndirectedGraph::OnRep_Nodes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQUndirectedGraph.OnRep_Nodes");

	ASQUndirectedGraph_OnRep_Nodes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQUndirectedGraph.GetNodes
// (Final, Native, Public, HasOutParms, BlueprintCallable, Const)
// Parameters:
// TArray<class USQGraphNodeComponent*> InOutNodes                     (Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
void ASQUndirectedGraph::GetNodes(TArray<class USQGraphNodeComponent*>* InOutNodes)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQUndirectedGraph.GetNodes");

	ASQUndirectedGraph_GetNodes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (InOutNodes != nullptr)
		*InOutNodes = params.InOutNodes;

}


// Function Squad.SQUndirectedGraph.GetLinks
// (Final, Native, Public, HasOutParms, BlueprintCallable)
// Parameters:
// TArray<struct FSQGraphLink>    InOutLinks                     (Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
void ASQUndirectedGraph::GetLinks(TArray<struct FSQGraphLink>* InOutLinks)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQUndirectedGraph.GetLinks");

	ASQUndirectedGraph_GetLinks_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (InOutLinks != nullptr)
		*InOutLinks = params.InOutLinks;

}


// Function Squad.SQUndirectedGraph.ClearNodesAndLinks
// (Final, Native, Public, BlueprintCallable)
void ASQUndirectedGraph::ClearNodesAndLinks()
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQUndirectedGraph.ClearNodesAndLinks");

	ASQUndirectedGraph_ClearNodesAndLinks_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQUndirectedGraph.AddNode
// (Native, Public, BlueprintCallable)
// Parameters:
// class USQGraphNodeComponent*   Node                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQUndirectedGraph::AddNode(class USQGraphNodeComponent* Node)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQUndirectedGraph.AddNode");

	ASQUndirectedGraph_AddNode_Params params;
	params.Node = Node;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQUndirectedGraph.AddLink
// (Native, Public, BlueprintCallable)
// Parameters:
// struct FSQGraphLink            Link                           (Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQUndirectedGraph::AddLink(const struct FSQGraphLink& Link)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQUndirectedGraph.AddLink");

	ASQUndirectedGraph_AddLink_Params params;
	params.Link = Link;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAASGraph.RemoveSourceNode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USQGraphNodeComponent*   Node                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQAASGraph::RemoveSourceNode(class USQGraphNodeComponent* Node)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAASGraph.RemoveSourceNode");

	ASQAASGraph_RemoveSourceNode_Params params;
	params.Node = Node;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAASGraph.PostNodeOwnerChanged
// (Final, Native, Public)
// Parameters:
// class USQCaptureZoneComponent* CaptureZone                    (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// unsigned char                  Team                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQAASGraph::PostNodeOwnerChanged(class USQCaptureZoneComponent* CaptureZone, unsigned char Team)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAASGraph.PostNodeOwnerChanged");

	ASQAASGraph_PostNodeOwnerChanged_Params params;
	params.CaptureZone = CaptureZone;
	params.Team = Team;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.SQAASGraph.GetTeamSourceNodes
// (Final, Native, Public, HasOutParms, BlueprintCallable, Const)
// Parameters:
// unsigned char                  Team                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class USQGraphNodeComponent*> InOutNodes                     (Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
void ASQAASGraph::GetTeamSourceNodes(unsigned char Team, TArray<class USQGraphNodeComponent*>* InOutNodes)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAASGraph.GetTeamSourceNodes");

	ASQAASGraph_GetTeamSourceNodes_Params params;
	params.Team = Team;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (InOutNodes != nullptr)
		*InOutNodes = params.InOutNodes;

}


// Function Squad.SQAASGraph.GetSourceNodes
// (Final, Native, Public, HasOutParms, BlueprintCallable, Const)
// Parameters:
// TArray<class USQGraphNodeComponent*> InOutNodes                     (Parm, OutParm, ZeroConstructor, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
void ASQAASGraph::GetSourceNodes(TArray<class USQGraphNodeComponent*>* InOutNodes)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAASGraph.GetSourceNodes");

	ASQAASGraph_GetSourceNodes_Params params;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

	if (InOutNodes != nullptr)
		*InOutNodes = params.InOutNodes;

}


// Function Squad.SQAASGraph.AddSourceNode
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class USQGraphNodeComponent*   Node                           (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
void ASQAASGraph::AddSourceNode(class USQGraphNodeComponent* Node)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.SQAASGraph.AddSourceNode");

	ASQAASGraph_AddSourceNode_Params params;
	params.Node = Node;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;

}


// Function Squad.CoreSerializeItemSetCallbackProxy.SerializeItemSet
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FBlueprintOnlineItem> Items                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class UCoreSerializeItemSetCallbackProxy* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UCoreSerializeItemSetCallbackProxy* UCoreSerializeItemSetCallbackProxy::STATIC_SerializeItemSet(class UObject* WorldContextObject, TArray<struct FBlueprintOnlineItem> Items)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.CoreSerializeItemSetCallbackProxy.SerializeItemSet");

	UCoreSerializeItemSetCallbackProxy_SerializeItemSet_Params params;
	params.WorldContextObject = WorldContextObject;
	params.Items = Items;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.CoreInventoryBlueprintLibrary.GetItemName
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintOnlineItem    Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// struct FString                 ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
struct FString UCoreInventoryBlueprintLibrary::STATIC_GetItemName(const struct FBlueprintOnlineItem& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.CoreInventoryBlueprintLibrary.GetItemName");

	UCoreInventoryBlueprintLibrary_GetItemName_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.CoreInventoryBlueprintLibrary.GetItemId
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintOnlineItem    Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UCoreInventoryBlueprintLibrary::STATIC_GetItemId(const struct FBlueprintOnlineItem& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.CoreInventoryBlueprintLibrary.GetItemId");

	UCoreInventoryBlueprintLibrary_GetItemId_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.CoreInventoryBlueprintLibrary.GetItemCount
// (Final, Native, Static, Public, HasOutParms, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FBlueprintOnlineItem    Result                         (ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
// int                            ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
int UCoreInventoryBlueprintLibrary::STATIC_GetItemCount(const struct FBlueprintOnlineItem& Result)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.CoreInventoryBlueprintLibrary.GetItemCount");

	UCoreInventoryBlueprintLibrary_GetItemCount_Params params;
	params.Result = Result;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


// Function Squad.CoreGetAllItemsCallbackProxy.GetAllItems
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                 WorldContextObject             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UCoreGetAllItemsCallbackProxy* ReturnValue                    (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
class UCoreGetAllItemsCallbackProxy* UCoreGetAllItemsCallbackProxy::STATIC_GetAllItems(class UObject* WorldContextObject)
{
	static auto fn = UObject::FindObject<UFunction>("Function Squad.CoreGetAllItemsCallbackProxy.GetAllItems");

	UCoreGetAllItemsCallbackProxy_GetAllItems_Params params;
	params.WorldContextObject = WorldContextObject;

	auto flags = fn->FunctionFlags;
	fn->FunctionFlags |= 0x00000400;

	UObject::ProcessEvent(fn, &params);
	fn->FunctionFlags = flags;


	return params.ReturnValue;
}


}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
